{
'appmon': [('start/0', 'start() $1'), ('stop/0', 'stop() $1')],
'appmon_a': [('start/2', 'start(${1:NodeName}, ${2:AppName}) $3'), ('start/3', 'start(${1:NodeName}, ${2:AppName}, ${3:AppId}) $4'), ('stop/0', 'stop() $1')],
'appmon_dg': [('get/3', 'get(${1:Param1}, ${2:DG}, ${3:E}) $4'), ('get/2', 'get(${1:Param1}, ${2:DG}) $3'), ('set/4', 'set(${1:Param1}, ${2:DG}, ${3:E}, ${4:Ref}) $5'), ('av/3', 'av(${1:DG}, ${2:V}, ${3:D}) $4'), ('add/4', 'add(${1:DG}, ${2:E}, ${3:D}, ${4:Ref}) $5'), ('del/2', 'del(${1:DG}, ${2:E}) $3'), ('visited/3', 'visited(${1:DG}, ${2:V}, ${3:Ref}) $4')],
'appmon_info': [('start_link/3', 'start_link(${1:Node}, ${2:Client}, ${3:Opts}) $4'), ('app/4', 'app(${1:Serv}, ${2:AppName}, ${3:OnOff}, ${4:Opts}) $5'), ('pinfo/4', 'pinfo(${1:Serv}, ${2:Pid}, ${3:OnOff}, ${4:Opt}) $5'), ('load/4', 'load(${1:Serv}, ${2:Aux}, ${3:OnOff}, ${4:Opts}) $5'), ('app_ctrl/4', 'app_ctrl(${1:Serv}, ${2:Aux}, ${3:OnOff}, ${4:Opts}) $5')],
'appmon_lb': [('start/1', 'start(${1:CallingPid}) $2'), ('stop/1', 'stop(${1:LbPid}) $2'), ('add_node/2', 'add_node(${1:LbPid}, ${2:Node}) $3'), ('remove_node/2', 'remove_node(${1:LbPid}, ${2:Node}) $3'), ('add_apps/3', 'add_apps(${1:LbPid}, ${2:Apps}, ${3:Node}) $4'), ('remove_app/3', 'remove_app(${1:LbPid}, ${2:App}, ${3:Node}) $4'), ('open_win/2', 'open_win(${1:LbPid}, ${2:Nodes_apps}) $3'), ('update_status/3', 'update_status(${1:LbPid}, ${2:Node}, ${3:Status}) $4')],
'appmon_place': [('place/2', 'place(${1:DG}, ${2:Root}) $3')],
'appmon_txt': [('start/0', 'start() $1'), ('start/1', 'start(${1:Opts}) $2'), ('print/1', 'print(${1:Txt}) $2'), ('fprint/1', 'fprint(${1:File}) $2')],
'appmon_web': [('init/1', 'init(${1:Param1}) $2'), ('handle_call/3', 'handle_call(${1:Param1}, ${2:Param2}, ${3:State}) $4'), ('handle_cast/2', 'handle_cast(${1:Param1}, ${2:State}) $3'), ('handle_info/2', 'handle_info(${1:Param1}, ${2:State}) $3')],
'process_info': [('start/0', 'start() $1'), ('start_link/0', 'start_link() $1'), ('stop/0', 'stop() $1')],
'asn1_db': [('dbnew/1', 'dbnew(${1:Module}) $2'), ('dbsave/2', 'dbsave(${1:OutFile}, ${2:Module}) $3'), ('dbload/1', 'dbload(${1:Module}) $2'), ('dbput/3', 'dbput(${1:Module}, ${2:K}, ${3:V}) $4'), ('dbget/2', 'dbget(${1:Module}, ${2:K}) $3'), ('dbget_all/1', 'dbget_all(${1:K}) $2')],
'asn1ct': [('compile/1', 'compile(${1:File}) $2'), ('compile/2', 'compile(${1:File}, ${2:Options}) $3')],
'asn1ct_check': [('check/2', 'check(${1:S}, ${2:Param2}) $3'), ('storeindb/2', 'storeindb(${1:S}, ${2:Param2}) $3')],
'asn1ct_constructed_ber': [('gen_encode_sequence/3', 'gen_encode_sequence(${1:Erules}, ${2:Typename}, ${3:Param3}) $4')],
'asn1ct_constructed_ber_bin_v2': [('gen_encode_sequence/3', 'gen_encode_sequence(${1:Erules}, ${2:Typename}, ${3:Param3}) $4')],
'asn1ct_constructed_per': [('gen_encode_sequence/3', 'gen_encode_sequence(${1:Erules}, ${2:TypeName}, ${3:D}) $4')],
'asn1ct_gen': [('pgen_exports/3', 'pgen_exports(${1:Erules}, ${2:Param2}, ${3:Param3}) $4'), ('pgen_hrl/5', 'pgen_hrl(${1:Erules}, ${2:Module}, ${3:TypeOrVal}, ${4:Options}, ${5:Param5}) $6'), ('gen_head/3', 'gen_head(${1:Erules}, ${2:Mod}, ${3:Hrl}) $4'), ('demit/1', 'demit(${1:Term}) $2'), ('emit/1', 'emit(${1:Term}) $2'), ('get_inner/1', 'get_inner(${1:Param1}) $2'), ('type/1', 'type(${1:X}) $2'), ('def_to_tag/1', 'def_to_tag(${1:Def}) $2'), ('prim_bif/1', 'prim_bif(${1:X}) $2'), ('type_from_object/1', 'type_from_object(${1:X}) $2'), ('get_typefromobject/1', 'get_typefromobject(${1:Param1}) $2'), ('get_fieldcategory/2', 'get_fieldcategory(${1:Param1}, ${2:FieldName}) $3'), ('get_classfieldcategory/2', 'get_classfieldcategory(${1:Type}, ${2:FieldName}) $3'), ('list2name/1', 'list2name(${1:L}) $2'), ('list2rname/1', 'list2rname(${1:L}) $2'), ('constructed_suffix/2', 'constructed_suffix(${1:Param1}, ${2:Param2}) $3'), ('unify_if_string/1', 'unify_if_string(${1:PrimType}) $2'), ('gen_check_call/7', 'gen_check_call(${1:TopType}, ${2:Cname}, ${3:Type}, ${4:InnerType}, ${5:WhatKind}, ${6:DefaultValue}, ${7:Element}) $8'), ('get_constraint/2', 'get_constraint(${1:C}, ${2:Key}) $3'), ('insert_once/2', 'insert_once(${1:Table}, ${2:Object}) $3'), ('rt2ct_suffix/1', 'rt2ct_suffix(${1:Param1}) $2'), ('rt2ct_suffix/0', 'rt2ct_suffix() $1'), ('index2suffix/1', 'index2suffix(${1:N}) $2'), ('get_record_name_prefix/0', 'get_record_name_prefix() $1')],
'asn1ct_gen_ber': [('pgen/4', 'pgen(${1:OutFile}, ${2:Erules}, ${3:Module}, ${4:TypeOrVal}) $5')],
'asn1ct_gen_ber_bin_v2': [('pgen/4', 'pgen(${1:OutFile}, ${2:Erules}, ${3:Module}, ${4:TypeOrVal}) $5')],
'asn1ct_gen_per': [('pgen/4', 'pgen(${1:OutFile}, ${2:Erules}, ${3:Module}, ${4:TypeOrVal}) $5'), ('gen_dec_prim/3', 'gen_dec_prim(${1:Erules}, ${2:Att}, ${3:BytesVar}) $4'), ('gen_encode_prim/4', 'gen_encode_prim(${1:Erules}, ${2:D}, ${3:DoTag}, ${4:Param4}) $5')],
'asn1ct_gen_per_rt2ct': [('pgen/4', 'pgen(${1:OutFile}, ${2:Erules}, ${3:Module}, ${4:TypeOrVal}) $5'), ('gen_dec_prim/3', 'gen_dec_prim(${1:Erules}, ${2:Att}, ${3:BytesVar}) $4'), ('gen_encode_prim/4', 'gen_encode_prim(${1:Erules}, ${2:D}, ${3:DoTag}, ${4:Param4}) $5')],
'asn1ct_name': [('name_server_loop/1', 'name_server_loop(${1:Vars}) $2'), ('start/0', 'start() $1'), ('stop/0', 'stop() $1'), ('push/1', 'push(${1:V}) $2'), ('pop/1', 'pop(${1:V}) $2'), ('curr/1', 'curr(${1:V}) $2'), ('clear/0', 'clear() $1'), ('delete/1', 'delete(${1:V}) $2'), ('active/1', 'active(${1:V}) $2'), ('prev/1', 'prev(${1:V}) $2'), ('next/1', 'next(${1:V}) $2'), ('all/1', 'all(${1:V}) $2'), ('new/1', 'new(${1:V}) $2')],
'asn1ct_parser2': [('parse/1', 'parse(${1:Tokens}) $2')],
'asn1ct_pretty_format': [('term/1', 'term(${1:Term}) $2')],
'asn1ct_tok': [('get_name/2', 'get_name(${1:Param1}, ${2:L}) $3'), ('tokenise/4', 'tokenise(${1:Stream}, ${2:Param2}, ${3:Lno}, ${4:R}) $5'), ('file/1', 'file(${1:File}) $2')],
'asn1ct_value': [('get_type/3', 'get_type(${1:M}, ${2:Typename}, ${3:Tellname}) $4')],
'asn1rt': [('encode/2', 'encode(${1:Module}, ${2:Acc}) $3'), ('encode/3', 'encode(${1:Module}, ${2:Type}, ${3:Term}) $4'), ('decode/3', 'decode(${1:Module}, ${2:Type}, ${3:Bytes}) $4'), ('load_driver/0', 'load_driver() $1'), ('unload_driver/0', 'unload_driver() $1'), ('info/1', 'info(${1:Module}) $2')],
'asn1rt_ber_bin': [('decode/1', 'decode(${1:Bin}) $2')],
'asn1rt_ber_bin_v2': [('decode/1', 'decode(${1:B}) $2'), ('decode/2', 'decode(${1:B}, ${2:Param2}) $3'), ('match_tags/2', 'match_tags(${1:Tlv}, ${2:Param2}) $3'), ('encode/1', 'encode(${1:Tlv}) $2'), ('encode/2', 'encode(${1:Tlv}, ${2:Method}) $3')],
'asn1rt_check': [('check_bool/2', 'check_bool(${1:Param1}, ${2:Bool2}) $3'), ('check_int/3', 'check_int(${1:Value}, ${2:Value}, ${3:Param3}) $4'), ('check_bitstring/3', 'check_bitstring(${1:V}, ${2:V}, ${3:NBL}) $4'), ('check_octetstring/2', 'check_octetstring(${1:L}, ${2:L}) $3'), ('check_null/2', 'check_null(${1:Param1}, ${2:V}) $3'), ('check_objectidentifier/2', 'check_objectidentifier(${1:OI}, ${2:OI}) $3'), ('check_objectdescriptor/2', 'check_objectdescriptor(${1:OD}, ${2:OD}) $3'), ('check_real/2', 'check_real(${1:R}, ${2:R}) $3'), ('check_enum/3', 'check_enum(${1:Val}, ${2:Val}, ${3:Param3}) $4'), ('check_restrictedstring/2', 'check_restrictedstring(${1:Val}, ${2:Val}) $3')],
'asn1rt_nif': [('encode_per_complete/1', 'encode_per_complete(${1:Param1}) $2'), ('decode_ber_tlv/1', 'decode_ber_tlv(${1:Param1}) $2'), ('encode_ber_tlv/1', 'encode_ber_tlv(${1:Param1}) $2')],
'asn1rt_per_bin': [('dec_fixup/3', 'dec_fixup(${1:Terms}, ${2:Cnames}, ${3:RemBytes}) $4'), ('cindex/3', 'cindex(${1:Ix}, ${2:Val}, ${3:Cname}) $4'), ('list_to_record/2', 'list_to_record(${1:Name}, ${2:Param2}) $3')],
'asn1rt_per_bin_rt2ct': [('dec_fixup/3', 'dec_fixup(${1:Terms}, ${2:Cnames}, ${3:RemBytes}) $4'), ('cindex/3', 'cindex(${1:Ix}, ${2:Val}, ${3:Cname}) $4'), ('list_to_record/2', 'list_to_record(${1:Name}, ${2:Param2}) $3')],
'asn1rt_uper_bin': [('cindex/3', 'cindex(${1:Ix}, ${2:Val}, ${3:Cname}) $4'), ('list_to_record/2', 'list_to_record(${1:Name}, ${2:Param2}) $3')],
'ct': [('install/1', 'install(${1:Opts}) $2'), ('run/1', 'run(${1:TestDirs}) $2'), ('run/2', 'run(${1:TestDir}, ${2:Suite}) $3'), ('run/3', 'run(${1:TestDir}, ${2:Suite}, ${3:Cases}) $4'), ('run_test/1', 'run_test(${1:Opts}) $2'), ('run_testspec/1', 'run_testspec(${1:TestSpec}) $2'), ('step/3', 'step(${1:TestDir}, ${2:Suite}, ${3:Case}) $4'), ('step/4', 'step(${1:TestDir}, ${2:Suite}, ${3:Case}, ${4:Opts}) $5'), ('start_interactive/0', 'start_interactive() $1'), ('stop_interactive/0', 'stop_interactive() $1')],
'ct_config': [('start/1', 'start(${1:Mode}) $2'), ('stop/0', 'stop() $1')],
'ct_config_plain': [('read_config/1', 'read_config(${1:ConfigFile}) $2'), ('check_parameter/1', 'check_parameter(${1:File}) $2')],
'ct_config_xml': [('read_config/1', 'read_config(${1:ConfigFile}) $2'), ('check_parameter/1', 'check_parameter(${1:File}) $2')],
'ct_cover': [('get_spec/1', 'get_spec(${1:File}) $2'), ('add_nodes/1', 'add_nodes(${1:Nodes}) $2'), ('remove_nodes/1', 'remove_nodes(${1:Nodes}) $2')],
'ct_event': [('start_link/0', 'start_link() $1'), ('add_handler/0', 'add_handler() $1'), ('add_handler/1', 'add_handler(${1:Args}) $2'), ('stop/0', 'stop() $1')],
'ct_framework': [('init_tc/3', 'init_tc(${1:Mod}, ${2:Func}, ${3:Args}) $4'), ('end_tc/3', 'end_tc(${1:Mod}, ${2:Func}, ${3:Args}) $4'), ('end_tc/4', 'end_tc(${1:Mod}, ${2:Func}, ${3:TCPid}, ${4:Return}) $5'), ('get_suite/2', 'get_suite(${1:Mod}, ${2:Func}) $3'), ('get_all_cases/1', 'get_all_cases(${1:Suite}) $2')],
'ct_ftp': [('get/3', 'get(${1:KeyOrName}, ${2:RemoteFile}, ${3:LocalFile}) $4'), ('put/3', 'put(${1:KeyOrName}, ${2:LocalFile}, ${3:RemoteFile}) $4'), ('open/1', 'open(${1:KeyOrName}) $2'), ('close/1', 'close(${1:Connection}) $2'), ('send/2', 'send(${1:Connection}, ${2:LocalFile}) $3'), ('send/3', 'send(${1:Connection}, ${2:LocalFile}, ${3:RemoteFile}) $4'), ('recv/2', 'recv(${1:Connection}, ${2:RemoteFile}) $3'), ('recv/3', 'recv(${1:Connection}, ${2:RemoteFile}, ${3:LocalFile}) $4'), ('cd/2', 'cd(${1:Connection}, ${2:Dir}) $3'), ('ls/2', 'ls(${1:Connection}, ${2:Dir}) $3'), ('type/2', 'type(${1:Connection}, ${2:Type}) $3'), ('delete/2', 'delete(${1:Connection}, ${2:File}) $3')],
'ct_gen_conn': [('start/4', 'start(${1:Name}, ${2:Address}, ${3:InitData}, ${4:CallbackMod}) $5'), ('stop/1', 'stop(${1:Handle}) $2')],
'ct_hooks': [('init/1', 'init(${1:Opts}) $2')],
'ct_hooks_lock': [('start/1', 'start(${1:Id}) $2'), ('stop/1', 'stop(${1:Id}) $2'), ('request/0', 'request() $1'), ('release/0', 'release() $1')],
'ct_logs': [('init/1', 'init(${1:Mode}) $2'), ('close/2', 'close(${1:Info}, ${2:StartDir}) $3'), ('init_tc/1', 'init_tc(${1:RefreshLog}) $2'), ('end_tc/1', 'end_tc(${1:TCPid}) $2')],
'ct_make': [('all/0', 'all() $1'), ('all/1', 'all(${1:Options}) $2'), ('files/1', 'files(${1:Fs}) $2'), ('files/2', 'files(${1:Fs0}, ${2:Options}) $3')],
'ct_master': [('run/1', 'run(${1:TestSpecs}) $2'), ('run/3', 'run(${1:TestSpecs}, ${2:AllowUserTerms}, ${3:ExclNodes}) $4'), ('run/4', 'run(${1:TestSpecs}, ${2:AllowUserTerms}, ${3:InclNodes}, ${4:ExclNodes}) $5')],
'ct_master_event': [('start_link/0', 'start_link() $1'), ('add_handler/0', 'add_handler() $1'), ('add_handler/1', 'add_handler(${1:Args}) $2'), ('stop/0', 'stop() $1')],
'ct_master_logs': [('start/2', 'start(${1:LogDir}, ${2:Nodes}) $3'), ('make_all_runs_index/0', 'make_all_runs_index() $1'), ('log/3', 'log(${1:Heading}, ${2:Format}, ${3:Args}) $4'), ('nodedir/2', 'nodedir(${1:Node}, ${2:RunDir}) $3'), ('stop/0', 'stop() $1')],
'ct_repeat': [('loop_test/2', 'loop_test(${1:If}, ${2:Param2}) $3')],
'ct_rpc': [('app_node/2', 'app_node(${1:App}, ${2:Candidates}) $3'), ('app_node/3', 'app_node(${1:App}, ${2:Candidates}, ${3:FailOnBadRPC}) $4'), ('app_node/4', 'app_node(${1:App}, ${2:Candidates}, ${3:FailOnBadRPC}, ${4:Cookie}) $5'), ('call/4', 'call(${1:Node}, ${2:Module}, ${3:Function}, ${4:Args}) $5'), ('call/5', 'call(${1:Node}, ${2:Module}, ${3:Function}, ${4:Args}, ${5:TimeOut}) $6'), ('call/6', 'call(${1:Node}, ${2:Module}, ${3:Function}, ${4:Args}, ${5:TimeOut}, ${6:Cookie}) $7'), ('cast/4', 'cast(${1:Node}, ${2:Module}, ${3:Function}, ${4:Args}) $5'), ('cast/5', 'cast(${1:Node}, ${2:Module}, ${3:Function}, ${4:Args}, ${5:Cookie}) $6')],
'ct_run': [('script_start/0', 'script_start() $1'), ('script_usage/0', 'script_usage() $1')],
'ct_slave': [('start/1', 'start(${1:Node}) $2'), ('start/2', 'start(${1:Host}, ${2:Node}) $3'), ('start/3', 'start(${1:Host}, ${2:Node}, ${3:Opts}) $4'), ('stop/1', 'stop(${1:Node}) $2'), ('stop/2', 'stop(${1:Host}, ${2:Node}) $3')],
'ct_snmp': [('start/2', 'start(${1:Config}, ${2:MgrAgentConfName}) $3'), ('start/3', 'start(${1:Config}, ${2:MgrAgentConfName}, ${3:SnmpAppConfName}) $4'), ('stop/1', 'stop(${1:Config}) $2'), ('get_values/3', 'get_values(${1:Agent}, ${2:Oids}, ${3:MgrAgentConfName}) $4'), ('get_next_values/3', 'get_next_values(${1:Agent}, ${2:Oids}, ${3:MgrAgentConfName}) $4'), ('set_values/4', 'set_values(${1:Agent}, ${2:VarsAndVals}, ${3:MgrAgentConfName}, ${4:Config}) $5'), ('set_info/1', 'set_info(${1:Config}) $2'), ('register_users/2', 'register_users(${1:MgrAgentConfName}, ${2:Users}) $3'), ('register_agents/2', 'register_agents(${1:MgrAgentConfName}, ${2:ManagedAgents}) $3'), ('register_usm_users/2', 'register_usm_users(${1:MgrAgentConfName}, ${2:UsmUsers}) $3'), ('unregister_users/1', 'unregister_users(${1:MgrAgentConfName}) $2'), ('unregister_agents/1', 'unregister_agents(${1:MgrAgentConfName}) $2'), ('update_usm_users/2', 'update_usm_users(${1:MgrAgentConfName}, ${2:UsmUsers}) $3'), ('load_mibs/1', 'load_mibs(${1:Mibs}) $2')],
'ct_ssh': [('connect/1', 'connect(${1:KeyOrName}) $2'), ('connect/2', 'connect(${1:KeyOrName}, ${2:ConnType}) $3'), ('connect/3', 'connect(${1:KeyOrName}, ${2:ConnType}, ${3:ExtraOpts}) $4'), ('disconnect/1', 'disconnect(${1:SSH}) $2'), ('session_open/1', 'session_open(${1:SSH}) $2'), ('session_open/2', 'session_open(${1:SSH}, ${2:Timeout}) $3'), ('session_close/2', 'session_close(${1:SSH}, ${2:ChannelId}) $3'), ('send/3', 'send(${1:SSH}, ${2:ChannelId}, ${3:Data}) $4'), ('send/4', 'send(${1:SSH}, ${2:ChannelId}, ${3:Data}, ${4:Timeout}) $5'), ('send/5', 'send(${1:SSH}, ${2:ChannelId}, ${3:Type}, ${4:Data}, ${5:Timeout}) $6'), ('receive_response/2', 'receive_response(${1:SSH}, ${2:ChannelId}) $3'), ('receive_response/3', 'receive_response(${1:SSH}, ${2:ChannelId}, ${3:End}) $4'), ('receive_response/4', 'receive_response(${1:SSH}, ${2:ChannelId}, ${3:End}, ${4:Timeout}) $5'), ('send_and_receive/3', 'send_and_receive(${1:SSH}, ${2:ChannelId}, ${3:Data}) $4'), ('send_and_receive/4', 'send_and_receive(${1:SSH}, ${2:ChannelId}, ${3:Data}, ${4:End}) $5'), ('send_and_receive/5', 'send_and_receive(${1:SSH}, ${2:ChannelId}, ${3:Data}, ${4:End}, ${5:Timeout}) $6'), ('send_and_receive/6', 'send_and_receive(${1:SSH}, ${2:ChannelId}, ${3:Type}, ${4:Data}, ${5:End}, ${6:Timeout}) $7'), ('exec/2', 'exec(${1:SSH}, ${2:Command}) $3'), ('exec/3', 'exec(${1:SSH}, ${2:Command}, ${3:Timeout}) $4'), ('exec/4', 'exec(${1:SSH}, ${2:ChannelId}, ${3:Command}, ${4:Timeout}) $5'), ('subsystem/3', 'subsystem(${1:SSH}, ${2:ChannelId}, ${3:Subsystem}) $4'), ('subsystem/4', 'subsystem(${1:SSH}, ${2:ChannelId}, ${3:Subsystem}, ${4:Timeout}) $5')],
'ct_telnet': [('open/1', 'open(${1:Name}) $2'), ('open/2', 'open(${1:Name}, ${2:ConnType}) $3'), ('open/3', 'open(${1:KeyOrName}, ${2:ConnType}, ${3:TargetMod}) $4'), ('open/4', 'open(${1:KeyOrName}, ${2:ConnType}, ${3:TargetMod}, ${4:Extra}) $5'), ('close/1', 'close(${1:Connection}) $2')],
'ct_telnet_client': [('open/1', 'open(${1:Server}) $2'), ('open/2', 'open(${1:Server}, ${2:Port}) $3'), ('open/3', 'open(${1:Server}, ${2:Port}, ${3:Timeout}) $4'), ('open/4', 'open(${1:Server}, ${2:Port}, ${3:Timeout}, ${4:KeepAlive}) $5'), ('close/1', 'close(${1:Pid}) $2')],
'ct_testspec': [('prepare_tests/1', 'prepare_tests(${1:Param1}) $2'), ('prepare_tests/2', 'prepare_tests(${1:TestSpec}, ${2:Param2}) $3'), ('collect_tests_from_list/2', 'collect_tests_from_list(${1:Terms}, ${2:Relaxed}) $3'), ('collect_tests_from_list/3', 'collect_tests_from_list(${1:Terms}, ${2:Nodes}, ${3:Param3}) $4'), ('collect_tests_from_file/2', 'collect_tests_from_file(${1:Specs}, ${2:Relaxed}) $3'), ('collect_tests_from_file/3', 'collect_tests_from_file(${1:Specs}, ${2:Nodes}, ${3:Param3}) $4')],
'ct_util': [('start/0', 'start() $1'), ('start/1', 'start(${1:Mode}) $2'), ('start/2', 'start(${1:Mode}, ${2:LogDir}) $3'), ('stop/1', 'stop(${1:Info}) $2'), ('update_last_run_index/0', 'update_last_run_index() $1')],
'cth_log_redirect': [('id/1', 'id(${1:Param1}) $2'), ('init/2', 'init(${1:Param1}, ${2:Param2}) $3'), ('post_init_per_group/4', 'post_init_per_group(${1:Group}, ${2:Config}, ${3:Result}, ${4:State}) $5'), ('pre_end_per_group/3', 'pre_end_per_group(${1:Group}, ${2:Config}, ${3:State}) $4'), ('post_end_per_testcase/4', 'post_end_per_testcase(${1:Param1}, ${2:Param2}, ${3:Result}, ${4:State}) $5')],
'unix_telnet': [('connect/5', 'connect(${1:Ip}, ${2:Port}, ${3:Timeout}, ${4:KeepAlive}, ${5:Extra}) $6'), ('get_prompt_regexp/0', 'get_prompt_regexp() $1')],
'vts': [('start/0', 'start() $1'), ('init_data/5', 'init_data(${1:ConfigFiles}, ${2:EvHandlers}, ${3:LogDir}, ${4:LogOpts}, ${5:Tests}) $6'), ('stop/0', 'stop() $1'), ('report/2', 'report(${1:What}, ${2:Data}) $3')],
'beam_asm': [('module/4', 'module(${1:Code}, ${2:Abst}, ${3:SourceFile}, ${4:Opts}) $5')],
'beam_block': [('module/2', 'module(${1:Param1}, ${2:Param2}) $3')],
'beam_bool': [('module/2', 'module(${1:Param1}, ${2:Param2}) $3')],
'beam_bsm': [('module/2', 'module(${1:Param1}, ${2:Opts}) $3'), ('format_error/1', 'format_error(${1:Param1}) $2')],
'beam_clean': [('module/2', 'module(${1:Param1}, ${2:Opts}) $3')],
'beam_dead': [('module/2', 'module(${1:Param1}, ${2:Param2}) $3')],
'beam_dict': [('new/0', 'new() $1'), ('opcode/2', 'opcode(${1:Op}, ${2:Dict}) $3'), ('highest_opcode/1', 'highest_opcode(${1:Param1}) $2'), ('atom/2', 'atom(${1:Atom}, ${2:Dict}) $3'), ('local/4', 'local(${1:Func}, ${2:Arity}, ${3:Label}, ${4:Dict}) $5'), ('export/4', 'export(${1:Func}, ${2:Arity}, ${3:Label}, ${4:Dict}) $5'), ('import/4', 'import(${1:Mod}, ${2:Func}, ${3:Arity}, ${4:Dict}) $5'), ('string/2', 'string(${1:String}, ${2:Dict}) $3'), ('lambda/3', 'lambda(${1:Lbl}, ${2:NumFree}, ${3:Dict}) $4'), ('literal/2', 'literal(${1:Literal}, ${2:Dict}) $3'), ('line/2', 'line(${1:Param1}, ${2:Param2}) $3'), ('fname/2', 'fname(${1:Name}, ${2:Param2}) $3'), ('atom_table/1', 'atom_table(${1:Dict}) $2'), ('local_table/1', 'local_table(${1:Dict}) $2'), ('export_table/1', 'export_table(${1:Dict}) $2'), ('import_table/1', 'import_table(${1:Dict}) $2'), ('string_table/1', 'string_table(${1:Param1}) $2'), ('lambda_table/1', 'lambda_table(${1:Param1}) $2'), ('literal_table/1', 'literal_table(${1:Dict}) $2'), ('line_table/1', 'line_table(${1:Param1}) $2')],
'beam_disasm': [('file/1', 'file(${1:File}) $2')],
'beam_flatten': [('module/2', 'module(${1:Param1}, ${2:Param2}) $3')],
'beam_jump': [('module/2', 'module(${1:Param1}, ${2:Param2}) $3'), ('module_labels/1', 'module_labels(${1:Param1}) $2'), ('is_unreachable_after/1', 'is_unreachable_after(${1:Instruction}) $2'), ('is_exit_instruction/1', 'is_exit_instruction(${1:Instruction}) $2'), ('remove_unused_labels/1', 'remove_unused_labels(${1:Instructions0}) $2'), ('is_label_used_in/2', 'is_label_used_in(${1:LabelNumber}, ${2:Is}) $3')],
'beam_listing': [('module/2', 'module(${1:File}, ${2:Param2}) $3')],
'beam_opcodes': [('format_number/0', 'format_number() $1')],
'beam_peep': [('module/2', 'module(${1:Param1}, ${2:Param2}) $3')],
'beam_receive': [('module/2', 'module(${1:Param1}, ${2:Param2}) $3')],
'beam_split': [('module/2', 'module(${1:Param1}, ${2:Param2}) $3')],
'beam_trim': [('module/2', 'module(${1:Param1}, ${2:Param2}) $3')],
'beam_type': [('module/2', 'module(${1:Param1}, ${2:Param2}) $3')],
'beam_utils': [('is_killed_block/2', 'is_killed_block(${1:Register}, ${2:Is}) $3'), ('is_killed/3', 'is_killed(${1:Register}, ${2:Is}, ${3:State}) $4'), ('is_killed_at/3', 'is_killed_at(${1:Reg}, ${2:Lbl}, ${3:State}) $4'), ('is_not_used/3', 'is_not_used(${1:Register}, ${2:Is}, ${3:State}) $4'), ('is_not_used_at/3', 'is_not_used_at(${1:R}, ${2:Lbl}, ${3:D}) $4'), ('empty_label_index/0', 'empty_label_index() $1'), ('index_label/3', 'index_label(${1:Label}, ${2:Is0}, ${3:State}) $4'), ('index_labels/1', 'index_labels(${1:FunctionIs}) $2'), ('code_at/2', 'code_at(${1:Label}, ${2:State}) $3'), ('bif_to_test/3', 'bif_to_test(${1:Bif}, ${2:Param2}, ${3:Fail}) $4'), ('is_pure_test/1', 'is_pure_test(${1:Param1}) $2'), ('live_opt/1', 'live_opt(${1:Is0}) $2'), ('delete_live_annos/1', 'delete_live_annos(${1:Param1}) $2'), ('combine_heap_needs/2', 'combine_heap_needs(${1:HeapNeed1}, ${2:HeapNeed2}) $3')],
'beam_validator': [('file/1', 'file(${1:Name}) $2'), ('files/1', 'files(${1:Param1}) $2')],
'cerl': [('abstract/1', 'abstract(${1:T}) $2'), ('add_ann/2', 'add_ann(${1:Terms}, ${2:Node}) $3'), ('alias_pat/1', 'alias_pat(${1:Node}) $2'), ('alias_var/1', 'alias_var(${1:Node}) $2'), ('ann_abstract/2', 'ann_abstract(${1:As}, ${2:T}) $3'), ('ann_c_alias/3', 'ann_c_alias(${1:As}, ${2:Var}, ${3:Pattern}) $4'), ('ann_c_apply/3', 'ann_c_apply(${1:As}, ${2:Operator}, ${3:Arguments}) $4'), ('ann_c_atom/2', 'ann_c_atom(${1:As}, ${2:Name}) $3'), ('ann_c_call/4', 'ann_c_call(${1:As}, ${2:Module}, ${3:Name}, ${4:Arguments}) $5'), ('ann_c_case/3', 'ann_c_case(${1:As}, ${2:Expr}, ${3:Clauses}) $4'), ('ann_c_catch/2', 'ann_c_catch(${1:As}, ${2:Body}) $3'), ('ann_c_char/2', 'ann_c_char(${1:As}, ${2:Value}) $3'), ('ann_c_clause/3', 'ann_c_clause(${1:As}, ${2:Patterns}, ${3:Body}) $4'), ('ann_c_clause/4', 'ann_c_clause(${1:As}, ${2:Patterns}, ${3:Guard}, ${4:Body}) $5'), ('ann_c_cons/3', 'ann_c_cons(${1:As}, ${2:Head}, ${3:Tail}) $4'), ('ann_c_float/2', 'ann_c_float(${1:As}, ${2:Value}) $3'), ('ann_c_fname/3', 'ann_c_fname(${1:As}, ${2:Atom}, ${3:Arity}) $4'), ('ann_c_fun/3', 'ann_c_fun(${1:As}, ${2:Variables}, ${3:Body}) $4'), ('ann_c_int/2', 'ann_c_int(${1:As}, ${2:Value}) $3'), ('ann_c_let/4', 'ann_c_let(${1:As}, ${2:Variables}, ${3:Argument}, ${4:Body}) $5'), ('ann_c_letrec/3', 'ann_c_letrec(${1:As}, ${2:Defs}, ${3:Body}) $4'), ('ann_c_module/4', 'ann_c_module(${1:As}, ${2:Name}, ${3:Exports}, ${4:Es}) $5'), ('ann_c_module/5', 'ann_c_module(${1:As}, ${2:Name}, ${3:Exports}, ${4:Attrs}, ${5:Definitions}) $6'), ('ann_c_nil/1', 'ann_c_nil(${1:As}) $2'), ('ann_c_cons_skel/3', 'ann_c_cons_skel(${1:As}, ${2:Head}, ${3:Tail}) $4'), ('ann_c_tuple_skel/2', 'ann_c_tuple_skel(${1:As}, ${2:Es}) $3'), ('ann_c_primop/3', 'ann_c_primop(${1:As}, ${2:Name}, ${3:Arguments}) $4'), ('ann_c_receive/2', 'ann_c_receive(${1:As}, ${2:Clauses}) $3'), ('ann_c_receive/4', 'ann_c_receive(${1:As}, ${2:Clauses}, ${3:Timeout}, ${4:Action}) $5'), ('ann_c_seq/3', 'ann_c_seq(${1:As}, ${2:Argument}, ${3:Body}) $4'), ('ann_c_string/2', 'ann_c_string(${1:As}, ${2:Value}) $3'), ('ann_c_try/6', 'ann_c_try(${1:As}, ${2:Expr}, ${3:Vs}, ${4:Body}, ${5:Evs}, ${6:Handler}) $7'), ('ann_c_tuple/2', 'ann_c_tuple(${1:As}, ${2:Es}) $3'), ('ann_c_values/2', 'ann_c_values(${1:As}, ${2:Es}) $3'), ('ann_c_var/2', 'ann_c_var(${1:As}, ${2:Name}) $3'), ('ann_make_data/3', 'ann_make_data(${1:As}, ${2:Param2}, ${3:Es}) $4'), ('ann_make_list/2', 'ann_make_list(${1:As}, ${2:List}) $3'), ('ann_make_list/3', 'ann_make_list(${1:As}, ${2:Param2}, ${3:Tail}) $4'), ('ann_make_data_skel/3', 'ann_make_data_skel(${1:As}, ${2:Param2}, ${3:Es}) $4'), ('ann_make_tree/3', 'ann_make_tree(${1:As}, ${2:Param2}, ${3:Param3}) $4'), ('apply_args/1', 'apply_args(${1:Node}) $2'), ('apply_arity/1', 'apply_arity(${1:Node}) $2'), ('apply_op/1', 'apply_op(${1:Node}) $2'), ('atom_lit/1', 'atom_lit(${1:Node}) $2'), ('atom_name/1', 'atom_name(${1:Node}) $2'), ('atom_val/1', 'atom_val(${1:Node}) $2'), ('c_alias/2', 'c_alias(${1:Var}, ${2:Pattern}) $3'), ('c_apply/2', 'c_apply(${1:Operator}, ${2:Arguments}) $3'), ('c_atom/1', 'c_atom(${1:Name}) $2'), ('c_call/3', 'c_call(${1:Module}, ${2:Name}, ${3:Arguments}) $4'), ('c_case/2', 'c_case(${1:Expr}, ${2:Clauses}) $3'), ('c_catch/1', 'c_catch(${1:Body}) $2'), ('c_char/1', 'c_char(${1:Value}) $2'), ('c_clause/2', 'c_clause(${1:Patterns}, ${2:Body}) $3'), ('c_clause/3', 'c_clause(${1:Patterns}, ${2:Guard}, ${3:Body}) $4'), ('c_cons/2', 'c_cons(${1:Head}, ${2:Tail}) $3'), ('c_float/1', 'c_float(${1:Value}) $2'), ('c_fname/2', 'c_fname(${1:Atom}, ${2:Arity}) $3'), ('c_fun/2', 'c_fun(${1:Variables}, ${2:Body}) $3'), ('c_int/1', 'c_int(${1:Value}) $2'), ('c_let/3', 'c_let(${1:Variables}, ${2:Argument}, ${3:Body}) $4'), ('c_letrec/2', 'c_letrec(${1:Defs}, ${2:Body}) $3'), ('c_module/3', 'c_module(${1:Name}, ${2:Exports}, ${3:Definitions}) $4'), ('c_module/4', 'c_module(${1:Name}, ${2:Exports}, ${3:Attributes}, ${4:Definitions}) $5'), ('c_nil/0', 'c_nil() $1'), ('c_cons_skel/2', 'c_cons_skel(${1:Head}, ${2:Tail}) $3'), ('c_tuple_skel/1', 'c_tuple_skel(${1:Es}) $2'), ('c_primop/2', 'c_primop(${1:Name}, ${2:Arguments}) $3'), ('c_receive/1', 'c_receive(${1:Clauses}) $2'), ('c_receive/3', 'c_receive(${1:Clauses}, ${2:Timeout}, ${3:Action}) $4'), ('c_seq/2', 'c_seq(${1:Argument}, ${2:Body}) $3'), ('c_string/1', 'c_string(${1:Value}) $2'), ('c_try/5', 'c_try(${1:Expr}, ${2:Vs}, ${3:Body}, ${4:Evs}, ${5:Handler}) $6'), ('c_tuple/1', 'c_tuple(${1:Es}) $2'), ('c_values/1', 'c_values(${1:Es}) $2'), ('c_var/1', 'c_var(${1:Name}) $2'), ('call_args/1', 'call_args(${1:Node}) $2'), ('call_arity/1', 'call_arity(${1:Node}) $2'), ('call_module/1', 'call_module(${1:Node}) $2'), ('call_name/1', 'call_name(${1:Node}) $2'), ('case_arg/1', 'case_arg(${1:Node}) $2'), ('case_arity/1', 'case_arity(${1:Node}) $2'), ('case_clauses/1', 'case_clauses(${1:Node}) $2'), ('catch_body/1', 'catch_body(${1:Node}) $2'), ('char_lit/1', 'char_lit(${1:Node}) $2'), ('char_val/1', 'char_val(${1:Node}) $2'), ('clause_arity/1', 'clause_arity(${1:Node}) $2'), ('clause_body/1', 'clause_body(${1:Node}) $2'), ('clause_guard/1', 'clause_guard(${1:Node}) $2'), ('clause_pats/1', 'clause_pats(${1:Node}) $2'), ('clause_vars/1', 'clause_vars(${1:Clause}) $2'), ('concrete/1', 'concrete(${1:Val}) $2'), ('cons_hd/1', 'cons_hd(${1:Param1}) $2'), ('cons_tl/1', 'cons_tl(${1:Param1}) $2'), ('copy_ann/2', 'copy_ann(${1:Source}, ${2:Target}) $3'), ('data_arity/1', 'data_arity(${1:Param1}) $2'), ('data_es/1', 'data_es(${1:Param1}) $2'), ('data_type/1', 'data_type(${1:Param1}) $2'), ('float_lit/1', 'float_lit(${1:Node}) $2'), ('float_val/1', 'float_val(${1:Node}) $2'), ('fname_arity/1', 'fname_arity(${1:Param1}) $2'), ('fname_id/1', 'fname_id(${1:Param1}) $2'), ('fold_literal/1', 'fold_literal(${1:Node}) $2'), ('from_records/1', 'from_records(${1:Node}) $2'), ('fun_arity/1', 'fun_arity(${1:Node}) $2'), ('fun_body/1', 'fun_body(${1:Node}) $2'), ('fun_vars/1', 'fun_vars(${1:Node}) $2'), ('get_ann/1', 'get_ann(${1:Node}) $2'), ('int_lit/1', 'int_lit(${1:Node}) $2'), ('int_val/1', 'int_val(${1:Node}) $2'), ('is_c_alias/1', 'is_c_alias(${1:Param1}) $2'), ('is_c_apply/1', 'is_c_apply(${1:Param1}) $2'), ('is_c_atom/1', 'is_c_atom(${1:Param1}) $2'), ('is_c_call/1', 'is_c_call(${1:Param1}) $2'), ('is_c_case/1', 'is_c_case(${1:Node}) $2'), ('is_c_catch/1', 'is_c_catch(${1:Param1}) $2'), ('is_c_char/1', 'is_c_char(${1:Param1}) $2'), ('is_c_clause/1', 'is_c_clause(${1:Param1}) $2'), ('is_c_cons/1', 'is_c_cons(${1:Param1}) $2'), ('is_c_float/1', 'is_c_float(${1:Param1}) $2'), ('is_c_fname/1', 'is_c_fname(${1:Param1}) $2'), ('is_c_fun/1', 'is_c_fun(${1:Param1}) $2'), ('is_c_int/1', 'is_c_int(${1:Param1}) $2'), ('is_c_let/1', 'is_c_let(${1:Param1}) $2'), ('is_c_letrec/1', 'is_c_letrec(${1:Param1}) $2'), ('is_c_list/1', 'is_c_list(${1:Param1}) $2'), ('is_c_module/1', 'is_c_module(${1:Param1}) $2'), ('is_c_nil/1', 'is_c_nil(${1:Param1}) $2'), ('is_c_primop/1', 'is_c_primop(${1:Param1}) $2'), ('is_c_receive/1', 'is_c_receive(${1:Param1}) $2'), ('is_c_seq/1', 'is_c_seq(${1:Param1}) $2'), ('is_c_string/1', 'is_c_string(${1:Param1}) $2'), ('is_c_try/1', 'is_c_try(${1:Param1}) $2'), ('is_c_tuple/1', 'is_c_tuple(${1:Param1}) $2'), ('is_c_values/1', 'is_c_values(${1:Param1}) $2'), ('is_c_var/1', 'is_c_var(${1:Param1}) $2'), ('is_data/1', 'is_data(${1:Param1}) $2'), ('is_leaf/1', 'is_leaf(${1:Node}) $2'), ('is_literal/1', 'is_literal(${1:Param1}) $2'), ('is_literal_term/1', 'is_literal_term(${1:Param1}) $2'), ('is_print_char/1', 'is_print_char(${1:Param1}) $2'), ('is_print_string/1', 'is_print_string(${1:Param1}) $2'), ('let_arg/1', 'let_arg(${1:Node}) $2'), ('let_arity/1', 'let_arity(${1:Node}) $2'), ('let_body/1', 'let_body(${1:Node}) $2'), ('let_vars/1', 'let_vars(${1:Node}) $2'), ('letrec_body/1', 'letrec_body(${1:Node}) $2'), ('letrec_defs/1', 'letrec_defs(${1:Node}) $2'), ('letrec_vars/1', 'letrec_vars(${1:Node}) $2'), ('list_elements/1', 'list_elements(${1:Param1}) $2'), ('list_length/1', 'list_length(${1:L}) $2'), ('make_data/2', 'make_data(${1:CType}, ${2:Es}) $3'), ('make_list/1', 'make_list(${1:List}) $2'), ('make_list/2', 'make_list(${1:List}, ${2:Tail}) $3'), ('make_data_skel/2', 'make_data_skel(${1:CType}, ${2:Es}) $3'), ('make_tree/2', 'make_tree(${1:Type}, ${2:Gs}) $3'), ('meta/1', 'meta(${1:Node}) $2'), ('module_attrs/1', 'module_attrs(${1:Node}) $2'), ('module_defs/1', 'module_defs(${1:Node}) $2'), ('module_exports/1', 'module_exports(${1:Node}) $2'), ('module_name/1', 'module_name(${1:Node}) $2'), ('module_vars/1', 'module_vars(${1:Node}) $2'), ('pat_list_vars/1', 'pat_list_vars(${1:Ps}) $2'), ('pat_vars/1', 'pat_vars(${1:Node}) $2'), ('primop_args/1', 'primop_args(${1:Node}) $2'), ('primop_arity/1', 'primop_arity(${1:Node}) $2'), ('primop_name/1', 'primop_name(${1:Node}) $2'), ('receive_action/1', 'receive_action(${1:Node}) $2'), ('receive_clauses/1', 'receive_clauses(${1:Node}) $2'), ('receive_timeout/1', 'receive_timeout(${1:Node}) $2'), ('seq_arg/1', 'seq_arg(${1:Node}) $2'), ('seq_body/1', 'seq_body(${1:Node}) $2'), ('set_ann/2', 'set_ann(${1:Node}, ${2:List}) $3'), ('string_lit/1', 'string_lit(${1:Node}) $2'), ('string_val/1', 'string_val(${1:Node}) $2'), ('subtrees/1', 'subtrees(${1:T}) $2'), ('to_records/1', 'to_records(${1:Node}) $2'), ('try_arg/1', 'try_arg(${1:Node}) $2'), ('try_body/1', 'try_body(${1:Node}) $2'), ('try_vars/1', 'try_vars(${1:Node}) $2'), ('try_evars/1', 'try_evars(${1:Node}) $2'), ('try_handler/1', 'try_handler(${1:Node}) $2'), ('tuple_arity/1', 'tuple_arity(${1:Param1}) $2'), ('tuple_es/1', 'tuple_es(${1:Param1}) $2'), ('type/1', 'type(${1:Node}) $2'), ('unfold_literal/1', 'unfold_literal(${1:Node}) $2'), ('update_c_alias/3', 'update_c_alias(${1:Node}, ${2:Var}, ${3:Pattern}) $4'), ('update_c_apply/3', 'update_c_apply(${1:Node}, ${2:Operator}, ${3:Arguments}) $4'), ('update_c_call/4', 'update_c_call(${1:Node}, ${2:Module}, ${3:Name}, ${4:Arguments}) $5'), ('update_c_case/3', 'update_c_case(${1:Node}, ${2:Expr}, ${3:Clauses}) $4'), ('update_c_catch/2', 'update_c_catch(${1:Node}, ${2:Body}) $3'), ('update_c_clause/4', 'update_c_clause(${1:Node}, ${2:Patterns}, ${3:Guard}, ${4:Body}) $5'), ('update_c_cons/3', 'update_c_cons(${1:Node}, ${2:Head}, ${3:Tail}) $4'), ('update_c_cons_skel/3', 'update_c_cons_skel(${1:Node}, ${2:Head}, ${3:Tail}) $4'), ('update_c_fname/2', 'update_c_fname(${1:Node}, ${2:Atom}) $3'), ('update_c_fname/3', 'update_c_fname(${1:Node}, ${2:Atom}, ${3:Atom}) $4'), ('update_c_fun/3', 'update_c_fun(${1:Node}, ${2:Variables}, ${3:Body}) $4'), ('update_c_let/4', 'update_c_let(${1:Old}, ${2:Variables}, ${3:Argument}, ${4:Body}) $5'), ('update_c_letrec/3', 'update_c_letrec(${1:Node}, ${2:Defs}, ${3:Body}) $4'), ('update_c_module/5', 'update_c_module(${1:Node}, ${2:Name}, ${3:Exports}, ${4:Attrs}, ${5:Definitions}) $6'), ('update_c_primop/3', 'update_c_primop(${1:Node}, ${2:Name}, ${3:Arguments}) $4'), ('update_c_receive/4', 'update_c_receive(${1:Node}, ${2:Clauses}, ${3:Timeout}, ${4:Action}) $5'), ('update_c_seq/3', 'update_c_seq(${1:Node}, ${2:Argument}, ${3:Body}) $4'), ('update_c_try/6', 'update_c_try(${1:Node}, ${2:Expr}, ${3:Vs}, ${4:Body}, ${5:Evs}, ${6:Handler}) $7'), ('update_c_tuple/2', 'update_c_tuple(${1:Node}, ${2:Es}) $3'), ('update_c_tuple_skel/2', 'update_c_tuple_skel(${1:Old}, ${2:Es}) $3'), ('update_c_values/2', 'update_c_values(${1:Node}, ${2:Es}) $3'), ('update_c_var/2', 'update_c_var(${1:Node}, ${2:Name}) $3'), ('update_data/3', 'update_data(${1:Node}, ${2:CType}, ${3:Es}) $4'), ('update_list/2', 'update_list(${1:Node}, ${2:List}) $3'), ('update_list/3', 'update_list(${1:Node}, ${2:List}, ${3:Tail}) $4'), ('update_data_skel/3', 'update_data_skel(${1:Node}, ${2:CType}, ${3:Es}) $4'), ('update_tree/2', 'update_tree(${1:Node}, ${2:Gs}) $3'), ('update_tree/3', 'update_tree(${1:Node}, ${2:Type}, ${3:Gs}) $4'), ('values_arity/1', 'values_arity(${1:Node}) $2'), ('values_es/1', 'values_es(${1:Node}) $2'), ('var_name/1', 'var_name(${1:Node}) $2'), ('c_binary/1', 'c_binary(${1:Segments}) $2'), ('update_c_binary/2', 'update_c_binary(${1:Node}, ${2:Segments}) $3'), ('ann_c_binary/2', 'ann_c_binary(${1:As}, ${2:Segments}) $3'), ('is_c_binary/1', 'is_c_binary(${1:Param1}) $2'), ('binary_segments/1', 'binary_segments(${1:Node}) $2'), ('c_bitstr/3', 'c_bitstr(${1:Val}, ${2:Size}, ${3:Flags}) $4'), ('c_bitstr/4', 'c_bitstr(${1:Val}, ${2:Size}, ${3:Unit}, ${4:Flags}) $5'), ('c_bitstr/5', 'c_bitstr(${1:Val}, ${2:Size}, ${3:Unit}, ${4:Type}, ${5:Flags}) $6'), ('update_c_bitstr/5', 'update_c_bitstr(${1:Node}, ${2:Val}, ${3:Size}, ${4:Unit}, ${5:Flags}) $6'), ('update_c_bitstr/6', 'update_c_bitstr(${1:Node}, ${2:Val}, ${3:Size}, ${4:Unit}, ${5:Type}, ${6:Flags}) $7'), ('ann_c_bitstr/5', 'ann_c_bitstr(${1:As}, ${2:Val}, ${3:Size}, ${4:Unit}, ${5:Flags}) $6'), ('ann_c_bitstr/6', 'ann_c_bitstr(${1:As}, ${2:Val}, ${3:Size}, ${4:Unit}, ${5:Type}, ${6:Flags}) $7'), ('is_c_bitstr/1', 'is_c_bitstr(${1:Param1}) $2'), ('bitstr_val/1', 'bitstr_val(${1:Node}) $2'), ('bitstr_size/1', 'bitstr_size(${1:Node}) $2'), ('bitstr_bitsize/1', 'bitstr_bitsize(${1:Node}) $2'), ('bitstr_unit/1', 'bitstr_unit(${1:Node}) $2'), ('bitstr_type/1', 'bitstr_type(${1:Node}) $2'), ('bitstr_flags/1', 'bitstr_flags(${1:Node}) $2')],
'cerl_clauses': [('any_catchall/1', 'any_catchall(${1:Param1}) $2'), ('eval_guard/1', 'eval_guard(${1:E}) $2'), ('is_catchall/1', 'is_catchall(${1:C}) $2'), ('match/2', 'match(${1:P}, ${2:Expr}) $3'), ('match_list/2', 'match_list(${1:Ps}, ${2:Es}) $3'), ('reduce/1', 'reduce(${1:Clauses}) $2'), ('reduce/2', 'reduce(${1:Cs}, ${2:Es}) $3')],
'cerl_inline': [('core_transform/2', 'core_transform(${1:Code}, ${2:Opts}) $3'), ('transform/1', 'transform(${1:Tree}) $2'), ('transform/2', 'transform(${1:Code}, ${2:Opts}) $3')],
'cerl_trees': [('depth/1', 'depth(${1:T}) $2'), ('fold/3', 'fold(${1:Function}, ${2:S}, ${3:T}) $4'), ('free_variables/1', 'free_variables(${1:T}) $2'), ('get_label/1', 'get_label(${1:T}) $2'), ('label/1', 'label(${1:T}) $2'), ('label/2', 'label(${1:T}, ${2:N}) $3'), ('map/2', 'map(${1:Function}, ${2:T}) $3'), ('mapfold/3', 'mapfold(${1:Function}, ${2:S0}, ${3:T}) $4'), ('size/1', 'size(${1:T}) $2'), ('variables/1', 'variables(${1:T}) $2')],
'compile': [('file/1', 'file(${1:File}) $2'), ('file/2', 'file(${1:File}, ${2:Opt}) $3'), ('noenv_file/2', 'noenv_file(${1:File}, ${2:Opt}) $3'), ('format_error/1', 'format_error(${1:ErrorDescriptor}) $2'), ('iofile/1', 'iofile(${1:File}) $2')],
'core_lib': [('get_anno/1', 'get_anno(${1:C}) $2'), ('set_anno/2', 'set_anno(${1:C}, ${2:A}) $3')],
'core_lint': [('module/1', 'module(${1:M}) $2'), ('module/2', 'module(${1:Param1}, ${2:Param2}) $3'), ('format_error/1', 'format_error(${1:Param1}) $2')],
'core_parse': [('parse/1', 'parse(${1:Tokens}) $2'), ('parse_and_scan/1', 'parse_and_scan(${1:Param1}) $2'), ('format_error/1', 'format_error(${1:Message}) $2')],
'core_pp': [('format/1', 'format(${1:Node}) $2')],
'core_scan': [('string/1', 'string(${1:Cs}) $2'), ('string/2', 'string(${1:Cs}, ${2:StartPos}) $3'), ('format_error/1', 'format_error(${1:Other}) $2')],
'erl_bifs': [('is_pure/3', 'is_pure(${1:Module}, ${2:Name}, ${3:Arity}) $4'), ('is_safe/3', 'is_safe(${1:Module}, ${2:Name}, ${3:Arity}) $4'), ('is_exit_bif/3', 'is_exit_bif(${1:Module}, ${2:Name}, ${3:Arity}) $4')],
'rec_env': [('bind/3', 'bind(${1:Key}, ${2:Value}, ${3:Env}) $4'), ('bind_list/3', 'bind_list(${1:Keys}, ${2:Values}, ${3:Env}) $4'), ('bind_recursive/4', 'bind_recursive(${1:Keys}, ${2:Values}, ${3:Fun}, ${4:Env}) $5'), ('delete/2', 'delete(${1:Key}, ${2:Env}) $3'), ('empty/0', 'empty() $1'), ('get/2', 'get(${1:Key}, ${2:Env}) $3'), ('is_defined/2', 'is_defined(${1:Key}, ${2:Env}) $3'), ('is_empty/1', 'is_empty(${1:Param1}) $2'), ('keys/1', 'keys(${1:Env}) $2'), ('lookup/2', 'lookup(${1:Key}, ${2:Env}) $3'), ('new_key/1', 'new_key(${1:Env}) $2'), ('new_key/2', 'new_key(${1:Function}, ${2:Env}) $3'), ('new_keys/2', 'new_keys(${1:N}, ${2:Env}) $3'), ('new_keys/3', 'new_keys(${1:N}, ${2:Function}, ${3:Env}) $4'), ('size/1', 'size(${1:Env}) $2'), ('to_list/1', 'to_list(${1:Env}) $2')],
'sys_core_dsetel': [('module/2', 'module(${1:M0}, ${2:Param2}) $3')],
'sys_core_fold': [('module/2', 'module(${1:Param1}, ${2:Opts}) $3'), ('format_error/1', 'format_error(${1:Param1}) $2')],
'sys_core_inline': [('module/2', 'module(${1:Param1}, ${2:Opts}) $3')],
'sys_expand_pmod': [('forms/4', 'forms(${1:Fs0}, ${2:Ps}, ${3:Es0}, ${4:Ds0}) $5')],
'sys_pre_attributes': [('parse_transform/2', 'parse_transform(${1:Forms}, ${2:Options}) $3')],
'sys_pre_expand': [('module/2', 'module(${1:Fs0}, ${2:Opts0}) $3')],
'v3_codegen': [('module/2', 'module(${1:Param1}, ${2:Options}) $3')],
'v3_core': [('module/2', 'module(${1:Param1}, ${2:Opts}) $3'), ('format_error/1', 'format_error(${1:Param1}) $2')],
'v3_kernel': [('module/2', 'module(${1:Param1}, ${2:Param2}) $3'), ('format_error/1', 'format_error(${1:Param1}) $2')],
'v3_kernel_pp': [('format/1', 'format(${1:Node}) $2')],
'v3_life': [('module/2', 'module(${1:Param1}, ${2:Param2}) $3')],
'cosEventApp': [('start/0', 'start() $1'), ('stop/0', 'stop() $1'), ('install/0', 'install() $1'), ('uninstall/0', 'uninstall() $1'), ('start_channel/0', 'start_channel() $1'), ('start_channel/1', 'start_channel(${1:Options}) $2'), ('start_channel_link/0', 'start_channel_link() $1'), ('start_channel_link/1', 'start_channel_link(${1:Options}) $2'), ('stop_channel/1', 'stop_channel(${1:ChannelObj}) $2')],
'CosEventChannelAdmin_AlreadyConnected': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosEventChannelAdmin_ConsumerAdmin': [('obtain_push_supplier/1', 'obtain_push_supplier(${1:OE_THIS}) $2'), ('obtain_push_supplier/2', 'obtain_push_supplier(${1:OE_THIS}, ${2:OE_Options}) $3'), ('obtain_pull_supplier/1', 'obtain_pull_supplier(${1:OE_THIS}) $2')],
'CosEventChannelAdmin_EventChannel': [('for_consumers/1', 'for_consumers(${1:OE_THIS}) $2'), ('for_consumers/2', 'for_consumers(${1:OE_THIS}, ${2:OE_Options}) $3'), ('for_suppliers/1', 'for_suppliers(${1:OE_THIS}) $2')],
'CosEventChannelAdmin_ProxyPullConsumer': [('connect_pull_supplier/2', 'connect_pull_supplier(${1:OE_THIS}, ${2:Pull_supplier}) $3'), ('connect_pull_supplier/3', 'connect_pull_supplier(${1:OE_THIS}, ${2:OE_Options}, ${3:Pull_supplier}) $4')],
'CosEventChannelAdmin_ProxyPullConsumer_impl': [('init/1', 'init(${1:Param1}) $2'), ('terminate/2', 'terminate(${1:Param1}, ${2:Param2}) $3'), ('code_change/3', 'code_change(${1:Param1}, ${2:State}, ${3:Param3}) $4'), ('handle_info/2', 'handle_info(${1:Param1}, ${2:State}) $3')],
'CosEventChannelAdmin_ProxyPullSupplier': [('connect_pull_consumer/2', 'connect_pull_consumer(${1:OE_THIS}, ${2:Pull_consumer}) $3'), ('connect_pull_consumer/3', 'connect_pull_consumer(${1:OE_THIS}, ${2:OE_Options}, ${3:Pull_consumer}) $4')],
'CosEventChannelAdmin_ProxyPushConsumer': [('connect_push_supplier/2', 'connect_push_supplier(${1:OE_THIS}, ${2:Push_supplier}) $3'), ('connect_push_supplier/3', 'connect_push_supplier(${1:OE_THIS}, ${2:OE_Options}, ${3:Push_supplier}) $4')],
'CosEventChannelAdmin_ProxyPushConsumer_impl': [('init/1', 'init(${1:Param1}) $2'), ('terminate/2', 'terminate(${1:Param1}, ${2:Param2}) $3'), ('code_change/3', 'code_change(${1:Param1}, ${2:State}, ${3:Param3}) $4'), ('handle_info/2', 'handle_info(${1:Param1}, ${2:State}) $3')],
'CosEventChannelAdmin_ProxyPushSupplier': [('connect_push_consumer/2', 'connect_push_consumer(${1:OE_THIS}, ${2:Push_consumer}) $3'), ('connect_push_consumer/3', 'connect_push_consumer(${1:OE_THIS}, ${2:OE_Options}, ${3:Push_consumer}) $4')],
'CosEventChannelAdmin_SupplierAdmin': [('obtain_push_consumer/1', 'obtain_push_consumer(${1:OE_THIS}) $2'), ('obtain_push_consumer/2', 'obtain_push_consumer(${1:OE_THIS}, ${2:OE_Options}) $3'), ('obtain_pull_consumer/1', 'obtain_pull_consumer(${1:OE_THIS}) $2')],
'CosEventChannelAdmin_SupplierAdmin_impl': [('init/1', 'init(${1:Param1}) $2'), ('terminate/2', 'terminate(${1:Param1}, ${2:Param2}) $3'), ('code_change/3', 'code_change(${1:Param1}, ${2:State}, ${3:Param3}) $4'), ('handle_info/2', 'handle_info(${1:Param1}, ${2:State}) $3')],
'CosEventChannelAdmin_TypeError': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosEventComm_Disconnected': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosEventComm_PullConsumer': [('disconnect_pull_consumer/1', 'disconnect_pull_consumer(${1:OE_THIS}) $2'), ('disconnect_pull_consumer/2', 'disconnect_pull_consumer(${1:OE_THIS}, ${2:OE_Options}) $3')],
'CosEventComm_PullSupplier': [('pull/1', 'pull(${1:OE_THIS}) $2'), ('pull/2', 'pull(${1:OE_THIS}, ${2:OE_Options}) $3'), ('try_pull/1', 'try_pull(${1:OE_THIS}) $2')],
'CosEventComm_PushConsumer': [('push/2', 'push(${1:OE_THIS}, ${2:Data}) $3'), ('push/3', 'push(${1:OE_THIS}, ${2:OE_Options}, ${3:Data}) $4'), ('disconnect_push_consumer/1', 'disconnect_push_consumer(${1:OE_THIS}) $2')],
'CosEventComm_PushSupplier': [('disconnect_push_supplier/1', 'disconnect_push_supplier(${1:OE_THIS}) $2'), ('disconnect_push_supplier/2', 'disconnect_push_supplier(${1:OE_THIS}, ${2:OE_Options}) $3')],
'oe_cosEventApp': [('oe_register/0', 'oe_register() $1'), ('oe_unregister/0', 'oe_unregister() $1'), ('oe_get_module/5', 'oe_get_module(${1:OE_IFR}, ${2:OE_Parent}, ${3:ID}, ${4:Name}, ${5:Version}) $6')],
'oe_CosEventChannelAdmin': [('oe_register/0', 'oe_register() $1'), ('oe_unregister/0', 'oe_unregister() $1'), ('oe_get_module/5', 'oe_get_module(${1:OE_IFR}, ${2:OE_Parent}, ${3:ID}, ${4:Name}, ${5:Version}) $6')],
'oe_CosEventComm': [('oe_register/0', 'oe_register() $1'), ('oe_unregister/0', 'oe_unregister() $1'), ('oe_get_module/5', 'oe_get_module(${1:OE_IFR}, ${2:OE_Parent}, ${3:ID}, ${4:Name}, ${5:Version}) $6')],
'oe_CosEventComm_CAdmin': [('obtain_push_supplier/1', 'obtain_push_supplier(${1:OE_THIS}) $2'), ('obtain_push_supplier/2', 'obtain_push_supplier(${1:OE_THIS}, ${2:OE_Options}) $3'), ('obtain_pull_supplier/1', 'obtain_pull_supplier(${1:OE_THIS}) $2')],
'oe_CosEventComm_CAdmin_impl': [('init/1', 'init(${1:Param1}) $2'), ('terminate/2', 'terminate(${1:Param1}, ${2:Param2}) $3'), ('code_change/3', 'code_change(${1:Param1}, ${2:State}, ${3:Param3}) $4'), ('handle_info/2', 'handle_info(${1:Param1}, ${2:State}) $3')],
'oe_CosEventComm_Channel': [('for_consumers/1', 'for_consumers(${1:OE_THIS}) $2'), ('for_consumers/2', 'for_consumers(${1:OE_THIS}, ${2:OE_Options}) $3'), ('for_suppliers/1', 'for_suppliers(${1:OE_THIS}) $2')],
'oe_CosEventComm_Channel_impl': [('init/1', 'init(${1:Param1}) $2'), ('terminate/2', 'terminate(${1:Param1}, ${2:Param2}) $3'), ('code_change/3', 'code_change(${1:Param1}, ${2:State}, ${3:Param3}) $4'), ('handle_info/2', 'handle_info(${1:Param1}, ${2:State}) $3')],
'oe_CosEventComm_Event': [('send/2', 'send(${1:OE_THIS}, ${2:Event}) $3'), ('send/3', 'send(${1:OE_THIS}, ${2:OE_Options}, ${3:Event}) $4'), ('send_sync/2', 'send_sync(${1:OE_THIS}, ${2:Event}) $3')],
'oe_CosEventComm_PullerS': [('connect_pull_consumer/2', 'connect_pull_consumer(${1:OE_THIS}, ${2:Pull_consumer}) $3'), ('connect_pull_consumer/3', 'connect_pull_consumer(${1:OE_THIS}, ${2:OE_Options}, ${3:Pull_consumer}) $4')],
'oe_CosEventComm_PullerS_impl': [('init/1', 'init(${1:Param1}) $2'), ('terminate/2', 'terminate(${1:Param1}, ${2:Param2}) $3'), ('code_change/3', 'code_change(${1:Param1}, ${2:State}, ${3:Param3}) $4'), ('handle_info/2', 'handle_info(${1:Param1}, ${2:State}) $3')],
'oe_CosEventComm_PusherS': [('connect_push_consumer/2', 'connect_push_consumer(${1:OE_THIS}, ${2:Push_consumer}) $3'), ('connect_push_consumer/3', 'connect_push_consumer(${1:OE_THIS}, ${2:OE_Options}, ${3:Push_consumer}) $4')],
'oe_CosEventComm_PusherS_impl': [('init/1', 'init(${1:Param1}) $2'), ('terminate/2', 'terminate(${1:Param1}, ${2:Param2}) $3'), ('code_change/3', 'code_change(${1:Param1}, ${2:State}, ${3:Param3}) $4'), ('handle_info/2', 'handle_info(${1:Param1}, ${2:State}) $3')],
'CosEventDomainAdmin': [("'CycleDetection'/0", "'CycleDetection'() $1"), ("'AuthorizeCycles'/0", "'AuthorizeCycles'() $1"), ("'ForbidCycles'/0", "'ForbidCycles'() $1")],
'CosEventDomainAdmin_AlreadyExists': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosEventDomainAdmin_Connection': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosEventDomainAdmin_ConnectionIDSeq': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosEventDomainAdmin_ConnectionNotFound': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosEventDomainAdmin_CycleCreationForbidden': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosEventDomainAdmin_CycleSeq': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosEventDomainAdmin_DiamondCreationForbidden': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosEventDomainAdmin_DiamondSeq': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosEventDomainAdmin_DomainIDSeq': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosEventDomainAdmin_DomainNotFound': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosEventDomainAdmin_EventDomain': [('add_channel/2', 'add_channel(${1:OE_THIS}, ${2:Channel}) $3'), ('add_channel/3', 'add_channel(${1:OE_THIS}, ${2:OE_Options}, ${3:Channel}) $4'), ('get_all_channels/1', 'get_all_channels(${1:OE_THIS}) $2')],
'CosEventDomainAdmin_EventDomain_impl': [('init/1', 'init(${1:Param1}) $2'), ('terminate/2', 'terminate(${1:Param1}, ${2:Param2}) $3'), ('code_change/3', 'code_change(${1:Param1}, ${2:State}, ${3:Param3}) $4'), ('handle_info/2', 'handle_info(${1:Param1}, ${2:State}) $3')],
'CosEventDomainAdmin_EventDomainFactory': [('create_event_domain/3', 'create_event_domain(${1:OE_THIS}, ${2:InitialQoS}, ${3:InitialAdmin}) $4'), ('create_event_domain/4', 'create_event_domain(${1:OE_THIS}, ${2:OE_Options}, ${3:InitialQoS}, ${4:InitialAdmin}) $5'), ('get_all_domains/1', 'get_all_domains(${1:OE_THIS}) $2')],
'CosEventDomainAdmin_EventDomainFactory_impl': [('init/1', 'init(${1:Param1}) $2'), ('terminate/2', 'terminate(${1:Param1}, ${2:Param2}) $3'), ('code_change/3', 'code_change(${1:Param1}, ${2:State}, ${3:Param3}) $4'), ('handle_info/2', 'handle_info(${1:Param1}, ${2:State}) $3')],
'CosEventDomainAdmin_MemberIDSeq': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosEventDomainAdmin_RouteSeq': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'cosEventDomainApp': [('get_option/3', 'get_option(${1:Key}, ${2:OptionList}, ${3:DefaultList}) $4'), ('create_name/2', 'create_name(${1:Name}, ${2:Type}) $3'), ('create_name/1', 'create_name(${1:Type}) $2'), ('create_id/0', 'create_id() $1'), ('create_id/1', 'create_id(${1:OldID}) $2'), ('is_debug_compiled/0', 'is_debug_compiled() $1'), ('install/0', 'install() $1'), ('uninstall/0', 'uninstall() $1'), ('start_factory/0', 'start_factory() $1'), ('start_factory/1', 'start_factory(${1:Options}) $2'), ('start_factory_link/0', 'start_factory_link() $1'), ('start_factory_link/1', 'start_factory_link(${1:Options}) $2'), ('stop_factory/1', 'stop_factory(${1:ChannelObj}) $2'), ('start/0', 'start() $1'), ('stop/0', 'stop() $1'), ('create_link/3', 'create_link(${1:Module}, ${2:Env}, ${3:ArgList}) $4'), ('get_qos/1', 'get_qos(${1:Properties}) $2'), ('get_admin/1', 'get_admin(${1:Properties}) $2')],
'oe_CosEventDomainAdmin': [('oe_register/0', 'oe_register() $1'), ('oe_unregister/0', 'oe_unregister() $1'), ('oe_get_module/5', 'oe_get_module(${1:OE_IFR}, ${2:OE_Parent}, ${3:ID}, ${4:Name}, ${5:Version}) $6')],
'CosFileTransfer': [("'FTAM_1'/0", "'FTAM_1'() $1"), ("'FTAM_2'/0", "'FTAM_2'() $1"), ("'FTAM_3'/0", "'FTAM_3'() $1")],
'CosFileTransfer_AccessLevel': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosFileTransfer_CommandNotImplementedException': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosFileTransfer_Directory': [('list/2', 'list(${1:OE_THIS}, ${2:How_many}) $3'), ('list/3', 'list(${1:OE_THIS}, ${2:OE_Options}, ${3:How_many}) $4')],
'CosFileTransfer_Directory_impl': [('init/1', 'init(${1:Param1}) $2'), ('terminate/2', 'terminate(${1:Param1}, ${2:Param2}) $3')],
'CosFileTransfer_File': [("'_get_name'/1", "'_get_name'(${1:OE_THIS}) $2"), ("'_get_name'/2", "'_get_name'(${1:OE_THIS}, ${2:OE_Options}) $3"), ("'_get_complete_file_name'/1", "'_get_complete_file_name'(${1:OE_THIS}) $2")],
'CosFileTransfer_File_impl': [('init/1', 'init(${1:Param1}) $2'), ('terminate/2', 'terminate(${1:Param1}, ${2:Param2}) $3')],
'CosFileTransfer_FileIterator': [('next_one/1', 'next_one(${1:OE_THIS}) $2'), ('next_one/2', 'next_one(${1:OE_THIS}, ${2:OE_Options}) $3'), ('next_n/2', 'next_n(${1:OE_THIS}, ${2:How_many}) $3')],
'CosFileTransfer_FileIterator_impl': [('init/1', 'init(${1:Param1}) $2'), ('terminate/2', 'terminate(${1:Param1}, ${2:Param2}) $3'), ('code_change/3', 'code_change(${1:Param1}, ${2:State}, ${3:Param3}) $4'), ('handle_info/2', 'handle_info(${1:Info}, ${2:State}) $3')],
'CosFileTransfer_FileList': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosFileTransfer_FileNameList': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosFileTransfer_FileNotFoundException': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosFileTransfer_FileTransferSession': [("'_get_protocols_supported'/1", "'_get_protocols_supported'(${1:OE_THIS}) $2"), ("'_get_protocols_supported'/2", "'_get_protocols_supported'(${1:OE_THIS}, ${2:OE_Options}) $3"), ('set_directory/2', 'set_directory(${1:OE_THIS}, ${2:New_directory}) $3')],
'CosFileTransfer_FileTransferSession_impl': [('init/1', 'init(${1:Param1}) $2'), ('terminate/2', 'terminate(${1:Param1}, ${2:Param2}) $3'), ('code_change/3', 'code_change(${1:Param1}, ${2:State}, ${3:Param3}) $4'), ('handle_info/2', 'handle_info(${1:Info}, ${2:State}) $3')],
'CosFileTransfer_FileWrapper': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosFileTransfer_IllegalOperationException': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosFileTransfer_ProtocolAddressList': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosFileTransfer_ProtocolSupport': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosFileTransfer_RequestFailureException': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosFileTransfer_SessionException': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosFileTransfer_SupportedProtocolAddresses': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosFileTransfer_TransferException': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosFileTransfer_VirtualFileSystem': [("'_get_file_system_type'/1", "'_get_file_system_type'(${1:OE_THIS}) $2"), ("'_get_file_system_type'/2", "'_get_file_system_type'(${1:OE_THIS}, ${2:OE_Options}) $3"), ("'_get_supported_content_types'/1", "'_get_supported_content_types'(${1:OE_THIS}) $2")],
'CosFileTransfer_VirtualFileSystem_ContentList': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosFileTransfer_VirtualFileSystem_impl': [('init/1', 'init(${1:Param1}) $2'), ('terminate/2', 'terminate(${1:Param1}, ${2:Param2}) $3'), ('code_change/3', 'code_change(${1:Param1}, ${2:State}, ${3:Param3}) $4'), ('handle_info/2', 'handle_info(${1:Param1}, ${2:State}) $3')],
'cosFileTransferApp': [('start/0', 'start() $1'), ('stop/0', 'stop() $1'), ('install/0', 'install() $1'), ('uninstall/0', 'uninstall() $1'), ('create_VFS/4', 'create_VFS(${1:Type}, ${2:Content}, ${3:Host}, ${4:Port}) $5'), ('create_VFS/5', 'create_VFS(${1:Param1}, ${2:Param2}, ${3:Param3}, ${4:Param4}, ${5:Param5}) $6'), ('get_buffert_size/0', 'get_buffert_size() $1')],
'cosFileTransferNATIVE_file': [('open/1', 'open(${1:Param1}) $2'), ('open/2', 'open(${1:Param1}, ${2:Param2}) $3'), ('open/3', 'open(${1:Param1}, ${2:Param2}, ${3:Param3}) $4'), ('user/3', 'user(${1:Param1}, ${2:Param2}, ${3:Param3}) $4'), ('pwd/1', 'pwd(${1:Param1}) $2'), ('cd/2', 'cd(${1:Param1}, ${2:Dir}) $3'), ('mkdir/2', 'mkdir(${1:Param1}, ${2:Dir}) $3'), ('rmdir/2', 'rmdir(${1:Param1}, ${2:Dir}) $3'), ('nlist/1', 'nlist(${1:Param1}) $2'), ('nlist/2', 'nlist(${1:Param1}, ${2:Dir}) $3'), ('delete/2', 'delete(${1:Param1}, ${2:File}) $3'), ('recv/2', 'recv(${1:Param1}, ${2:Param2}) $3'), ('recv/3', 'recv(${1:Param1}, ${2:Remote}, ${3:Local}) $4'), ('send/2', 'send(${1:Param1}, ${2:Param2}) $3'), ('send/3', 'send(${1:Param1}, ${2:Local}, ${3:Remote}) $4'), ('close/1', 'close(${1:Param1}) $2'), ('insert/4', 'insert(${1:Param1}, ${2:Source}, ${3:Target}, ${4:Offset}) $5')],
'oe_CosFileTransfer': [('oe_register/0', 'oe_register() $1'), ('oe_unregister/0', 'oe_unregister() $1'), ('oe_get_module/5', 'oe_get_module(${1:OE_IFR}, ${2:OE_Parent}, ${3:ID}, ${4:Name}, ${5:Version}) $6')],
'CosNotification': [("'EventReliability'/0", "'EventReliability'() $1"), ("'BestEffort'/0", "'BestEffort'() $1"), ("'Persistent'/0", "'Persistent'() $1")],
'CosNotification_AdminPropertiesAdmin': [('get_admin/1', 'get_admin(${1:OE_THIS}) $2'), ('get_admin/2', 'get_admin(${1:OE_THIS}, ${2:OE_Options}) $3'), ('set_admin/2', 'set_admin(${1:OE_THIS}, ${2:Admin}) $3')],
'CosNotification_Common': [('get_option/3', 'get_option(${1:Key}, ${2:OptionList}, ${3:DefaultList}) $4'), ('create_name/2', 'create_name(${1:Name}, ${2:Type}) $3'), ('create_name/1', 'create_name(${1:Type}) $2'), ('create_id/0', 'create_id() $1'), ('create_id/1', 'create_id(${1:OldID}) $2'), ('is_debug_compiled/0', 'is_debug_compiled() $1'), ('type_check/2', 'type_check(${1:Obj}, ${2:Mod}) $3'), ('send_stubborn/5', 'send_stubborn(${1:M}, ${2:F}, ${3:A}, ${4:MaxR}, ${5:Wait}) $6'), ('create_link/3', 'create_link(${1:Module}, ${2:Env}, ${3:ArgList}) $4'), ('disconnect/3', 'disconnect(${1:Module}, ${2:Function}, ${3:Object}) $4'), ('do_disconnect/3', 'do_disconnect(${1:Module}, ${2:Function}, ${3:Object}) $4'), ('notify/1', 'notify(${1:Items}) $2')],
'CosNotification_EventBatch': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'cosNotification_eventDB': [('validate_event/5', 'validate_event(${1:Param1}, ${2:Events}, ${3:Filters}, ${4:DBRef}, ${5:Param5}) $6'), ('create_db/4', 'create_db(${1:QoS}, ${2:GCTime}, ${3:GCLimit}, ${4:TimeRef}) $5'), ('destroy_db/1', 'destroy_db(${1:Param1}) $2'), ('get_event/1', 'get_event(${1:DBRef}) $2'), ('get_event/2', 'get_event(${1:DBRef}, ${2:Delete}) $3'), ('get_events/2', 'get_events(${1:Param1}, ${2:Max}) $3'), ('get_events/3', 'get_events(${1:Param1}, ${2:Max}, ${3:Max}) $4'), ('delete_events/1', 'delete_events(${1:Param1}) $2'), ('update/2', 'update(${1:DBRef}, ${2:QoS}) $3'), ('update/4', 'update(${1:DBRef}, ${2:QoS}, ${3:LifeFilter}, ${4:PrioFilter}) $5'), ('add_event/2', 'add_event(${1:DBRef}, ${2:Event}) $3'), ('add_event/4', 'add_event(${1:DBRef}, ${2:Event}, ${3:LifeFilter}, ${4:PrioFilter}) $5'), ('add_and_get_event/2', 'add_and_get_event(${1:DBRef}, ${2:Event}) $3'), ('add_and_get_event/3', 'add_and_get_event(${1:DBRef}, ${2:Event}, ${3:Delete}) $4'), ('add_and_get_event/4', 'add_and_get_event(${1:DBRef}, ${2:Event}, ${3:LifeFilter}, ${4:PrioFilter}) $5'), ('add_and_get_event/5', 'add_and_get_event(${1:DBRef}, ${2:Event}, ${3:LifeFilter}, ${4:PrioFilter}, ${5:Delete}) $6'), ('gc_events/2', 'gc_events(${1:DBRef}, ${2:Priority}) $3'), ('gc_events_local/4', 'gc_events_local(${1:ORef}, ${2:DRef}, ${3:Param3}, ${4:Param4}) $5'), ('gc_start/2', 'gc_start(${1:Param1}, ${2:Priority}) $3'), ('filter_events/2', 'filter_events(${1:Events}, ${2:Filters}) $3'), ('filter_events/3', 'filter_events(${1:Events}, ${2:Filters}, ${3:Reversed}) $4'), ('status/2', 'status(${1:DBRef}, ${2:Param2}) $3')],
'CosNotification_EventHeader': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosNotification_EventType': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosNotification_EventTypeSeq': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'cosNotification_Filter': [('eval/1', 'eval(${1:Tree}) $2'), ('eval/2', 'eval(${1:Lit}, ${2:Env}) $3'), ('create_filter/1', 'create_filter(${1:Str}) $2'), ('check_types/1', 'check_types(${1:Types}) $2'), ('match_types/3', 'match_types(${1:Domain}, ${2:Type}, ${3:Param3}) $4'), ('validate_types/1', 'validate_types(${1:Param1}) $2')],
'CosNotification_FixedEventHeader': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'cosNotification_Grammar': [('parse/1', 'parse(${1:Tokens}) $2'), ('parse_and_scan/1', 'parse_and_scan(${1:Param1}) $2'), ('format_error/1', 'format_error(${1:Message}) $2')],
'CosNotification_NamedPropertyRange': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosNotification_NamedPropertyRangeSeq': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosNotification_Property': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosNotification_PropertyError': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosNotification_PropertyErrorSeq': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosNotification_PropertyRange': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosNotification_PropertySeq': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosNotification_QoSAdmin': [('get_qos/1', 'get_qos(${1:OE_THIS}) $2'), ('get_qos/2', 'get_qos(${1:OE_THIS}, ${2:OE_Options}) $3'), ('set_qos/2', 'set_qos(${1:OE_THIS}, ${2:Qos}) $3')],
'cosNotification_Scanner': [('scan/1', 'scan(${1:Str}) $2')],
'CosNotification_StructuredEvent': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosNotification_UnsupportedAdmin': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosNotification_UnsupportedQoS': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'cosNotificationApp': [('start/0', 'start() $1'), ('stop/0', 'stop() $1'), ('start_factory/1', 'start_factory(${1:Args}) $2'), ('start_factory/0', 'start_factory() $1'), ('stop_factory/1', 'stop_factory(${1:Fac}) $2'), ('start_global_factory/0', 'start_global_factory() $1'), ('start_global_factory/1', 'start_global_factory(${1:Args}) $2'), ('start_filter_factory/1', 'start_filter_factory(${1:Args}) $2'), ('start_filter_factory/0', 'start_filter_factory() $1'), ('stop_filter_factory/1', 'stop_filter_factory(${1:Fac}) $2'), ('install/0', 'install() $1'), ('install/1', 'install(${1:Param1}) $2'), ('uninstall/0', 'uninstall() $1'), ('uninstall/1', 'uninstall(${1:Param1}) $2'), ('install_event/0', 'install_event() $1'), ('install_event/1', 'install_event(${1:Param1}) $2'), ('uninstall_event/0', 'uninstall_event() $1'), ('uninstall_event/1', 'uninstall_event(${1:Param1}) $2'), ('install_typed/0', 'install_typed() $1'), ('install_typed/1', 'install_typed(${1:Param1}) $2'), ('uninstall_typed/0', 'uninstall_typed() $1'), ('uninstall_typed/1', 'uninstall_typed(${1:Param1}) $2'), ('create_structured_event/6', 'create_structured_event(${1:Param1}, ${2:Param2}, ${3:Param3}, ${4:Param4}, ${5:Param5}, ${6:Param6}) $7'), ('type_check/0', 'type_check() $1'), ('notify/0', 'notify() $1'), ('max_events/0', 'max_events() $1'), ('timeout_events/0', 'timeout_events() $1'), ('interval_events/0', 'interval_events() $1')],
'CosNotifyChannelAdmin_AdminIDSeq': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosNotifyChannelAdmin_AdminLimit': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosNotifyChannelAdmin_AdminLimitExceeded': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosNotifyChannelAdmin_AdminNotFound': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosNotifyChannelAdmin_ChannelIDSeq': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosNotifyChannelAdmin_ChannelNotFound': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosNotifyChannelAdmin_ConnectionAlreadyActive': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosNotifyChannelAdmin_ConnectionAlreadyInactive': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosNotifyChannelAdmin_ConsumerAdmin': [("'_get_MyID'/1", "'_get_MyID'(${1:OE_THIS}) $2"), ("'_get_MyID'/2", "'_get_MyID'(${1:OE_THIS}, ${2:OE_Options}) $3"), ("'_get_MyChannel'/1", "'_get_MyChannel'(${1:OE_THIS}) $2")],
'CosNotifyChannelAdmin_ConsumerAdmin_impl': [('get_proxy_supplier/4', 'get_proxy_supplier(${1:Param1}, ${2:Param2}, ${3:State}, ${4:Proxy_id}) $5'), ('obtain_notification_pull_supplier/4', 'obtain_notification_pull_supplier(${1:OE_THIS}, ${2:Param2}, ${3:State}, ${4:Ctype}) $5'), ('obtain_notification_push_supplier/4', 'obtain_notification_push_supplier(${1:OE_THIS}, ${2:Param2}, ${3:State}, ${4:Ctype}) $5'), ('destroy/3', 'destroy(${1:Param1}, ${2:Param2}, ${3:State}) $4')],
'CosNotifyChannelAdmin_EventChannel': [("'_get_MyFactory'/1", "'_get_MyFactory'(${1:OE_THIS}) $2"), ("'_get_MyFactory'/2", "'_get_MyFactory'(${1:OE_THIS}, ${2:OE_Options}) $3"), ("'_get_default_consumer_admin'/1", "'_get_default_consumer_admin'(${1:OE_THIS}) $2")],
'CosNotifyChannelAdmin_EventChannel_impl': [('new_for_consumers/4', 'new_for_consumers(${1:OE_THIS}, ${2:Param2}, ${3:State}, ${4:Op}) $5'), ('new_for_suppliers/4', 'new_for_suppliers(${1:OE_THIS}, ${2:Param2}, ${3:State}, ${4:Op}) $5'), ('get_consumeradmin/4', 'get_consumeradmin(${1:OE_THIS}, ${2:Param2}, ${3:State}, ${4:What}) $5'), ('get_supplieradmin/4', 'get_supplieradmin(${1:OE_THIS}, ${2:Param2}, ${3:State}, ${4:What}) $5'), ('get_all_consumeradmins/3', 'get_all_consumeradmins(${1:Param1}, ${2:Param2}, ${3:State}) $4'), ('get_all_supplieradmins/3', 'get_all_supplieradmins(${1:Param1}, ${2:Param2}, ${3:State}) $4')],
'CosNotifyChannelAdmin_EventChannelFactory': [('create_channel/3', 'create_channel(${1:OE_THIS}, ${2:Initial_qos}, ${3:Initial_admin}) $4'), ('create_channel/4', 'create_channel(${1:OE_THIS}, ${2:OE_Options}, ${3:Initial_qos}, ${4:Initial_admin}) $5'), ('get_all_channels/1', 'get_all_channels(${1:OE_THIS}) $2')],
'CosNotifyChannelAdmin_EventChannelFactory_impl': [('create_channel/5', 'create_channel(${1:OE_THIS}, ${2:Param2}, ${3:State}, ${4:InitQoS}, ${5:InitAdmin}) $6'), ('get_all_channels/3', 'get_all_channels(${1:Param1}, ${2:Param2}, ${3:State}) $4'), ('get_event_channel/4', 'get_event_channel(${1:Param1}, ${2:Param2}, ${3:State}, ${4:Id}) $5')],
'CosNotifyChannelAdmin_NotConnected': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosNotifyChannelAdmin_ProxyConsumer': [("'_get_MyType'/1", "'_get_MyType'(${1:OE_THIS}) $2"), ("'_get_MyType'/2", "'_get_MyType'(${1:OE_THIS}, ${2:OE_Options}) $3"), ("'_get_MyAdmin'/1", "'_get_MyAdmin'(${1:OE_THIS}) $2")],
'CosNotifyChannelAdmin_ProxyIDSeq': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosNotifyChannelAdmin_ProxyNotFound': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosNotifyChannelAdmin_ProxyPullConsumer': [('connect_any_pull_supplier/2', 'connect_any_pull_supplier(${1:OE_THIS}, ${2:Pull_supplier}) $3'), ('connect_any_pull_supplier/3', 'connect_any_pull_supplier(${1:OE_THIS}, ${2:OE_Options}, ${3:Pull_supplier}) $4'), ('suspend_connection/1', 'suspend_connection(${1:OE_THIS}) $2')],
'CosNotifyChannelAdmin_ProxyPullSupplier': [('connect_any_pull_consumer/2', 'connect_any_pull_consumer(${1:OE_THIS}, ${2:Pull_consumer}) $3'), ('connect_any_pull_consumer/3', 'connect_any_pull_consumer(${1:OE_THIS}, ${2:OE_Options}, ${3:Pull_consumer}) $4')],
'CosNotifyChannelAdmin_ProxyPushConsumer': [('connect_any_push_supplier/2', 'connect_any_push_supplier(${1:OE_THIS}, ${2:Push_supplier}) $3'), ('connect_any_push_supplier/3', 'connect_any_push_supplier(${1:OE_THIS}, ${2:OE_Options}, ${3:Push_supplier}) $4')],
'CosNotifyChannelAdmin_ProxyPushSupplier': [('connect_any_push_consumer/2', 'connect_any_push_consumer(${1:OE_THIS}, ${2:Push_consumer}) $3'), ('connect_any_push_consumer/3', 'connect_any_push_consumer(${1:OE_THIS}, ${2:OE_Options}, ${3:Push_consumer}) $4'), ('suspend_connection/1', 'suspend_connection(${1:OE_THIS}) $2')],
'CosNotifyChannelAdmin_ProxySupplier': [("'_get_MyType'/1", "'_get_MyType'(${1:OE_THIS}) $2"), ("'_get_MyType'/2", "'_get_MyType'(${1:OE_THIS}, ${2:OE_Options}) $3"), ("'_get_MyAdmin'/1", "'_get_MyAdmin'(${1:OE_THIS}) $2")],
'CosNotifyChannelAdmin_SequenceProxyPullConsumer': [('connect_sequence_pull_supplier/2', 'connect_sequence_pull_supplier(${1:OE_THIS}, ${2:Pull_supplier}) $3'), ('connect_sequence_pull_supplier/3', 'connect_sequence_pull_supplier(${1:OE_THIS}, ${2:OE_Options}, ${3:Pull_supplier}) $4'), ('suspend_connection/1', 'suspend_connection(${1:OE_THIS}) $2')],
'CosNotifyChannelAdmin_SequenceProxyPullSupplier': [('connect_sequence_pull_consumer/2', 'connect_sequence_pull_consumer(${1:OE_THIS}, ${2:Pull_consumer}) $3'), ('connect_sequence_pull_consumer/3', 'connect_sequence_pull_consumer(${1:OE_THIS}, ${2:OE_Options}, ${3:Pull_consumer}) $4')],
'CosNotifyChannelAdmin_SequenceProxyPushConsumer': [('connect_sequence_push_supplier/2', 'connect_sequence_push_supplier(${1:OE_THIS}, ${2:Push_supplier}) $3'), ('connect_sequence_push_supplier/3', 'connect_sequence_push_supplier(${1:OE_THIS}, ${2:OE_Options}, ${3:Push_supplier}) $4')],
'CosNotifyChannelAdmin_SequenceProxyPushSupplier': [('connect_sequence_push_consumer/2', 'connect_sequence_push_consumer(${1:OE_THIS}, ${2:Push_consumer}) $3'), ('connect_sequence_push_consumer/3', 'connect_sequence_push_consumer(${1:OE_THIS}, ${2:OE_Options}, ${3:Push_consumer}) $4'), ('suspend_connection/1', 'suspend_connection(${1:OE_THIS}) $2')],
'CosNotifyChannelAdmin_StructuredProxyPullConsumer': [('connect_structured_pull_supplier/2', 'connect_structured_pull_supplier(${1:OE_THIS}, ${2:Pull_supplier}) $3'), ('connect_structured_pull_supplier/3', 'connect_structured_pull_supplier(${1:OE_THIS}, ${2:OE_Options}, ${3:Pull_supplier}) $4'), ('suspend_connection/1', 'suspend_connection(${1:OE_THIS}) $2')],
'CosNotifyChannelAdmin_StructuredProxyPullSupplier': [('connect_structured_pull_consumer/2', 'connect_structured_pull_consumer(${1:OE_THIS}, ${2:Pull_consumer}) $3'), ('connect_structured_pull_consumer/3', 'connect_structured_pull_consumer(${1:OE_THIS}, ${2:OE_Options}, ${3:Pull_consumer}) $4')],
'CosNotifyChannelAdmin_StructuredProxyPushConsumer': [('connect_structured_push_supplier/2', 'connect_structured_push_supplier(${1:OE_THIS}, ${2:Push_supplier}) $3'), ('connect_structured_push_supplier/3', 'connect_structured_push_supplier(${1:OE_THIS}, ${2:OE_Options}, ${3:Push_supplier}) $4')],
'CosNotifyChannelAdmin_StructuredProxyPushSupplier': [('connect_structured_push_consumer/2', 'connect_structured_push_consumer(${1:OE_THIS}, ${2:Push_consumer}) $3'), ('connect_structured_push_consumer/3', 'connect_structured_push_consumer(${1:OE_THIS}, ${2:OE_Options}, ${3:Push_consumer}) $4'), ('suspend_connection/1', 'suspend_connection(${1:OE_THIS}) $2')],
'CosNotifyChannelAdmin_SupplierAdmin': [("'_get_MyID'/1", "'_get_MyID'(${1:OE_THIS}) $2"), ("'_get_MyID'/2", "'_get_MyID'(${1:OE_THIS}, ${2:OE_Options}) $3"), ("'_get_MyChannel'/1", "'_get_MyChannel'(${1:OE_THIS}) $2")],
'CosNotifyChannelAdmin_SupplierAdmin_impl': [('get_proxy_consumer/4', 'get_proxy_consumer(${1:Param1}, ${2:Param2}, ${3:State}, ${4:ProxyId}) $5'), ('obtain_notification_pull_consumer/4', 'obtain_notification_pull_consumer(${1:OE_THIS}, ${2:Param2}, ${3:State}, ${4:Ctype}) $5'), ('obtain_notification_push_consumer/4', 'obtain_notification_push_consumer(${1:OE_THIS}, ${2:Param2}, ${3:State}, ${4:Ctype}) $5'), ('destroy/3', 'destroy(${1:Param1}, ${2:Param2}, ${3:State}) $4')],
'CosNotifyComm_InvalidEventType': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosNotifyComm_NotifyPublish': [('offer_change/3', 'offer_change(${1:OE_THIS}, ${2:Added}, ${3:Removed}) $4'), ('offer_change/4', 'offer_change(${1:OE_THIS}, ${2:OE_Options}, ${3:Added}, ${4:Removed}) $5')],
'CosNotifyComm_NotifySubscribe': [('subscription_change/3', 'subscription_change(${1:OE_THIS}, ${2:Added}, ${3:Removed}) $4'), ('subscription_change/4', 'subscription_change(${1:OE_THIS}, ${2:OE_Options}, ${3:Added}, ${4:Removed}) $5')],
'CosNotifyComm_PullConsumer': [('offer_change/3', 'offer_change(${1:OE_THIS}, ${2:Added}, ${3:Removed}) $4'), ('offer_change/4', 'offer_change(${1:OE_THIS}, ${2:OE_Options}, ${3:Added}, ${4:Removed}) $5')],
'CosNotifyComm_PullSupplier': [('subscription_change/3', 'subscription_change(${1:OE_THIS}, ${2:Added}, ${3:Removed}) $4'), ('subscription_change/4', 'subscription_change(${1:OE_THIS}, ${2:OE_Options}, ${3:Added}, ${4:Removed}) $5')],
'CosNotifyComm_PushConsumer': [('offer_change/3', 'offer_change(${1:OE_THIS}, ${2:Added}, ${3:Removed}) $4'), ('offer_change/4', 'offer_change(${1:OE_THIS}, ${2:OE_Options}, ${3:Added}, ${4:Removed}) $5')],
'CosNotifyComm_PushSupplier': [('subscription_change/3', 'subscription_change(${1:OE_THIS}, ${2:Added}, ${3:Removed}) $4'), ('subscription_change/4', 'subscription_change(${1:OE_THIS}, ${2:OE_Options}, ${3:Added}, ${4:Removed}) $5')],
'CosNotifyComm_SequencePullConsumer': [('disconnect_sequence_pull_consumer/1', 'disconnect_sequence_pull_consumer(${1:OE_THIS}) $2'), ('disconnect_sequence_pull_consumer/2', 'disconnect_sequence_pull_consumer(${1:OE_THIS}, ${2:OE_Options}) $3')],
'CosNotifyComm_SequencePullSupplier': [('pull_structured_events/2', 'pull_structured_events(${1:OE_THIS}, ${2:Max_number}) $3'), ('pull_structured_events/3', 'pull_structured_events(${1:OE_THIS}, ${2:OE_Options}, ${3:Max_number}) $4'), ('try_pull_structured_events/2', 'try_pull_structured_events(${1:OE_THIS}, ${2:Max_number}) $3')],
'CosNotifyComm_SequencePushConsumer': [('push_structured_events/2', 'push_structured_events(${1:OE_THIS}, ${2:Notifications}) $3'), ('push_structured_events/3', 'push_structured_events(${1:OE_THIS}, ${2:OE_Options}, ${3:Notifications}) $4'), ('disconnect_sequence_push_consumer/1', 'disconnect_sequence_push_consumer(${1:OE_THIS}) $2')],
'CosNotifyComm_SequencePushSupplier': [('disconnect_sequence_push_supplier/1', 'disconnect_sequence_push_supplier(${1:OE_THIS}) $2'), ('disconnect_sequence_push_supplier/2', 'disconnect_sequence_push_supplier(${1:OE_THIS}, ${2:OE_Options}) $3')],
'CosNotifyComm_StructuredPullConsumer': [('disconnect_structured_pull_consumer/1', 'disconnect_structured_pull_consumer(${1:OE_THIS}) $2'), ('disconnect_structured_pull_consumer/2', 'disconnect_structured_pull_consumer(${1:OE_THIS}, ${2:OE_Options}) $3')],
'CosNotifyComm_StructuredPullSupplier': [('pull_structured_event/1', 'pull_structured_event(${1:OE_THIS}) $2'), ('pull_structured_event/2', 'pull_structured_event(${1:OE_THIS}, ${2:OE_Options}) $3'), ('try_pull_structured_event/1', 'try_pull_structured_event(${1:OE_THIS}) $2')],
'CosNotifyComm_StructuredPushConsumer': [('push_structured_event/2', 'push_structured_event(${1:OE_THIS}, ${2:Notification}) $3'), ('push_structured_event/3', 'push_structured_event(${1:OE_THIS}, ${2:OE_Options}, ${3:Notification}) $4'), ('disconnect_structured_push_consumer/1', 'disconnect_structured_push_consumer(${1:OE_THIS}) $2')],
'CosNotifyComm_StructuredPushSupplier': [('disconnect_structured_push_supplier/1', 'disconnect_structured_push_supplier(${1:OE_THIS}) $2'), ('disconnect_structured_push_supplier/2', 'disconnect_structured_push_supplier(${1:OE_THIS}, ${2:OE_Options}) $3')],
'CosNotifyFilter_CallbackIDSeq': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosNotifyFilter_CallbackNotFound': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosNotifyFilter_ConstraintExp': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosNotifyFilter_ConstraintExpSeq': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosNotifyFilter_ConstraintIDSeq': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosNotifyFilter_ConstraintInfo': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosNotifyFilter_ConstraintInfoSeq': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosNotifyFilter_ConstraintNotFound': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosNotifyFilter_DuplicateConstraintID': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosNotifyFilter_Filter': [("'_get_constraint_grammar'/1", "'_get_constraint_grammar'(${1:OE_THIS}) $2"), ("'_get_constraint_grammar'/2", "'_get_constraint_grammar'(${1:OE_THIS}, ${2:OE_Options}) $3"), ('add_constraints/2', 'add_constraints(${1:OE_THIS}, ${2:Constraint_list}) $3')],
'CosNotifyFilter_Filter_impl': [("'_get_constraint_grammar'/2", "'_get_constraint_grammar'(${1:Param1}, ${2:State}) $3")],
'CosNotifyFilter_FilterAdmin': [('add_filter/2', 'add_filter(${1:OE_THIS}, ${2:New_filter}) $3'), ('add_filter/3', 'add_filter(${1:OE_THIS}, ${2:OE_Options}, ${3:New_filter}) $4'), ('remove_filter/2', 'remove_filter(${1:OE_THIS}, ${2:Filter}) $3')],
'CosNotifyFilter_FilterFactory': [('create_filter/2', 'create_filter(${1:OE_THIS}, ${2:Constraint_grammar}) $3'), ('create_filter/3', 'create_filter(${1:OE_THIS}, ${2:OE_Options}, ${3:Constraint_grammar}) $4'), ('create_mapping_filter/3', 'create_mapping_filter(${1:OE_THIS}, ${2:Constraint_grammar}, ${3:Default_value}) $4')],
'CosNotifyFilter_FilterFactory_impl': [('create_filter/3', 'create_filter(${1:OE_THIS}, ${2:State}, ${3:InitGrammar}) $4'), ('create_mapping_filter/4', 'create_mapping_filter(${1:OE_THIS}, ${2:State}, ${3:InitGrammar}, ${4:DefVal}) $5')],
'CosNotifyFilter_FilterIDSeq': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosNotifyFilter_FilterNotFound': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosNotifyFilter_InvalidConstraint': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosNotifyFilter_InvalidGrammar': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosNotifyFilter_InvalidValue': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosNotifyFilter_MappingConstraintInfo': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosNotifyFilter_MappingConstraintInfoSeq': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosNotifyFilter_MappingConstraintPair': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosNotifyFilter_MappingConstraintPairSeq': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosNotifyFilter_MappingFilter': [("'_get_constraint_grammar'/1", "'_get_constraint_grammar'(${1:OE_THIS}) $2"), ("'_get_constraint_grammar'/2", "'_get_constraint_grammar'(${1:OE_THIS}, ${2:OE_Options}) $3"), ("'_get_value_type'/1", "'_get_value_type'(${1:OE_THIS}) $2")],
'CosNotifyFilter_MappingFilter_impl': [("'_get_constraint_grammar'/2", "'_get_constraint_grammar'(${1:Param1}, ${2:State}) $3"), ("'_get_value_type'/2", "'_get_value_type'(${1:Param1}, ${2:State}) $3"), ("'_get_default_value'/2", "'_get_default_value'(${1:Param1}, ${2:State}) $3")],
'CosNotifyFilter_UnsupportedFilterableData': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'oe_CosNotification': [('oe_register/0', 'oe_register() $1'), ('oe_unregister/0', 'oe_unregister() $1'), ('oe_get_module/5', 'oe_get_module(${1:OE_IFR}, ${2:OE_Parent}, ${3:ID}, ${4:Name}, ${5:Version}) $6')],
'oe_cosNotificationAppComm': [('oe_register/0', 'oe_register() $1'), ('oe_unregister/0', 'oe_unregister() $1'), ('oe_get_module/5', 'oe_get_module(${1:OE_IFR}, ${2:OE_Parent}, ${3:ID}, ${4:Name}, ${5:Version}) $6')],
'oe_CosNotificationComm_Event': [('callSeq/3', 'callSeq(${1:OE_THIS}, ${2:Events}, ${3:Stat}) $4'), ('callSeq/4', 'callSeq(${1:OE_THIS}, ${2:OE_Options}, ${3:Events}, ${4:Stat}) $5'), ('callAny/3', 'callAny(${1:OE_THIS}, ${2:Event}, ${3:Stat}) $4')],
'oe_CosNotifyChannelAdmin': [('oe_register/0', 'oe_register() $1'), ('oe_unregister/0', 'oe_unregister() $1'), ('oe_get_module/5', 'oe_get_module(${1:OE_IFR}, ${2:OE_Parent}, ${3:ID}, ${4:Name}, ${5:Version}) $6')],
'oe_CosNotifyComm': [('oe_register/0', 'oe_register() $1'), ('oe_unregister/0', 'oe_unregister() $1'), ('oe_get_module/5', 'oe_get_module(${1:OE_IFR}, ${2:OE_Parent}, ${3:ID}, ${4:Name}, ${5:Version}) $6')],
'oe_CosNotifyFilter': [('oe_register/0', 'oe_register() $1'), ('oe_unregister/0', 'oe_unregister() $1'), ('oe_get_module/5', 'oe_get_module(${1:OE_IFR}, ${2:OE_Parent}, ${3:ID}, ${4:Name}, ${5:Version}) $6')],
'PullerConsumer_impl': [('connect_any_pull_supplier/4', 'connect_any_pull_supplier(${1:OE_THIS}, ${2:Param2}, ${3:State}, ${4:Param4}) $5')],
'PullerSupplier_impl': [('connect_any_pull_consumer/4', 'connect_any_pull_consumer(${1:Param1}, ${2:Param2}, ${3:State}, ${4:Param4}) $5')],
'PusherConsumer_impl': [('connect_any_push_supplier/4', 'connect_any_push_supplier(${1:Param1}, ${2:Param2}, ${3:State}, ${4:Param4}) $5')],
'PusherSupplier_impl': [('connect_any_push_consumer/4', 'connect_any_push_consumer(${1:OE_THIS}, ${2:Param2}, ${3:State}, ${4:Param4}) $5')],
'cosProperty': [('start/0', 'start() $1'), ('start_SetDefFactory/0', 'start_SetDefFactory() $1'), ('start_SetFactory/0', 'start_SetFactory() $1'), ('stop_SetDefFactory/1', 'stop_SetDefFactory(${1:Factory}) $2'), ('stop_SetFactory/1', 'stop_SetFactory(${1:Factory}) $2'), ('stop/0', 'stop() $1'), ('install/0', 'install() $1'), ('install/1', 'install(${1:Param1}) $2'), ('install_db/0', 'install_db() $1'), ('install_db/1', 'install_db(${1:Timeout}) $2'), ('install_db/2', 'install_db(${1:Timeout}, ${2:Options}) $3'), ('uninstall/0', 'uninstall() $1'), ('uninstall/1', 'uninstall(${1:Param1}) $2'), ('uninstall_db/0', 'uninstall_db() $1')],
'CosPropertyService_ConflictingProperty': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosPropertyService_ConstraintNotSupported': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosPropertyService_FixedProperty': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosPropertyService_InvalidPropertyName': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosPropertyService_MultipleExceptions': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosPropertyService_Properties': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosPropertyService_PropertiesIterator': [('reset/1', 'reset(${1:OE_THIS}) $2'), ('reset/2', 'reset(${1:OE_THIS}, ${2:OE_Options}) $3'), ('next_one/1', 'next_one(${1:OE_THIS}) $2')],
'CosPropertyService_PropertiesIterator_impl': [('init/1', 'init(${1:Properties}) $2'), ('terminate/2', 'terminate(${1:Param1}, ${2:Param2}) $3'), ('code_change/3', 'code_change(${1:Param1}, ${2:State}, ${3:Param3}) $4')],
'CosPropertyService_Property': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosPropertyService_PropertyDef': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosPropertyService_PropertyDefs': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosPropertyService_PropertyException': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosPropertyService_PropertyExceptions': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosPropertyService_PropertyMode': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosPropertyService_PropertyModes': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosPropertyService_PropertyNames': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosPropertyService_PropertyNamesIterator': [('reset/1', 'reset(${1:OE_THIS}) $2'), ('reset/2', 'reset(${1:OE_THIS}, ${2:OE_Options}) $3'), ('next_one/1', 'next_one(${1:OE_THIS}) $2')],
'CosPropertyService_PropertyNamesIterator_impl': [('init/1', 'init(${1:Properties}) $2'), ('terminate/2', 'terminate(${1:Param1}, ${2:Param2}) $3'), ('code_change/3', 'code_change(${1:Param1}, ${2:State}, ${3:Param3}) $4')],
'CosPropertyService_PropertyNotFound': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosPropertyService_PropertySet': [('define_property/3', 'define_property(${1:OE_THIS}, ${2:Property_name}, ${3:Property_value}) $4'), ('define_property/4', 'define_property(${1:OE_THIS}, ${2:OE_Options}, ${3:Property_name}, ${4:Property_value}) $5'), ('define_properties/2', 'define_properties(${1:OE_THIS}, ${2:Nproperties}) $3')],
'CosPropertyService_PropertySetDef': [('get_allowed_property_types/1', 'get_allowed_property_types(${1:OE_THIS}) $2'), ('get_allowed_property_types/2', 'get_allowed_property_types(${1:OE_THIS}, ${2:OE_Options}) $3'), ('get_allowed_properties/1', 'get_allowed_properties(${1:OE_THIS}) $2')],
'CosPropertyService_PropertySetDef_impl': [('init/1', 'init(${1:Param1}) $2'), ('terminate/2', 'terminate(${1:Param1}, ${2:Param2}) $3'), ('code_change/3', 'code_change(${1:Param1}, ${2:State}, ${3:Param3}) $4')],
'CosPropertyService_PropertySetDefFactory': [('create_propertysetdef/1', 'create_propertysetdef(${1:OE_THIS}) $2'), ('create_propertysetdef/2', 'create_propertysetdef(${1:OE_THIS}, ${2:OE_Options}) $3'), ('create_constrained_propertysetdef/3', 'create_constrained_propertysetdef(${1:OE_THIS}, ${2:Allowed_property_types}, ${3:Allowed_property_defs}) $4')],
'CosPropertyService_PropertySetDefFactory_impl': [('init/1', 'init(${1:Param1}) $2'), ('terminate/2', 'terminate(${1:Param1}, ${2:Param2}) $3'), ('code_change/3', 'code_change(${1:Param1}, ${2:State}, ${3:Param3}) $4')],
'CosPropertyService_PropertySetFactory': [('create_propertyset/1', 'create_propertyset(${1:OE_THIS}) $2'), ('create_propertyset/2', 'create_propertyset(${1:OE_THIS}, ${2:OE_Options}) $3'), ('create_constrained_propertyset/3', 'create_constrained_propertyset(${1:OE_THIS}, ${2:Allowed_property_types}, ${3:Allowed_properties}) $4')],
'CosPropertyService_PropertySetFactory_impl': [('init/1', 'init(${1:Param1}) $2'), ('terminate/2', 'terminate(${1:Param1}, ${2:Param2}) $3'), ('code_change/3', 'code_change(${1:Param1}, ${2:State}, ${3:Param3}) $4')],
'CosPropertyService_PropertyTypes': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosPropertyService_ReadOnlyProperty': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosPropertyService_UnsupportedMode': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosPropertyService_UnsupportedProperty': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosPropertyService_UnsupportedTypeCode': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'oe_CosProperty': [('oe_register/0', 'oe_register() $1'), ('oe_unregister/0', 'oe_unregister() $1'), ('oe_get_module/5', 'oe_get_module(${1:OE_IFR}, ${2:OE_Parent}, ${3:ID}, ${4:Name}, ${5:Version}) $6')],
'cosTime': [('start/0', 'start() $1'), ('stop/0', 'stop() $1'), ('install_time/0', 'install_time() $1'), ('uninstall_time/0', 'uninstall_time() $1'), ('install_timerevent/0', 'install_timerevent() $1'), ('uninstall_timerevent/0', 'uninstall_timerevent() $1'), ('start_time_service/2', 'start_time_service(${1:Tdf}, ${2:Param2}) $3'), ('start_timerevent_service/1', 'start_timerevent_service(${1:Timer}) $2'), ('stop_timerevent_service/1', 'stop_timerevent_service(${1:Obj}) $2'), ('stop_time_service/1', 'stop_time_service(${1:Obj}) $2')],
'CosTime_TimeService': [('universal_time/1', 'universal_time(${1:OE_THIS}) $2'), ('universal_time/2', 'universal_time(${1:OE_THIS}, ${2:OE_Options}) $3'), ('secure_universal_time/1', 'secure_universal_time(${1:OE_THIS}) $2')],
'CosTime_TimeService_impl': [('universal_time/2', 'universal_time(${1:OE_THIS}, ${2:State}) $3'), ('secure_universal_time/2', 'secure_universal_time(${1:Param1}, ${2:Param2}) $3'), ('new_universal_time/5', 'new_universal_time(${1:Param1}, ${2:Param2}, ${3:Param3}, ${4:Param4}, ${5:Param5}) $6')],
'CosTime_TimeUnavailable': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosTime_TIO': [("'_get_time_interval'/1", "'_get_time_interval'(${1:OE_THIS}) $2"), ("'_get_time_interval'/2", "'_get_time_interval'(${1:OE_THIS}, ${2:OE_Options}) $3"), ('spans/2', 'spans(${1:OE_THIS}, ${2:Time}) $3')],
'CosTime_TIO_impl': [("'_get_time_interval'/2", "'_get_time_interval'(${1:Param1}, ${2:State}) $3")],
'CosTime_UTO': [("'_get_time'/1", "'_get_time'(${1:OE_THIS}) $2"), ("'_get_time'/2", "'_get_time'(${1:OE_THIS}, ${2:OE_Options}) $3"), ("'_get_inaccuracy'/1", "'_get_inaccuracy'(${1:OE_THIS}) $2")],
'CosTime_UTO_impl': [("'_get_time'/2", "'_get_time'(${1:Param1}, ${2:State}) $3"), ("'_get_inaccuracy'/2", "'_get_inaccuracy'(${1:Param1}, ${2:State}) $3"), ("'_get_tdf'/2", "'_get_tdf'(${1:Param1}, ${2:State}) $3"), ("'_get_utc_time'/2", "'_get_utc_time'(${1:Param1}, ${2:State}) $3")],
'CosTimerEvent_TimerEventHandler': [("'_get_status'/1", "'_get_status'(${1:OE_THIS}) $2"), ("'_get_status'/2", "'_get_status'(${1:OE_THIS}, ${2:OE_Options}) $3"), ('time_set/1', 'time_set(${1:OE_THIS}) $2')],
'CosTimerEvent_TimerEventHandler_impl': [("'_get_status'/2", "'_get_status'(${1:Param1}, ${2:State}) $3")],
'CosTimerEvent_TimerEventService': [('register/3', 'register(${1:OE_THIS}, ${2:Event_interface}, ${3:Data}) $4'), ('register/4', 'register(${1:OE_THIS}, ${2:OE_Options}, ${3:Event_interface}, ${4:Data}) $5'), ('unregister/2', 'unregister(${1:OE_THIS}, ${2:Timer_event_handler}) $3')],
'CosTimerEvent_TimerEventService_impl': [('register/4', 'register(${1:OE_THIS}, ${2:State}, ${3:EventInterface}, ${4:Data}) $5'), ('unregister/3', 'unregister(${1:Param1}, ${2:State}, ${3:TimerEventHandler}) $4'), ('event_time/3', 'event_time(${1:Param1}, ${2:State}, ${3:Param3}) $4')],
'CosTimerEvent_TimerEventT': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'oe_CosTime': [('oe_register/0', 'oe_register() $1'), ('oe_unregister/0', 'oe_unregister() $1'), ('oe_get_module/5', 'oe_get_module(${1:OE_IFR}, ${2:OE_Parent}, ${3:ID}, ${4:Name}, ${5:Version}) $6')],
'oe_CosTimerEvent': [('oe_register/0', 'oe_register() $1'), ('oe_unregister/0', 'oe_unregister() $1'), ('oe_get_module/5', 'oe_get_module(${1:OE_IFR}, ${2:OE_Parent}, ${3:ID}, ${4:Name}, ${5:Version}) $6')],
'oe_TimeBase': [('oe_register/0', 'oe_register() $1'), ('oe_unregister/0', 'oe_unregister() $1'), ('oe_get_module/5', 'oe_get_module(${1:OE_IFR}, ${2:OE_Parent}, ${3:ID}, ${4:Name}, ${5:Version}) $6')],
'TimeBase_IntervalT': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'TimeBase_UtcT': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'cosTransactions': [('start/0', 'start() $1'), ('stop/0', 'stop() $1'), ('start_factory/1', 'start_factory(${1:Args}) $2'), ('start_factory/0', 'start_factory() $1'), ('stop_factory/1', 'stop_factory(${1:Fac}) $2')],
'CosTransactions_Control': [('get_terminator/1', 'get_terminator(${1:OE_THIS}) $2'), ('get_terminator/2', 'get_terminator(${1:OE_THIS}, ${2:OE_Options}) $3'), ('get_coordinator/1', 'get_coordinator(${1:OE_THIS}) $2')],
'CosTransactions_Coordinator': [('get_status/1', 'get_status(${1:OE_THIS}) $2'), ('get_status/2', 'get_status(${1:OE_THIS}, ${2:OE_Options}) $3'), ('get_parent_status/1', 'get_parent_status(${1:OE_THIS}) $2')],
'CosTransactions_HeuristicCommit': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosTransactions_HeuristicHazard': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosTransactions_HeuristicMixed': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosTransactions_HeuristicRollback': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosTransactions_Inactive': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosTransactions_InvalidControl': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosTransactions_NotPrepared': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosTransactions_NoTransaction': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosTransactions_NotSubtransaction': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosTransactions_otid_t': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosTransactions_PropagationContext': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosTransactions_RecoveryCoordinator': [('replay_completion/2', 'replay_completion(${1:OE_THIS}, ${2:R}) $3'), ('replay_completion/3', 'replay_completion(${1:OE_THIS}, ${2:OE_Options}, ${3:R}) $4')],
'CosTransactions_Resource': [('prepare/1', 'prepare(${1:OE_THIS}) $2'), ('prepare/2', 'prepare(${1:OE_THIS}, ${2:OE_Options}) $3'), ('rollback/1', 'rollback(${1:OE_THIS}) $2')],
'CosTransactions_SubtransactionAwareResource': [('commit_subtransaction/2', 'commit_subtransaction(${1:OE_THIS}, ${2:Parent}) $3'), ('commit_subtransaction/3', 'commit_subtransaction(${1:OE_THIS}, ${2:OE_Options}, ${3:Parent}) $4'), ('rollback_subtransaction/1', 'rollback_subtransaction(${1:OE_THIS}) $2')],
'CosTransactions_SubtransactionsUnavailable': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosTransactions_SynchronizationUnavailable': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosTransactions_Terminator': [('commit/2', 'commit(${1:OE_THIS}, ${2:Report_heuristics}) $3'), ('commit/3', 'commit(${1:OE_THIS}, ${2:OE_Options}, ${3:Report_heuristics}) $4'), ('rollback/1', 'rollback(${1:OE_THIS}) $2')],
'CosTransactions_Terminator_impl': [('commit/3', 'commit(${1:Self}, ${2:State}, ${3:Heuristics}) $4'), ('rollback/2', 'rollback(${1:Param1}, ${2:State}) $3')],
'CosTransactions_TransactionFactory': [('create/2', 'create(${1:OE_THIS}, ${2:Time_out}) $3'), ('create/3', 'create(${1:OE_THIS}, ${2:OE_Options}, ${3:Time_out}) $4'), ('recreate/2', 'recreate(${1:OE_THIS}, ${2:Ctx}) $3')],
'CosTransactions_TransactionFactory_impl': [('create/3', 'create(${1:Self}, ${2:State}, ${3:Param3}) $4'), ('recreate/3', 'recreate(${1:Self}, ${2:State}, ${3:Param3}) $4'), ('init/1', 'init(${1:Options}) $2'), ('terminate/2', 'terminate(${1:Param1}, ${2:Param2}) $3')],
'CosTransactions_TransIdentity': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosTransactions_Unavailable': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'CosTransactions_WrongTransaction': [('tc/0', 'tc() $1'), ('id/0', 'id() $1'), ('name/0', 'name() $1')],
'ETraP_Common': [('try_timeout/1', 'try_timeout(${1:TimeoutAt}) $2'), ('get_option/3', 'get_option(${1:Key}, ${2:OptionList}, ${3:DefaultList}) $4'), ('create_name/2', 'create_name(${1:Name}, ${2:Type}) $3'), ('create_name/1', 'create_name(${1:Type}) $2'), ('is_debug_compiled/0', 'is_debug_compiled() $1'), ('send_stubborn/5', 'send_stubborn(${1:M}, ${2:F}, ${3:A}, ${4:MaxR}, ${5:Wait}) $6'), ('create_link/3', 'create_link(${1:Module}, ${2:Env}, ${3:ArgList}) $4')],
'etrap_logmgr': [('start/1', 'start(${1:LogName}) $2'), ('stop/1', 'stop(${1:LogName}) $2'), ('log_safe/2', 'log_safe(${1:LogName}, ${2:LogRecord}) $3'), ('log_lazy/2', 'log_lazy(${1:LogName}, ${2:LogRecord}) $3'), ('get_next/2', 'get_next(${1:LogName}, ${2:Cursor}) $3')],
'ETraP_Server': [('get_status/1', 'get_status(${1:OE_THIS}) $2'), ('get_status/2', 'get_status(${1:OE_THIS}, ${2:OE_Options}) $3'), ('get_parent_status/1', 'get_parent_status(${1:OE_THIS}) $2')],
'ETraP_Server_impl': [('prepare/2', 'prepare(${1:RegResources}, ${2:Alarm}) $3'), ('rollback/2', 'rollback(${1:Self}, ${2:Param2}) $3'), ('commit/2', 'commit(${1:Param1}, ${2:Param2}) $3'), ('commit_one_phase/2', 'commit_one_phase(${1:Param1}, ${2:Param2}) $3'), ('forget/2', 'forget(${1:Param1}, ${2:LogName}) $3')],
'oe_CosTransactions': [('oe_register/0', 'oe_register() $1'), ('oe_unregister/0', 'oe_unregister() $1'), ('oe_get_module/5', 'oe_get_module(${1:OE_IFR}, ${2:OE_Parent}, ${3:ID}, ${4:Name}, ${5:Version}) $6')],
'crypto': [('start/0', 'start() $1'), ('stop/0', 'stop() $1'), ('info/0', 'info() $1'), ('info_lib/0', 'info_lib() $1'), ('version/0', 'version() $1')],
'crypto_app': [('start/2', 'start(${1:Param1}, ${2:Param2}) $3'), ('stop/1', 'stop(${1:State}) $2')],
'crypto_server': [('start_link/0', 'start_link() $1')],
'crypto_sup': [('start_link/0', 'start_link() $1'), ('init/1', 'init(${1:Param1}) $2')],
'dbg_debugged': [('eval/3', 'eval(${1:Mod}, ${2:Func}, ${3:Args}) $4')],
'dbg_icmd': [('cmd/3', 'cmd(${1:Expr}, ${2:Bs}, ${3:Ieval}) $4')],
'dbg_idb': [('insert/3', 'insert(${1:DbRef}, ${2:Key}, ${3:Value}) $4'), ('lookup/2', 'lookup(${1:DbRef}, ${2:Key}) $3'), ('match_object/2', 'match_object(${1:DbRef}, ${2:Key}) $3')],
'dbg_ieval': [('eval/3', 'eval(${1:Mod}, ${2:Func}, ${3:Args}) $4'), ('exit_info/5', 'exit_info(${1:Int}, ${2:AttPid}, ${3:OrigPid}, ${4:Reason}, ${5:ExitInfo}) $6')],
'dbg_iload': [('load_mod/4', 'load_mod(${1:Mod}, ${2:File}, ${3:Binary}, ${4:Db}) $5')],
'dbg_iserver': [('start/0', 'start() $1'), ('stop/0', 'stop() $1'), ('find/0', 'find() $1'), ('call/1', 'call(${1:Request}) $2'), ('call/2', 'call(${1:Int}, ${2:Request}) $3'), ('cast/1', 'cast(${1:Request}) $2'), ('cast/2', 'cast(${1:Int}, ${2:Request}) $3'), ('safe_call/1', 'safe_call(${1:Request}) $2'), ('safe_cast/1', 'safe_cast(${1:Request}) $2')],
'dbg_istk': [('init/0', 'init() $1'), ('delayed_to_external/0', 'delayed_to_external() $1'), ('from_external/1', 'from_external(${1:Param1}) $2'), ('push/3', 'push(${1:Bs}, ${2:Param2}, ${3:Param3}) $4'), ('pop/0', 'pop() $1'), ('pop/1', 'pop(${1:Le}) $2'), ('stack_level/0', 'stack_level() $1'), ('delayed_stacktrace/0', 'delayed_stacktrace() $1'), ('delayed_stacktrace/2', 'delayed_stacktrace(${1:ArgFlag}, ${2:Ieval}) $3'), ('bindings/1', 'bindings(${1:SP}) $2'), ('stack_frame/2', 'stack_frame(${1:Dir}, ${2:SP}) $3'), ('backtrace/2', 'backtrace(${1:HowMany}, ${2:Ieval}) $3'), ('in_use_p/2', 'in_use_p(${1:Mod}, ${2:Cm}) $3')],
'dbg_ui_break': [('start/3', 'start(${1:GS}, ${2:Pos}, ${3:Type}) $4'), ('start/4', 'start(${1:GS}, ${2:Pos}, ${3:Type}, ${4:Mod}) $5'), ('start/5', 'start(${1:GS}, ${2:Pos}, ${3:Type}, ${4:Mod}, ${5:Line}) $6')],
'dbg_ui_break_win': [('create_win/5', 'create_win(${1:GS}, ${2:Pos}, ${3:Type}, ${4:Mod}, ${5:Line}) $6'), ('update_functions/2', 'update_functions(${1:WinInfo}, ${2:Funcs}) $3'), ('handle_event/2', 'handle_event(${1:GSEvent}, ${2:WinInfo}) $3')],
'dbg_ui_edit': [('start/5', 'start(${1:GS}, ${2:Pos}, ${3:Title}, ${4:Prompt}, ${5:Edit}) $6')],
'dbg_ui_edit_win': [('create_win/5', 'create_win(${1:GS}, ${2:Pos}, ${3:Title}, ${4:Prompt}, ${5:Param5}) $6'), ('get_window/1', 'get_window(${1:WinInfo}) $2'), ('handle_event/2', 'handle_event(${1:GSEvent}, ${2:WinInfo}) $3')],
'dbg_ui_filedialog_win': [('create_win/6', 'create_win(${1:GS}, ${2:Title}, ${3:Pos}, ${4:Mode}, ${5:Filter}, ${6:Extra}) $7'), ('create_win/7', 'create_win(${1:GS}, ${2:Title}, ${3:Pos}, ${4:Mode}, ${5:Filter}, ${6:Extra}, ${7:FileName}) $8'), ('get_window/1', 'get_window(${1:WinInfo}) $2'), ('tag/2', 'tag(${1:WinInfo}, ${2:File0}) $3'), ('handle_event/2', 'handle_event(${1:GSEvent}, ${2:WinInfo}) $3')],
'dbg_ui_interpret': [('start/4', 'start(${1:GS}, ${2:Pos}, ${3:Dir}, ${4:Mode}) $5')],
'dbg_ui_mon': [('start/2', 'start(${1:Mode}, ${2:SFile}) $3'), ('stop/0', 'stop() $1')],
'dbg_ui_mon_win': [('init/0', 'init() $1')],
'dbg_ui_settings': [('start/4', 'start(${1:GS}, ${2:Pos}, ${3:Action}, ${4:SFile}) $5')],
'dbg_ui_trace': [('start/1', 'start(${1:Pid}) $2'), ('start/3', 'start(${1:Pid}, ${2:TraceWin}, ${3:BackTrace}) $4')],
'dbg_ui_trace_win': [('init/0', 'init() $1')],
'dbg_ui_view': [('start/2', 'start(${1:GS}, ${2:Mod}) $3')],
'dbg_ui_win': [('init/0', 'init() $1'), ('font/1', 'font(${1:Style}) $2'), ('min_size/3', 'min_size(${1:Strings}, ${2:MinW}, ${3:MinH}) $4'), ('min_size/4', 'min_size(${1:Font}, ${2:Strings}, ${3:MinW}, ${4:MinH}) $5'), ('create_menus/2', 'create_menus(${1:MenuBar}, ${2:Param2}) $3'), ('select/2', 'select(${1:MenuItem}, ${2:Bool}) $3'), ('selected/1', 'selected(${1:Menu}) $2'), ('add_break/2', 'add_break(${1:Name}, ${2:Point}) $3'), ('update_break/2', 'update_break(${1:Break}, ${2:Options}) $3'), ('delete_break/1', 'delete_break(${1:Break}) $2'), ('motion/2', 'motion(${1:X}, ${2:Y}) $3')],
'dbg_ui_winman': [('start/0', 'start() $1')],
'dbg_wx_break': [('start/3', 'start(${1:Wx}, ${2:Pos}, ${3:Type}) $4'), ('start/4', 'start(${1:Wx}, ${2:Pos}, ${3:Type}, ${4:Mod}) $5'), ('start/5', 'start(${1:Wx}, ${2:Pos}, ${3:Type}, ${4:Mod}, ${5:Line}) $6')],
'dbg_wx_break_win': [('create_win/5', 'create_win(${1:Win}, ${2:Pos}, ${3:Type}, ${4:Mod}, ${5:Line}) $6'), ('update_functions/2', 'update_functions(${1:WinInfo}, ${2:Funcs}) $3'), ('handle_event/2', 'handle_event(${1:WxEvent}, ${2:WinInfo}) $3')],
'dbg_wx_code': [('code_area/1', 'code_area(${1:Parent}) $2'), ('load_code/2', 'load_code(${1:Ed}, ${2:Code}) $3'), ('unload_code/1', 'unload_code(${1:Ed}) $2'), ('add_break_to_code/3', 'add_break_to_code(${1:Ed}, ${2:Line}, ${3:Param3}) $4'), ('del_break_from_code/2', 'del_break_from_code(${1:Ed}, ${2:Line}) $3'), ('find/4', 'find(${1:Ed}, ${2:Str}, ${3:Case}, ${4:Next}) $5'), ('goto_pos/2', 'goto_pos(${1:Ed}, ${2:Pos}) $3'), ('current_pos/1', 'current_pos(${1:Ed}) $2'), ('mark_line/3', 'mark_line(${1:Ed}, ${2:Prev}, ${3:Line}) $4'), ('get_no_lines/1', 'get_no_lines(${1:Ed}) $2'), ('goto_line/2', 'goto_line(${1:Ed}, ${2:Line}) $3')],
'dbg_wx_filedialog_win': [('new/3', 'new(${1:Parent}, ${2:Id}, ${3:Options0}) $4'), ('getFilename/1', 'getFilename(${1:FD}) $2'), ('getFilenames/1', 'getFilenames(${1:FD}) $2'), ('getDirectory/1', 'getDirectory(${1:FD}) $2'), ('destroy/1', 'destroy(${1:FD}) $2')],
'dbg_wx_interpret': [('start/4', 'start(${1:Win}, ${2:Pos}, ${3:SDir}, ${4:Mode}) $5')],
'dbg_wx_mon': [('start/2', 'start(${1:Mode}, ${2:SFile}) $3'), ('stop/0', 'stop() $1')],
'dbg_wx_mon_win': [('init/0', 'init() $1')],
'dbg_wx_settings': [('load/3', 'load(${1:Win}, ${2:Pos}, ${3:SFile}) $4'), ('save/3', 'save(${1:Win}, ${2:Pos}, ${3:Str}) $4')],
'dbg_wx_src_view': [('code_area/2', 'code_area(${1:Parent}, ${2:Sizer}) $3')],
'dbg_wx_trace': [('start/1', 'start(${1:Pid}) $2'), ('start/3', 'start(${1:Pid}, ${2:TraceWin}, ${3:BackTrace}) $4')],
'dbg_wx_trace_win': [('init/0', 'init() $1'), ('stop/1', 'stop(${1:Param1}) $2')],
'dbg_wx_view': [('start/2', 'start(${1:GS}, ${2:Mod}) $3')],
'dbg_wx_win': [('init/0', 'init() $1'), ('create_menus/4', 'create_menus(${1:MB}, ${2:Param2}, ${3:Win}, ${4:Id0}) $5'), ('add_break/3', 'add_break(${1:Win}, ${2:MenuName}, ${3:Point}) $4'), ('update_break/2', 'update_break(${1:Break}, ${2:Options}) $3'), ('delete_break/1', 'delete_break(${1:Break}) $2'), ('motion/2', 'motion(${1:X}, ${2:Y}) $3'), ('confirm/2', 'confirm(${1:MonWin}, ${2:String}) $3'), ('notify/2', 'notify(${1:MonWin}, ${2:String}) $3'), ('entry/4', 'entry(${1:Parent}, ${2:Title}, ${3:Prompt}, ${4:Param4}) $5'), ('open_help/2', 'open_help(${1:Param1}, ${2:HelpHtmlFile}) $3'), ('to_string/1', 'to_string(${1:Term}) $2'), ('to_string/2', 'to_string(${1:Format}, ${2:Args}) $3'), ('find_icon/1', 'find_icon(${1:File}) $2')],
'dbg_wx_winman': [('start/0', 'start() $1')],
'debugger': [('start/0', 'start() $1'), ('start/1', 'start(${1:Param1}) $2'), ('start/2', 'start(${1:Mode}, ${2:SFile}) $3'), ('stop/0', 'stop() $1'), ('quick/3', 'quick(${1:M}, ${2:F}, ${3:A}) $4'), ('auto_attach/1', 'auto_attach(${1:Flags}) $2')],
'i': [('help/0', 'help() $1'), ('ia/1', 'ia(${1:Pid}) $2'), ('ia/2', 'ia(${1:X}, ${2:Fnk}) $3'), ('ia/3', 'ia(${1:X}, ${2:Y}, ${3:Z}) $4'), ('ia/4', 'ia(${1:X}, ${2:Y}, ${3:Z}, ${4:Fnk}) $5'), ('iaa/1', 'iaa(${1:Flag}) $2'), ('iaa/2', 'iaa(${1:Flag}, ${2:Fnk}) $3'), ('ib/2', 'ib(${1:Module}, ${2:Line}) $3'), ('ib/3', 'ib(${1:Module}, ${2:Function}, ${3:Arity}) $4'), ('ib/4', 'ib(${1:Module}, ${2:Function}, ${3:Arity}, ${4:Cond}) $5'), ('ibd/2', 'ibd(${1:Mod}, ${2:Line}) $3'), ('ibe/2', 'ibe(${1:Mod}, ${2:Line}) $3'), ('iba/3', 'iba(${1:Mod}, ${2:Line}, ${3:Action}) $4'), ('ibc/3', 'ibc(${1:Mod}, ${2:Line}, ${3:Fnk}) $4'), ('ic/0', 'ic() $1'), ('ii/1', 'ii(${1:Module}) $2'), ('ii/2', 'ii(${1:Module}, ${2:Param2}) $3'), ('il/0', 'il() $1'), ('im/0', 'im() $1'), ('ini/1', 'ini(${1:Module}) $2'), ('ini/2', 'ini(${1:Module}, ${2:Param2}) $3'), ('inq/1', 'inq(${1:Module}) $2'), ('ip/0', 'ip() $1'), ('ipb/0', 'ipb() $1'), ('ipb/1', 'ipb(${1:Param1}) $2'), ('iq/1', 'iq(${1:Module}) $2'), ('ir/0', 'ir() $1'), ('ir/1', 'ir(${1:Module}) $2'), ('ir/2', 'ir(${1:Module}, ${2:Line}) $3'), ('ir/3', 'ir(${1:Module}, ${2:Function}, ${3:Arity}) $4'), ('iv/0', 'iv() $1'), ('ist/1', 'ist(${1:Module}) $2')],
'int': [('i/1', 'i(${1:AbsMods}) $2'), ('i/2', 'i(${1:AbsMods}, ${2:Param2}) $3'), ('ni/1', 'ni(${1:AbsMods}) $2'), ('ni/2', 'ni(${1:AbsMods}, ${2:Param2}) $3'), ('n/1', 'n(${1:AbsMods}) $2'), ('nn/1', 'nn(${1:AbsMods}) $2'), ('interpreted/0', 'interpreted() $1'), ('file/1', 'file(${1:Mod}) $2'), ('interpretable/1', 'interpretable(${1:AbsMod}) $2')],
'dialyzer': [('plain_cl/0', 'plain_cl() $1'), ('run/1', 'run(${1:Opts}) $2'), ('gui/0', 'gui() $1'), ('gui/1', 'gui(${1:Opts}) $2'), ('plt_info/1', 'plt_info(${1:Opts}) $2'), ('format_warning/1', 'format_warning(${1:W}) $2'), ('format_warning/2', 'format_warning(${1:Param1}, ${2:Param2}) $3')],
'dialyzer_analysis_callgraph': [('start/3', 'start(${1:Parent}, ${2:LegalWarnings}, ${3:Analysis}) $4')],
'dialyzer_behaviours': [('check_callbacks/4', 'check_callbacks(${1:Module}, ${2:Attrs}, ${3:Plt}, ${4:Codeserver}) $5'), ('get_behaviour_apis/1', 'get_behaviour_apis(${1:Behaviours}) $2'), ('translate_behaviour_api_call/5', 'translate_behaviour_api_call(${1:Param1}, ${2:ArgTypes}, ${3:Args}, ${4:CallbackModule}, ${5:BehApiInfo}) $6'), ('translatable_behaviours/1', 'translatable_behaviours(${1:Tree}) $2'), ('translate_callgraph/3', 'translate_callgraph(${1:Param1}, ${2:Module}, ${3:Callgraph}) $4')],
'dialyzer_callgraph': [('add_edges/2', 'add_edges(${1:Edges}, ${2:CG}) $3'), ('all_nodes/1', 'all_nodes(${1:Param1}) $2'), ('delete/1', 'delete(${1:DG}) $2'), ('finalize/1', 'finalize(${1:DG}) $2'), ('is_escaping/2', 'is_escaping(${1:Label}, ${2:Param2}) $3'), ('is_self_rec/2', 'is_self_rec(${1:MfaOrLabel}, ${2:Param2}) $3'), ('non_local_calls/1', 'non_local_calls(${1:Param1}) $2'), ('lookup_rec_var/2', 'lookup_rec_var(${1:Param1}, ${2:Param2}) $3'), ('lookup_call_site/2', 'lookup_call_site(${1:Param1}, ${2:Param2}) $3'), ('lookup_label/2', 'lookup_label(${1:Label}, ${2:Param2}) $3'), ('lookup_name/2', 'lookup_name(${1:Param1}, ${2:Param2}) $3'), ('modules/1', 'modules(${1:Param1}) $2'), ('module_deps/1', 'module_deps(${1:Param1}) $2'), ('module_postorder_from_funs/2', 'module_postorder_from_funs(${1:Funs}, ${2:Param2}) $3'), ('new/0', 'new() $1'), ('in_neighbours/2', 'in_neighbours(${1:V}, ${2:DG}) $3'), ('renew_race_info/4', 'renew_race_info(${1:CG}, ${2:RaceCode}, ${3:PublicTables}, ${4:NamedTables}) $5'), ('reset_from_funs/2', 'reset_from_funs(${1:Funs}, ${2:Param2}) $3'), ('scan_core_tree/2', 'scan_core_tree(${1:Param1}, ${2:Param2}) $3'), ('strip_module_deps/2', 'strip_module_deps(${1:ModDeps}, ${2:StripSet}) $3'), ('take_scc/1', 'take_scc(${1:Param1}) $2'), ('remove_external/1', 'remove_external(${1:DG}) $2'), ('to_dot/2', 'to_dot(${1:Param1}, ${2:File}) $3'), ('to_ps/3', 'to_ps(${1:Param1}, ${2:File}, ${3:Args}) $4')],
'dialyzer_cl': [('start/1', 'start(${1:Param1}) $2')],
'dialyzer_cl_parse': [('start/0', 'start() $1'), ('get_lib_dir/1', 'get_lib_dir(${1:Apps}) $2')],
'dialyzer_codeserver': [('delete/1', 'delete(${1:TablePid}) $2'), ('finalize_contracts/3', 'finalize_contracts(${1:CnDict}, ${2:CbDict}, ${3:CS}) $4'), ('finalize_exported_types/2', 'finalize_exported_types(${1:Set}, ${2:CS}) $3'), ('finalize_records/2', 'finalize_records(${1:Dict}, ${2:CS}) $3'), ('get_contracts/1', 'get_contracts(${1:Param1}) $2'), ('get_callbacks/1', 'get_callbacks(${1:Param1}) $2'), ('get_exported_types/1', 'get_exported_types(${1:Param1}) $2'), ('get_exports/1', 'get_exports(${1:Param1}) $2'), ('get_records/1', 'get_records(${1:Param1}) $2'), ('get_next_core_label/1', 'get_next_core_label(${1:Param1}) $2'), ('get_temp_contracts/1', 'get_temp_contracts(${1:Param1}) $2'), ('get_temp_exported_types/1', 'get_temp_exported_types(${1:Param1}) $2'), ('get_temp_records/1', 'get_temp_records(${1:Param1}) $2'), ('insert/3', 'insert(${1:Mod}, ${2:ModCode}, ${3:CS}) $4'), ('insert_exports/2', 'insert_exports(${1:List}, ${2:Param2}) $3'), ('insert_temp_exported_types/2', 'insert_temp_exported_types(${1:Set}, ${2:CS}) $3'), ('is_exported/2', 'is_exported(${1:MFA}, ${2:Param2}) $3'), ('lookup_mod_code/2', 'lookup_mod_code(${1:Mod}, ${2:Param2}) $3'), ('lookup_mfa_code/2', 'lookup_mfa_code(${1:Param1}, ${2:CS}) $3'), ('lookup_mod_records/2', 'lookup_mod_records(${1:Param1}, ${2:Param2}) $3'), ('lookup_mod_contracts/2', 'lookup_mod_contracts(${1:Param1}, ${2:Param2}) $3'), ('lookup_mfa_contract/2', 'lookup_mfa_contract(${1:Param1}, ${2:Param2}) $3'), ('new/0', 'new() $1'), ('set_next_core_label/2', 'set_next_core_label(${1:NCL}, ${2:CS}) $3'), ('set_temp_records/2', 'set_temp_records(${1:Dict}, ${2:CS}) $3'), ('store_records/3', 'store_records(${1:Param1}, ${2:Param2}, ${3:Param3}) $4'), ('store_temp_records/3', 'store_temp_records(${1:Param1}, ${2:Param2}, ${3:Param3}) $4'), ('store_contracts/3', 'store_contracts(${1:Mod}, ${2:Dict}, ${3:Param3}) $4'), ('store_temp_contracts/4', 'store_temp_contracts(${1:Param1}, ${2:Param2}, ${3:Param3}, ${4:Param4}) $5')],
'dialyzer_contracts': [('check_contract/2', 'check_contract(${1:Param1}, ${2:SuccType}) $3'), ('check_contracts/3', 'check_contracts(${1:Contracts}, ${2:Callgraph}, ${3:FunTypes}) $4'), ('contracts_without_fun/3', 'contracts_without_fun(${1:Contracts}, ${2:AllFuns0}, ${3:Callgraph}) $4'), ('contract_to_string/1', 'contract_to_string(${1:Param1}) $2'), ('get_invalid_contract_warnings/3', 'get_invalid_contract_warnings(${1:Modules}, ${2:CodeServer}, ${3:Plt}) $4'), ('get_contract_args/1', 'get_contract_args(${1:Param1}) $2'), ('get_contract_return/1', 'get_contract_return(${1:Param1}) $2'), ('get_contract_return/2', 'get_contract_return(${1:Param1}, ${2:Args}) $3'), ('is_overloaded/1', 'is_overloaded(${1:Param1}) $2'), ('process_contract_remote_types/1', 'process_contract_remote_types(${1:CodeServer}) $2'), ('store_tmp_contract/5', 'store_tmp_contract(${1:MFA}, ${2:FileLine}, ${3:TypeSpec}, ${4:SpecDict}, ${5:RecordsDict}) $6')],
'dialyzer_dataflow': [('get_fun_types/4', 'get_fun_types(${1:Tree}, ${2:Plt}, ${3:Callgraph}, ${4:Records}) $5'), ('get_warnings/5', 'get_warnings(${1:Tree}, ${2:Plt}, ${3:Callgraph}, ${4:Records}, ${5:NoWarnUnused}) $6'), ('format_args/3', 'format_args(${1:ArgList}, ${2:TypeList}, ${3:State}) $4')],
'dialyzer_dep': [('analyze/1', 'analyze(${1:CoreTree}) $2')],
'dialyzer_explanation': [('expl_loop/3', 'expl_loop(${1:Parent}, ${2:CServer}, ${3:Plt}) $4')],
'dialyzer_gui': [('start/1', 'start(${1:State}) $2')],
'dialyzer_gui_wx': [('start/1', 'start(${1:DialyzerOptions}) $2')],
'dialyzer_options': [('build/1', 'build(${1:Opts}) $2')],
'dialyzer_plt': [('check_plt/3', 'check_plt(${1:FileName}, ${2:RemoveFiles}, ${3:AddFiles}) $4'), ('compute_md5_from_files/1', 'compute_md5_from_files(${1:Files}) $2'), ('contains_mfa/2', 'contains_mfa(${1:Param1}, ${2:MFA}) $3'), ('contains_module/2', 'contains_module(${1:Plt}, ${2:Mod}) $3'), ('delete_contract_list/2', 'delete_contract_list(${1:Param1}, ${2:Param2}) $3'), ('delete_list/2', 'delete_list(${1:Plt}, ${2:Param2}) $3'), ('delete_module/2', 'delete_module(${1:Plt}, ${2:Mod}) $3'), ('included_files/1', 'included_files(${1:FileName}) $2'), ('from_file/1', 'from_file(${1:FileName}) $2'), ('get_default_plt/0', 'get_default_plt() $1'), ('get_types/1', 'get_types(${1:Param1}) $2'), ('get_exported_types/1', 'get_exported_types(${1:Param1}) $2'), ('insert_list/2', 'insert_list(${1:Plt}, ${2:List}) $3'), ('insert_contract_list/2', 'insert_contract_list(${1:Param1}, ${2:List}) $3'), ('insert_callbacks/2', 'insert_callbacks(${1:Param1}, ${2:Codeserver}) $3'), ('insert_types/2', 'insert_types(${1:PLT}, ${2:Rec}) $3'), ('insert_exported_types/2', 'insert_exported_types(${1:PLT}, ${2:Set}) $3'), ('lookup/2', 'lookup(${1:Plt}, ${2:Obj}) $3'), ('lookup_contract/2', 'lookup_contract(${1:Param1}, ${2:Param2}) $3'), ('lookup_callbacks/2', 'lookup_callbacks(${1:Param1}, ${2:Param2}) $3'), ('lookup_module/2', 'lookup_module(${1:Plt}, ${2:Mod}) $3'), ('merge_plts/1', 'merge_plts(${1:List}) $2'), ('merge_plts_or_report_conflicts/2', 'merge_plts_or_report_conflicts(${1:PltFiles}, ${2:Plts}) $3'), ('new/0', 'new() $1'), ('plt_and_info_from_file/1', 'plt_and_info_from_file(${1:FileName}) $2'), ('get_specs/1', 'get_specs(${1:Param1}) $2'), ('get_specs/4', 'get_specs(${1:Param1}, ${2:F}, ${3:Param3}, ${4:Param4}) $5'), ('to_file/4', 'to_file(${1:FileName}, ${2:Param2}, ${3:Param3}, ${4:Param4}) $5')],
'dialyzer_races': [('store_race_call/5', 'store_race_call(${1:Fun}, ${2:ArgTypes}, ${3:Args}, ${4:FileLine}, ${5:State}) $6'), ('race/1', 'race(${1:State}) $2'), ('get_race_warnings/2', 'get_race_warnings(${1:Param1}, ${2:State}) $3'), ('format_args/4', 'format_args(${1:ArgList}, ${2:TypeList}, ${3:CleanState}, ${4:Call}) $5')],
'dialyzer_succ_typings': [('analyze_callgraph/3', 'analyze_callgraph(${1:Callgraph}, ${2:Plt}, ${3:Codeserver}) $4'), ('analyze_callgraph/4', 'analyze_callgraph(${1:Callgraph}, ${2:Plt}, ${3:Codeserver}, ${4:Parent}) $5'), ('get_warnings/6', 'get_warnings(${1:Callgraph}, ${2:Plt}, ${3:DocPlt}, ${4:Codeserver}, ${5:NoWarnUnused}, ${6:Parent}) $7')],
'dialyzer_typesig': [('analyze_scc/5', 'analyze_scc(${1:SCC}, ${2:NextLabel}, ${3:CallGraph}, ${4:PLT}, ${5:PropTypes}) $6')],
'dialyzer_utils': [('format_sig/1', 'format_sig(${1:Type}) $2'), ('format_sig/2', 'format_sig(${1:Type}, ${2:RecDict}) $3'), ('get_abstract_code_from_beam/1', 'get_abstract_code_from_beam(${1:File}) $2'), ('get_abstract_code_from_src/1', 'get_abstract_code_from_src(${1:File}) $2'), ('get_abstract_code_from_src/2', 'get_abstract_code_from_src(${1:File}, ${2:Opts}) $3'), ('get_core_from_abstract_code/1', 'get_core_from_abstract_code(${1:AbstrCode}) $2'), ('get_core_from_abstract_code/2', 'get_core_from_abstract_code(${1:AbstrCode}, ${2:Opts}) $3'), ('get_core_from_src/1', 'get_core_from_src(${1:File}) $2'), ('get_core_from_src/2', 'get_core_from_src(${1:File}, ${2:Opts}) $3'), ('get_record_and_type_info/1', 'get_record_and_type_info(${1:AbstractCode}) $2'), ('get_spec_info/3', 'get_spec_info(${1:ModName}, ${2:AbstractCode}, ${3:RecordsDict}) $4'), ('merge_records/2', 'merge_records(${1:NewRecords}, ${2:OldRecords}) $3'), ('pp_hook/0', 'pp_hook() $1'), ('process_record_remote_types/1', 'process_record_remote_types(${1:CServer}) $2'), ('sets_filter/2', 'sets_filter(${1:Param1}, ${2:ExpTypes}) $3'), ('src_compiler_opts/0', 'src_compiler_opts() $1')],
'edoc': [('packages/1', 'packages(${1:Packages}) $2'), ('packages/2', 'packages(${1:Packages}, ${2:Options}) $3'), ('files/1', 'files(${1:Files}) $2'), ('files/2', 'files(${1:Files}, ${2:Options}) $3'), ('application/1', 'application(${1:App}) $2'), ('application/2', 'application(${1:App}, ${2:Param2}) $3'), ('application/3', 'application(${1:App}, ${2:Dir}, ${3:Param3}) $4'), ('toc/1', 'toc(${1:Dir}) $2'), ('toc/2', 'toc(${1:Dir}, ${2:Opts}) $3'), ('toc/3', 'toc(${1:Dir}, ${2:Paths}, ${3:Opts0}) $4'), ('run/3', 'run(${1:Packages}, ${2:Files}, ${3:Opts0}) $4'), ('file/1', 'file(${1:Name}) $2'), ('file/2', 'file(${1:Name}, ${2:Options}) $3'), ('read/1', 'read(${1:File}) $2'), ('read/2', 'read(${1:File}, ${2:Opts}) $3'), ('layout/1', 'layout(${1:Doc}) $2'), ('layout/2', 'layout(${1:Doc}, ${2:Opts}) $3'), ('get_doc/1', 'get_doc(${1:File}) $2'), ('get_doc/2', 'get_doc(${1:File}, ${2:Opts}) $3'), ('get_doc/3', 'get_doc(${1:File}, ${2:Env}, ${3:Opts}) $4'), ('read_comments/1', 'read_comments(${1:File}) $2'), ('read_comments/2', 'read_comments(${1:File}, ${2:Param2}) $3'), ('read_source/1', 'read_source(${1:Name}) $2'), ('read_source/2', 'read_source(${1:Name}, ${2:Opts0}) $3')],
'edoc_data': [('module/4', 'module(${1:Module}, ${2:Entries}, ${3:Env}, ${4:Opts}) $5'), ('package/4', 'package(${1:Package}, ${2:Tags}, ${3:Env}, ${4:Opts}) $5'), ('overview/4', 'overview(${1:Title}, ${2:Tags}, ${3:Env}, ${4:Opts}) $5'), ('type/2', 'type(${1:T}, ${2:Env}) $3')],
'edoc_doclet': [('run/2', 'run(${1:Param1}, ${2:Ctxt}) $3')],
'edoc_extract': [('source/3', 'source(${1:File}, ${2:Env}, ${3:Opts}) $4'), ('source/4', 'source(${1:Forms}, ${2:Comments}, ${3:File}, ${4:Opts}) $5'), ('source/5', 'source(${1:Forms}, ${2:Comments}, ${3:File}, ${4:Env}, ${5:Opts}) $6'), ('header/3', 'header(${1:File}, ${2:Env}, ${3:Opts}) $4'), ('header/4', 'header(${1:Forms}, ${2:Comments}, ${3:File}, ${4:Param4}) $5'), ('header/5', 'header(${1:Forms}, ${2:Comments}, ${3:File}, ${4:Env}, ${5:Opts}) $6'), ('file/4', 'file(${1:File}, ${2:Context}, ${3:Env}, ${4:Opts}) $5'), ('text/4', 'text(${1:Text}, ${2:Context}, ${3:Env}, ${4:Opts}) $5')],
'edoc_layout': [('module/2', 'module(${1:Element}, ${2:Options}) $3'), ('package/2', 'package(${1:Param1}, ${2:Options}) $3'), ('overview/2', 'overview(${1:Param1}, ${2:Options}) $3'), ('type/1', 'type(${1:Es}) $2')],
'edoc_lib': [('count/2', 'count(${1:X}, ${2:Xs}) $3'), ('lines/1', 'lines(${1:Cs}) $2'), ('split_at/2', 'split_at(${1:Cs}, ${2:K}) $3'), ('split_at_stop/1', 'split_at_stop(${1:Cs}) $2'), ('split_at_space/1', 'split_at_space(${1:Cs}) $2'), ('filename/1', 'filename(${1:N}) $2'), ('transpose/1', 'transpose(${1:Param1}) $2'), ('segment/2', 'segment(${1:Es}, ${2:N}) $3'), ('get_first_sentence/1', 'get_first_sentence(${1:Es}) $2'), ('is_space/1', 'is_space(${1:Param1}) $2'), ('strip_space/1', 'strip_space(${1:Cs}) $2'), ('parse_expr/2', 'parse_expr(${1:S}, ${2:L}) $3'), ('parse_contact/2', 'parse_contact(${1:S}, ${2:L}) $3'), ('escape_uri/1', 'escape_uri(${1:Param1}) $2'), ('join_uri/2', 'join_uri(${1:Base}, ${2:Path}) $3'), ('is_relative_uri/1', 'is_relative_uri(${1:Param1}) $2'), ('is_name/1', 'is_name(${1:Param1}) $2'), ('to_label/1', 'to_label(${1:Cs}) $2'), ('find_doc_dirs/0', 'find_doc_dirs() $1'), ('find_sources/2', 'find_sources(${1:Path}, ${2:Opts}) $3'), ('find_sources/3', 'find_sources(${1:Path}, ${2:Pkg}, ${3:Opts}) $4'), ('find_file/3', 'find_file(${1:Param1}, ${2:Pkg}, ${3:Name}) $4'), ('try_subdir/2', 'try_subdir(${1:Dir}, ${2:Subdir}) $3'), ('unique/1', 'unique(${1:Param1}) $2'), ('write_file/3', 'write_file(${1:Text}, ${2:Dir}, ${3:Name}) $4'), ('write_file/4', 'write_file(${1:Text}, ${2:Dir}, ${3:Name}, ${4:Package}) $5'), ('write_info_file/4', 'write_info_file(${1:App}, ${2:Packages}, ${3:Modules}, ${4:Dir}) $5'), ('read_info_file/1', 'read_info_file(${1:Dir}) $2'), ('get_doc_env/1', 'get_doc_env(${1:Opts}) $2'), ('get_doc_env/4', 'get_doc_env(${1:App}, ${2:Packages}, ${3:Modules}, ${4:Opts}) $5'), ('copy_file/2', 'copy_file(${1:From}, ${2:To}) $3'), ('uri_get/1', 'uri_get(${1:URI}) $2'), ('run_doclet/2', 'run_doclet(${1:Fun}, ${2:Opts}) $3'), ('run_layout/2', 'run_layout(${1:Fun}, ${2:Opts}) $3'), ('simplify_path/1', 'simplify_path(${1:P}) $2'), ('timestr/1', 'timestr(${1:Param1}) $2'), ('datestr/1', 'datestr(${1:Param1}) $2')],
'edoc_macros': [('expand_tags/3', 'expand_tags(${1:Ts}, ${2:Env}, ${3:Where}) $4'), ('std_macros/1', 'std_macros(${1:Env}) $2'), ('check_defs/1', 'check_defs(${1:Param1}) $2')],
'edoc_parser': [('parse/1', 'parse(${1:Tokens}) $2'), ('parse_and_scan/1', 'parse_and_scan(${1:Param1}) $2'), ('format_error/1', 'format_error(${1:Message}) $2')],
'edoc_refs': [('app/1', 'app(${1:App}) $2'), ('app/2', 'app(${1:App}, ${2:Ref}) $3'), ('package/1', 'package(${1:P}) $2'), ('module/1', 'module(${1:M}) $2'), ('module/2', 'module(${1:M}, ${2:Ref}) $3'), ('module/3', 'module(${1:App}, ${2:M}, ${3:Ref}) $4'), ('function/2', 'function(${1:F}, ${2:A}) $3'), ('function/3', 'function(${1:M}, ${2:F}, ${3:A}) $4'), ('function/4', 'function(${1:App}, ${2:M}, ${3:F}, ${4:A}) $5'), ('type/1', 'type(${1:T}) $2'), ('type/2', 'type(${1:M}, ${2:T}) $3'), ('type/3', 'type(${1:App}, ${2:M}, ${3:T}) $4'), ('to_string/1', 'to_string(${1:Param1}) $2'), ('to_label/1', 'to_label(${1:Param1}) $2'), ('get_uri/2', 'get_uri(${1:Ref}, ${2:Env}) $3'), ('is_top/2', 'is_top(${1:Param1}, ${2:Param2}) $3'), ('relative_module_path/2', 'relative_module_path(${1:To}, ${2:From}) $3'), ('relative_package_path/2', 'relative_package_path(${1:To}, ${2:From}) $3')],
'edoc_report': [('error/1', 'error(${1:What}) $2'), ('error/2', 'error(${1:Where}, ${2:What}) $3'), ('error/3', 'error(${1:Line}, ${2:Where}, ${3:Param3}) $4'), ('report/2', 'report(${1:S}, ${2:Vs}) $3'), ('report/3', 'report(${1:Where}, ${2:S}, ${3:Vs}) $4'), ('report/4', 'report(${1:L}, ${2:Where}, ${3:S}, ${4:Vs}) $5'), ('warning/1', 'warning(${1:S}) $2'), ('warning/2', 'warning(${1:S}, ${2:Vs}) $3'), ('warning/3', 'warning(${1:Where}, ${2:S}, ${3:Vs}) $4'), ('warning/4', 'warning(${1:L}, ${2:Where}, ${3:S}, ${4:Vs}) $5')],
'edoc_run': [('file/1', 'file(${1:Args}) $2'), ('application/1', 'application(${1:Args}) $2'), ('packages/1', 'packages(${1:Args}) $2'), ('files/1', 'files(${1:Args}) $2'), ('toc/1', 'toc(${1:Args}) $2')],
'edoc_scanner': [('string/1', 'string(${1:Cs}) $2'), ('string/2', 'string(${1:Cs}, ${2:StartPos}) $3'), ('format_error/1', 'format_error(${1:Other}) $2')],
'edoc_specs': [('type/2', 'type(${1:Form}, ${2:TypeDocs}) $3'), ('spec/2', 'spec(${1:Form}, ${2:Clause}) $3'), ('dummy_spec/1', 'dummy_spec(${1:Form}) $2'), ('docs/2', 'docs(${1:Forms}, ${2:CommentFun}) $3')],
'edoc_tags': [('tags/0', 'tags() $1'), ('tags/1', 'tags(${1:Flag}) $2'), ('tag_names/0', 'tag_names() $1'), ('tag_parsers/0', 'tag_parsers() $1'), ('scan_lines/2', 'scan_lines(${1:Ss}, ${2:L}) $3'), ('filter_tags/2', 'filter_tags(${1:Ts}, ${2:Tags}) $3'), ('filter_tags/3', 'filter_tags(${1:Ts}, ${2:Tags}, ${3:Where}) $4'), ('check_tags/4', 'check_tags(${1:Ts}, ${2:Allow}, ${3:Single}, ${4:Where}) $5'), ('parse_tags/4', 'parse_tags(${1:Ts}, ${2:How}, ${3:Env}, ${4:Where}) $5'), ('check_types/3', 'check_types(${1:Entries}, ${2:Opts}, ${3:File}) $4')],
'edoc_types': [('is_predefined/2', 'is_predefined(${1:F}, ${2:A}) $3'), ('is_new_predefined/2', 'is_new_predefined(${1:Param1}, ${2:Param2}) $3'), ('is_predefined_otp_type/2', 'is_predefined_otp_type(${1:Param1}, ${2:Param2}) $3'), ('to_ref/1', 'to_ref(${1:Param1}) $2'), ('to_xml/2', 'to_xml(${1:Param1}, ${2:Env}) $3'), ('to_label/1', 'to_label(${1:N}) $2'), ('arg_names/1', 'arg_names(${1:S}) $2'), ('set_arg_names/2', 'set_arg_names(${1:S}, ${2:Ns}) $3'), ('arg_descs/1', 'arg_descs(${1:S}) $2'), ('range_desc/1', 'range_desc(${1:Param1}) $2')],
'edoc_wiki': [('parse_xml/2', 'parse_xml(${1:Data}, ${2:Line}) $3'), ('expand_text/2', 'expand_text(${1:Cs}, ${2:L}) $3')],
'otpsgml_layout': [('module/2', 'module(${1:Element}, ${2:Options}) $3'), ('package/2', 'package(${1:Param1}, ${2:Options}) $3'), ('overview/2', 'overview(${1:Param1}, ${2:Options}) $3'), ('type/1', 'type(${1:Es}) $2')],
'docgen_edoc_xml_cb': [('module/2', 'module(${1:Element}, ${2:Opts}) $3'), ('overview/2', 'overview(${1:Element}, ${2:Param2}) $3')],
'docgen_otp_specs': [('module/2', 'module(${1:Element}, ${2:Options}) $3'), ('package/2', 'package(${1:Param1}, ${2:Param2}) $3'), ('overview/2', 'overview(${1:Param1}, ${2:Param2}) $3'), ('type/1', 'type(${1:Es}) $2')],
'docgen_xmerl_xml_cb': [("'#xml-inheritance#'/0", "'#xml-inheritance#'() $1")],
'erl_prim_loader': [('start/3', 'start(${1:Id}, ${2:Loader}, ${3:Hosts}) $4'), ('set_path/1', 'set_path(${1:Path}) $2'), ('get_path/0', 'get_path() $1'), ('get_file/1', 'get_file(${1:Filename}) $2'), ('get_files/2', 'get_files(${1:ModFiles}, ${2:Fun}) $3'), ('list_dir/1', 'list_dir(${1:Dir}) $2'), ('read_file_info/1', 'read_file_info(${1:Filename}) $2'), ('get_cwd/0', 'get_cwd() $1'), ('get_cwd/1', 'get_cwd(${1:Drive}) $2')],
'erlang': [('apply/2', 'apply(${1:Fun}, ${2:Args}) $3'), ('apply/3', 'apply(${1:Module}, ${2:Function}, ${3:Args}) $4'), ('spawn/4', 'spawn(${1:N}, ${2:Module}, ${3:Function}, ${4:Args}) $5'), ('spawn_link/4', 'spawn_link(${1:N}, ${2:Module}, ${3:Function}, ${4:Args}) $5'), ('spawn_monitor/1', 'spawn_monitor(${1:Fun}) $2'), ('spawn_monitor/3', 'spawn_monitor(${1:Module}, ${2:Function}, ${3:Args}) $4'), ('spawn_opt/2', 'spawn_opt(${1:Fun}, ${2:Options}) $3'), ('spawn_opt/3', 'spawn_opt(${1:Node}, ${2:Fun}, ${3:O}) $4'), ('spawn_opt/4', 'spawn_opt(${1:N}, ${2:F}, ${3:Args}, ${4:O}) $5'), ('spawn_opt/5', 'spawn_opt(${1:N}, ${2:Module}, ${3:Function}, ${4:Args}, ${5:Options}) $6'), ('disconnect_node/1', 'disconnect_node(${1:Node}) $2')],
'init': [('restart/0', 'restart() $1'), ('reboot/0', 'reboot() $1'), ('stop/0', 'stop() $1'), ('stop/1', 'stop(${1:Status}) $2'), ('get_status/0', 'get_status() $1'), ('boot/1', 'boot(${1:BootArgs}) $2'), ('get_arguments/0', 'get_arguments() $1'), ('get_plain_arguments/0', 'get_plain_arguments() $1'), ('get_argument/1', 'get_argument(${1:Flag}) $2'), ('script_id/0', 'script_id() $1')],
'otp_ring0': [('start/2', 'start(${1:Param1}, ${2:Argv}) $3')],
'prim_file': [('open/2', 'open(${1:Driver}, ${2:Portopts}) $3'), ('close/1', 'close(${1:Port}) $2'), ('datasync/1', 'datasync(${1:Param1}) $2'), ('sync/1', 'sync(${1:Param1}) $2'), ('advise/4', 'advise(${1:Param1}, ${2:Offset}, ${3:Length}, ${4:Advise}) $5'), ('position/2', 'position(${1:Param1}, ${2:At}) $3'), ('truncate/1', 'truncate(${1:Param1}) $2'), ('write/2', 'write(${1:Param1}, ${2:Bytes}) $3'), ('pwrite/2', 'pwrite(${1:Param1}, ${2:Param2}) $3'), ('pwrite/3', 'pwrite(${1:Param1}, ${2:Param2}, ${3:Param3}) $4'), ('read/2', 'read(${1:Param1}, ${2:Param2}) $3'), ('read_line/1', 'read_line(${1:Param1}) $2'), ('pread/2', 'pread(${1:Param1}, ${2:Param2}) $3'), ('pread/3', 'pread(${1:Param1}, ${2:Param2}, ${3:Param3}) $4'), ('copy/3', 'copy() $1'), ('sendfile/10', 'sendfile(${1:Param1}, ${2:Dest}, ${3:Offset}, ${4:Bytes}, ${5:Param5}, ${6:Headers}, ${7:Trailers}, ${8:Param8}, ${9:Param9}, ${10:Param10}) $11')],
'prim_inet': [('open/3', 'open(${1:Protocol}, ${2:Family}, ${3:Type}) $4'), ('fdopen/4', 'fdopen(${1:Protocol}, ${2:Family}, ${3:Type}, ${4:Param4}) $5'), ('close/1', 'close(${1:Param1}) $2')],
'prim_zip': [('open/1', 'open(${1:F}) $2'), ('open/3', 'open(${1:FilterFun}, ${2:FilterAcc}, ${3:F}) $4'), ('foldl/3', 'foldl(${1:FilterFun}, ${2:FilterAcc}, ${3:Param3}) $4'), ('close/1', 'close(${1:Param1}) $2')],
'zlib': [('open/0', 'open() $1'), ('close/1', 'close(${1:Z}) $2'), ('deflateInit/1', 'deflateInit(${1:Z}) $2'), ('deflateInit/2', 'deflateInit(${1:Z}, ${2:Level}) $3'), ('deflateInit/6', 'deflateInit(${1:Z}, ${2:Level}, ${3:Method}, ${4:WindowBits}, ${5:MemLevel}, ${6:Strategy}) $7'), ('deflateSetDictionary/2', 'deflateSetDictionary(${1:Z}, ${2:Dictionary}) $3'), ('deflateReset/1', 'deflateReset(${1:Z}) $2'), ('deflateParams/3', 'deflateParams(${1:Z}, ${2:Level}, ${3:Strategy}) $4'), ('deflate/2', 'deflate(${1:Z}, ${2:Data}) $3'), ('deflate/3', 'deflate(${1:Z}, ${2:Data}, ${3:Flush}) $4'), ('deflateEnd/1', 'deflateEnd(${1:Z}) $2'), ('inflateInit/1', 'inflateInit(${1:Z}) $2'), ('inflateInit/2', 'inflateInit(${1:Z}, ${2:WindowBits}) $3'), ('inflateSetDictionary/2', 'inflateSetDictionary(${1:Z}, ${2:Dictionary}) $3'), ('inflateSync/1', 'inflateSync(${1:Z}) $2'), ('inflateReset/1', 'inflateReset(${1:Z}) $2'), ('inflate/2', 'inflate(${1:Z}, ${2:Data}) $3'), ('inflateEnd/1', 'inflateEnd(${1:Z}) $2'), ('setBufSize/2', 'setBufSize(${1:Z}, ${2:Size}) $3'), ('getBufSize/1', 'getBufSize(${1:Z}) $2'), ('crc32/1', 'crc32(${1:Z}) $2'), ('crc32/2', 'crc32(${1:Z}, ${2:Data}) $3'), ('crc32/3', 'crc32(${1:Z}, ${2:PrevCRC}, ${3:Data}) $4'), ('adler32/2', 'adler32(${1:Z}, ${2:Data}) $3'), ('adler32/3', 'adler32(${1:Z}, ${2:PrevAdler}, ${3:Data}) $4'), ('getQSize/1', 'getQSize(${1:Z}) $2'), ('crc32_combine/4', 'crc32_combine(${1:Z}, ${2:CRC1}, ${3:CRC2}, ${4:Size2}) $5'), ('adler32_combine/4', 'adler32_combine(${1:Z}, ${2:Adler1}, ${3:Adler2}, ${4:Size2}) $5'), ('compress/1', 'compress(${1:Data}) $2'), ('uncompress/1', 'uncompress(${1:Data}) $2'), ('zip/1', 'zip(${1:Data}) $2'), ('unzip/1', 'unzip(${1:Data}) $2'), ('gzip/1', 'gzip(${1:Data}) $2'), ('gunzip/1', 'gunzip(${1:Data}) $2')],
'et': [('trace_me/4', 'trace_me(${1:DetailLevel}, ${2:FromTo}, ${3:Label}, ${4:Contents}) $5'), ('phone_home/4', 'phone_home(${1:DetailLevel}, ${2:FromTo}, ${3:Label}, ${4:Contents}) $5'), ('report_event/4', 'report_event(${1:DetailLevel}, ${2:FromTo}, ${3:Label}, ${4:Contents}) $5'), ('trace_me/5', 'trace_me(${1:DetailLevel}, ${2:From}, ${3:To}, ${4:Label}, ${5:Contents}) $6'), ('phone_home/5', 'phone_home(${1:DetailLevel}, ${2:From}, ${3:To}, ${4:Label}, ${5:Contents}) $6'), ('report_event/5', 'report_event(${1:DetailLevel}, ${2:From}, ${3:To}, ${4:Label}, ${5:Contents}) $6')],
'et_collector': [('start_link/1', 'start_link(${1:Options}) $2'), ('stop/1', 'stop(${1:CollectorPid}) $2'), ('report/2', 'report(${1:CollectorPid}, ${2:Bad}) $3'), ('report_event/5', 'report_event(${1:CollectorPid}, ${2:DetailLevel}, ${3:FromTo}, ${4:Label}, ${5:Contents}) $6'), ('report_event/6', 'report_event() $1'), ('iterate/3', 'iterate(${1:Handle}, ${2:Prev}, ${3:Limit}) $4'), ('iterate/5', 'iterate(${1:Handle}, ${2:Prev}, ${3:Limit}, ${4:Fun}, ${5:Acc}) $6'), ('lookup/2', 'lookup(${1:CollectorPid}, ${2:Key}) $3'), ('start_trace_client/3', 'start_trace_client(${1:CollectorPid}, ${2:Type}, ${3:Parameters}) $4'), ('start_trace_port/1', 'start_trace_port(${1:Parameters}) $2'), ('save_event_file/3', 'save_event_file(${1:CollectorPid}, ${2:FileName}, ${3:Options}) $4'), ('clear_table/1', 'clear_table(${1:Handle}) $2'), ('get_global_pid/0', 'get_global_pid() $1'), ('get_table_size/1', 'get_table_size(${1:Param1}) $2'), ('change_pattern/2', 'change_pattern(${1:CollectorPid}, ${2:RawPattern}) $3'), ('make_key/2', 'make_key(${1:Type}, ${2:Stuff}) $3'), ('dict_insert/3', 'dict_insert(${1:CollectorPid}, ${2:Key}, ${3:FilterFun}) $4'), ('dict_delete/2', 'dict_delete(${1:CollectorPid}, ${2:Key}) $3'), ('dict_lookup/2', 'dict_lookup(${1:CollectorPid}, ${2:Key}) $3'), ('dict_match/2', 'dict_match(${1:CollectorPid}, ${2:Pattern}) $3'), ('multicast/2', 'multicast(${1:CollectorPid}, ${2:Msg}) $3')],
'et_gs_contents_viewer': [('start_link/1', 'start_link(${1:Options}) $2'), ('stop/1', 'stop(${1:ContentsPid}) $2')],
'et_gs_viewer': [('start_link/1', 'start_link(${1:Options}) $2')],
'et_selector': [('make_pattern/1', 'make_pattern(${1:RawPattern}) $2'), ('change_pattern/1', 'change_pattern(${1:Pattern}) $2'), ('parse_event/2', 'parse_event(${1:Mod}, ${2:ValidTraceData}) $3')],
'et_viewer': [('file/1', 'file(${1:FileName}) $2'), ('start/0', 'start() $1'), ('start/1', 'start(${1:Options}) $2'), ('start/2', 'start(${1:Options}, ${2:GUI}) $3'), ('start_link/1', 'start_link(${1:Options}) $2'), ('start_link/2', 'start_link(${1:Options}, ${2:GUI}) $3'), ('open_event/2', 'open_event(${1:ViewerPid}, ${2:N}) $3'), ('stop/1', 'stop(${1:ViewerPid}) $2'), ('get_collector_pid/1', 'get_collector_pid(${1:ViewerPid}) $2')],
'et_wx_contents_viewer': [('start_link/1', 'start_link(${1:Options}) $2'), ('stop/1', 'stop(${1:ContentsPid}) $2')],
'et_wx_viewer': [('start_link/1', 'start_link(${1:Options}) $2')],
'eunit': [('start/0', 'start() $1'), ('stop/0', 'stop() $1'), ('test/1', 'test(${1:Tests}) $2'), ('test/2', 'test(${1:Tests}, ${2:Options}) $3')],
'eunit_autoexport': [('parse_transform/2', 'parse_transform(${1:Forms}, ${2:Options}) $3')],
'eunit_data': [('iter_init/2', 'iter_init(${1:Tests}, ${2:ParentID}) $3'), ('iter_next/1', 'iter_next(${1:Param1}) $2'), ('iter_prev/1', 'iter_prev(${1:Param1}) $2'), ('iter_id/1', 'iter_id(${1:Param1}) $2'), ('enter_context/3', 'enter_context(${1:Param1}, ${2:I}, ${3:F}) $4'), ('get_module_tests/1', 'get_module_tests(${1:M}) $2')],
'eunit_lib': [('dlist_next/1', 'dlist_next(${1:X}) $2'), ('uniq/1', 'uniq(${1:Param1}) $2'), ('fun_parent/1', 'fun_parent(${1:F}) $2'), ('is_string/1', 'is_string(${1:Param1}) $2'), ('command/1', 'command(${1:Cmd}) $2'), ('command/2', 'command(${1:Cmd}, ${2:Dir}) $3'), ('command/3', 'command(${1:Cmd}, ${2:Dir}, ${3:Env}) $4'), ('trie_new/0', 'trie_new() $1'), ('trie_store/2', 'trie_store(${1:Param1}, ${2:T}) $3'), ('trie_match/2', 'trie_match(${1:Param1}, ${2:T}) $3'), ('split_node/1', 'split_node(${1:Cs}) $2'), ('consult_file/1', 'consult_file(${1:File}) $2'), ('list_dir/1', 'list_dir(${1:Dir}) $2'), ('format_exit_term/1', 'format_exit_term(${1:Term}) $2'), ('format_exception/1', 'format_exception(${1:Exception}) $2'), ('format_exception/2', 'format_exception(${1:Term}, ${2:Depth}) $3'), ('format_error/1', 'format_error(${1:Param1}) $2')],
'eunit_listener': [('start/1', 'start(${1:Callback}) $2'), ('start/2', 'start(${1:Callback}, ${2:Options}) $3')],
'eunit_proc': [('start/4', 'start() $1')],
'eunit_serial': [('start/1', 'start(${1:Pids}) $2')],
'eunit_server': [('start/1', 'start(${1:Param1}) $2'), ('stop/1', 'stop(${1:Server}) $2'), ('start_test/4', 'start_test(${1:Server}, ${2:Super}, ${3:T}, ${4:Options}) $5'), ('watch/3', 'watch(${1:Server}, ${2:Module}, ${3:St}) $4'), ('watch_path/3', 'watch_path(${1:Server}, ${2:Path}, ${3:Opts}) $4'), ('watch_regexp/3', 'watch_regexp(${1:Server}, ${2:Regex}, ${3:Opts}) $4')],
'eunit_striptests': [('parse_transform/2', 'parse_transform(${1:Forms}, ${2:Options}) $3')],
'eunit_surefire': [('start/0', 'start() $1'), ('start/1', 'start(${1:Options}) $2')],
'eunit_test': [('run_testfun/1', 'run_testfun(${1:F}) $2'), ('function_wrapper/2', 'function_wrapper(${1:M}, ${2:F}) $3'), ('enter_context/4', 'enter_context(${1:Setup}, ${2:Cleanup}, ${3:Instantiate}, ${4:Callback}) $5'), ('multi_setup/1', 'multi_setup(${1:List}) $2')],
'eunit_tty': [('start/0', 'start() $1'), ('start/1', 'start(${1:Options}) $2')],
'ball': [('start/0', 'start() $1'), ('init/0', 'init() $1')],
'browser': [('start/0', 'start() $1'), ('start/2', 'start(${1:Text}, ${2:Items}) $3'), ('init/3', 'init(${1:Pid}, ${2:Text}, ${3:Items}) $4')],
'calc': [('start/0', 'start() $1'), ('calc/0', 'calc() $1')],
'calc2': [('start/0', 'start() $1'), ('calc/0', 'calc() $1')],
'color_demo': [('start/0', 'start() $1'), ('init/0', 'init() $1')],
'color_demo2': [('start/0', 'start() $1'), ('init/0', 'init() $1')],
'distrib_draw': [('start/2', 'start(${1:Node1}, ${2:Node2}) $3'), ('init/0', 'init() $1')],
'entry_demo': [('start/0', 'start() $1'), ('init/1', 'init(${1:Pid}) $2')],
'event_test': [('start/0', 'start() $1'), ('init/0', 'init() $1')],
'file_dialog': [('start/0', 'start() $1'), ('start/1', 'start(${1:Dir}) $2'), ('start/2', 'start(${1:Dir}, ${2:File}) $3'), ('fs_init/3', 'fs_init(${1:Dir}, ${2:File}, ${3:Owner}) $4')],
'focus_demo': [('start/0', 'start() $1'), ('init/0', 'init() $1')],
'frac': [('start/0', 'start() $1'), ('go/0', 'go() $1'), ('test/0', 'test() $1'), ('grow/2', 'grow(${1:NGens}, ${2:RuleNumber}) $3'), ('expand/3', 'expand(${1:N}, ${2:Index}, ${3:X}) $4'), ('subst/2', 'subst(${1:Param1}, ${2:Index}) $3')],
'line_demo': [('start/0', 'start() $1'), ('init/0', 'init() $1'), ('line/3', 'line(${1:Line}, ${2:Param2}, ${3:Param3}) $4')],
'man': [('start/0', 'start() $1'), ('init/0', 'init() $1')],
'rubber': [('start/0', 'start() $1'), ('init/0', 'init() $1')],
'gs': [('start/0', 'start() $1'), ('stop/0', 'stop() $1'), ('start/1', 'start(${1:Opts}) $2')],
'gs_frontend': [('create/2', 'create(${1:GsPid}, ${2:Args}) $3'), ('config/2', 'config(${1:GsPid}, ${2:Args}) $3'), ('read/2', 'read(${1:GsPid}, ${2:Args}) $3'), ('destroy/2', 'destroy(${1:GsPid}, ${2:IdOrName}) $3'), ('info/1', 'info(${1:Option}) $2'), ('start/1', 'start(${1:Opts}) $2'), ('stop/0', 'stop() $1'), ('init/1', 'init(${1:Param1}) $2'), ('event/3', 'event(${1:FrontEnd}, ${2:ToOwner}, ${3:EventMsg}) $4')],
'gs_make': [('start/0', 'start() $1')],
'gs_packer': [('pack/2', 'pack(${1:Size}, ${2:SpecSizes}) $3')],
'gs_widgets': [('default_options/1', 'default_options(${1:Param1}) $2'), ('container/1', 'container(${1:Param1}) $2')],
'gse': [('start/0', 'start() $1'), ('start/1', 'start(${1:Opts}) $2'), ('create/3', 'create(${1:Objtype}, ${2:Parent}, ${3:Param3}) $4'), ('create_named/4', 'create_named(${1:Name}, ${2:Objtype}, ${3:Parent}, ${4:Param4}) $5'), ('config/2', 'config(${1:Object}, ${2:Param2}) $3'), ('read/2', 'read(${1:Object}, ${2:OptionKey}) $3'), ('destroy/1', 'destroy(${1:Object}) $2'), ('create_tree/2', 'create_tree(${1:Parent}, ${2:Tree}) $3'), ('window/2', 'window(${1:Parent}, ${2:Param2}) $3'), ('named_window/3', 'named_window(${1:Name}, ${2:Parent}, ${3:Param3}) $4'), ('button/2', 'button(${1:Parent}, ${2:Param2}) $3'), ('named_button/3', 'named_button(${1:Name}, ${2:Parent}, ${3:Param3}) $4'), ('checkbutton/2', 'checkbutton(${1:Parent}, ${2:Param2}) $3'), ('named_checkbutton/3', 'named_checkbutton(${1:Name}, ${2:Parent}, ${3:Param3}) $4'), ('radiobutton/2', 'radiobutton(${1:Parent}, ${2:Param2}) $3'), ('named_radiobutton/3', 'named_radiobutton(${1:Name}, ${2:Parent}, ${3:Param3}) $4'), ('frame/2', 'frame(${1:Parent}, ${2:Param2}) $3'), ('named_frame/3', 'named_frame(${1:Name}, ${2:Parent}, ${3:Param3}) $4'), ('canvas/2', 'canvas(${1:Parent}, ${2:Param2}) $3'), ('named_canvas/3', 'named_canvas(${1:Name}, ${2:Parent}, ${3:Param3}) $4'), ('label/2', 'label(${1:Parent}, ${2:Param2}) $3'), ('named_label/3', 'named_label(${1:Name}, ${2:Parent}, ${3:Param3}) $4'), ('message/2', 'message(${1:Parent}, ${2:Param2}) $3'), ('named_message/3', 'named_message(${1:Name}, ${2:Parent}, ${3:Param3}) $4'), ('listbox/2', 'listbox(${1:Parent}, ${2:Param2}) $3'), ('named_listbox/3', 'named_listbox(${1:Name}, ${2:Parent}, ${3:Param3}) $4'), ('entry/2', 'entry(${1:Parent}, ${2:Param2}) $3'), ('named_entry/3', 'named_entry(${1:Name}, ${2:Parent}, ${3:Param3}) $4'), ('scrollbar/2', 'scrollbar(${1:Parent}, ${2:Param2}) $3'), ('named_scrollbar/3', 'named_scrollbar(${1:Name}, ${2:Parent}, ${3:Param3}) $4'), ('scale/2', 'scale(${1:Parent}, ${2:Param2}) $3'), ('named_scale/3', 'named_scale(${1:Name}, ${2:Parent}, ${3:Param3}) $4'), ('editor/2', 'editor(${1:Parent}, ${2:Param2}) $3'), ('named_editor/3', 'named_editor(${1:Name}, ${2:Parent}, ${3:Param3}) $4'), ('prompter/2', 'prompter(${1:Parent}, ${2:Param2}) $3'), ('named_prompter/3', 'named_prompter(${1:Name}, ${2:Parent}, ${3:Param3}) $4'), ('line/2', 'line(${1:Parent}, ${2:Param2}) $3'), ('named_line/3', 'named_line(${1:Name}, ${2:Parent}, ${3:Param3}) $4'), ('oval/2', 'oval(${1:Parent}, ${2:Param2}) $3'), ('named_oval/3', 'named_oval(${1:Name}, ${2:Parent}, ${3:Param3}) $4'), ('rectangle/2', 'rectangle(${1:Parent}, ${2:Param2}) $3'), ('named_rectangle/3', 'named_rectangle(${1:Name}, ${2:Parent}, ${3:Param3}) $4'), ('polygon/2', 'polygon(${1:Parent}, ${2:Param2}) $3'), ('named_polygon/3', 'named_polygon(${1:Name}, ${2:Parent}, ${3:Param3}) $4'), ('text/2', 'text(${1:Parent}, ${2:Param2}) $3'), ('named_text/3', 'named_text(${1:Name}, ${2:Parent}, ${3:Param3}) $4'), ('image/2', 'image(${1:Parent}, ${2:Param2}) $3'), ('named_image/3', 'named_image(${1:Name}, ${2:Parent}, ${3:Param3}) $4'), ('arc/2', 'arc(${1:Parent}, ${2:Param2}) $3'), ('named_arc/3', 'named_arc(${1:Name}, ${2:Parent}, ${3:Param3}) $4'), ('menu/2', 'menu(${1:Parent}, ${2:Param2}) $3'), ('named_menu/3', 'named_menu(${1:Name}, ${2:Parent}, ${3:Param3}) $4'), ('menubutton/2', 'menubutton(${1:Parent}, ${2:Param2}) $3'), ('named_menubutton/3', 'named_menubutton(${1:Name}, ${2:Parent}, ${3:Param3}) $4'), ('menubar/2', 'menubar(${1:Parent}, ${2:Param2}) $3'), ('named_menubar/3', 'named_menubar(${1:Name}, ${2:Parent}, ${3:Param3}) $4'), ('menuitem/2', 'menuitem(${1:Parent}, ${2:Param2}) $3'), ('named_menuitem/3', 'named_menuitem(${1:Name}, ${2:Parent}, ${3:Param3}) $4'), ('grid/2', 'grid(${1:Parent}, ${2:Param2}) $3'), ('named_grid/3', 'named_grid(${1:Name}, ${2:Parent}, ${3:Param3}) $4'), ('gridline/2', 'gridline(${1:Parent}, ${2:Param2}) $3'), ('named_gridline/3', 'named_gridline(${1:Name}, ${2:Parent}, ${3:Param3}) $4'), ('enable/1', 'enable(${1:Object}) $2'), ('disable/1', 'disable(${1:Object}) $2'), ('select/1', 'select(${1:Object}) $2'), ('deselect/1', 'deselect(${1:Object}) $2'), ('map/1', 'map(${1:Object}) $2'), ('unmap/1', 'unmap(${1:Object}) $2'), ('resize/3', 'resize(${1:Object}, ${2:Width}, ${3:Height}) $4'), ('name_occupied/1', 'name_occupied(${1:Name}) $2')],
'gstk': [('start_link/4', 'start_link(${1:GsId}, ${2:FrontendNode}, ${3:Owner}, ${4:Options}) $5'), ('stop/1', 'stop(${1:BackendServ}) $2'), ('create/2', 'create(${1:BackendServ}, ${2:Args}) $3'), ('config/2', 'config(${1:BackendServ}, ${2:Args}) $3'), ('read/2', 'read(${1:BackendServ}, ${2:Args}) $3'), ('destroy/2', 'destroy(${1:BackendServ}, ${2:Args}) $3'), ('pid_died/2', 'pid_died(${1:BackendServ}, ${2:Pid}) $3'), ('event/2', 'event(${1:BackendServ}, ${2:Event}) $3'), ('request/2', 'request(${1:Who}, ${2:Msg}) $3'), ('init/1', 'init(${1:Delay}) $2'), ('create_impl/2', 'create_impl(${1:DB}, ${2:Param2}) $3'), ('config_impl/3', 'config_impl(${1:DB}, ${2:Id}, ${3:Opts}) $4'), ('read_impl/3', 'read_impl(${1:DB}, ${2:Id}, ${3:Opt}) $4'), ('destroy_impl/2', 'destroy_impl(${1:DB}, ${2:Gstkid}) $3'), ('worker_init/1', 'worker_init(${1:Delay}) $2'), ('worker_do/1', 'worker_do(${1:Msg}) $2'), ('make_extern_id/2', 'make_extern_id(${1:IntId}, ${2:DB}) $3'), ('to_color/1', 'to_color(${1:Param1}) $2'), ('to_ascii/1', 'to_ascii(${1:Param1}) $2'), ('exec/1', 'exec(${1:Cmd}) $2'), ('call/1', 'call(${1:Cmd}) $2')],
'gstk_arc': [('create/3', 'create(${1:DB}, ${2:GstkId}, ${3:Opts}) $4'), ('config/3', 'config(${1:DB}, ${2:Gstkid}, ${3:Opts}) $4'), ('read/3', 'read(${1:DB}, ${2:Gstkid}, ${3:Opt}) $4'), ('delete/2', 'delete(${1:DB}, ${2:Gstkid}) $3'), ('destroy/3', 'destroy(${1:Param1}, ${2:Canvas}, ${3:Item}) $4'), ('event/5', 'event(${1:DB}, ${2:Gstkid}, ${3:Etype}, ${4:Edata}, ${5:Args}) $6'), ('option/5', 'option(${1:Option}, ${2:Gstkid}, ${3:Canvas}, ${4:Param4}, ${5:AItem}) $6'), ('read_option/5', 'read_option(${1:Option}, ${2:Gstkid}, ${3:Canvas}, ${4:Param4}, ${5:AItem}) $6')],
'gstk_button': [('create/3', 'create(${1:DB}, ${2:GstkId}, ${3:Opts}) $4'), ('config/3', 'config(${1:DB}, ${2:Gstkid}, ${3:Opts}) $4'), ('read/3', 'read(${1:DB}, ${2:Gstkid}, ${3:Opt}) $4'), ('delete/2', 'delete(${1:DB}, ${2:Gstkid}) $3'), ('event/5', 'event(${1:DB}, ${2:Gstkid}, ${3:Etype}, ${4:Edata}, ${5:Args}) $6'), ('option/5', 'option(${1:Option}, ${2:Gstkid}, ${3:TkW}, ${4:DB}, ${5:Param5}) $6'), ('read_option/5', 'read_option(${1:Option}, ${2:Gstkid}, ${3:TkW}, ${4:DB}, ${5:Param5}) $6')],
'gstk_canvas': [('create/3', 'create(${1:DB}, ${2:Gstkid}, ${3:Opts}) $4'), ('config/3', 'config(${1:DB}, ${2:Gstkid}, ${3:Options}) $4'), ('read/3', 'read(${1:DB}, ${2:Gstkid}, ${3:Opt}) $4'), ('delete/2', 'delete(${1:DB}, ${2:Gstkid}) $3'), ('event/5', 'event(${1:DB}, ${2:Gstkid}, ${3:Etype}, ${4:Edata}, ${5:Args}) $6'), ('option/5', 'option(${1:Option}, ${2:Gstkid}, ${3:Param3}, ${4:DB}, ${5:Canvas}) $6'), ('read_option/5', 'read_option(${1:Option}, ${2:Gstkid}, ${3:Param3}, ${4:DB}, ${5:Canvas}) $6')],
'gstk_checkbutton': [('create/3', 'create(${1:DB}, ${2:GstkId}, ${3:Opts}) $4'), ('config/3', 'config(${1:DB}, ${2:Gstkid}, ${3:Opts}) $4'), ('read/3', 'read(${1:DB}, ${2:Gstkid}, ${3:Opt}) $4'), ('delete/2', 'delete(${1:DB}, ${2:Gstkid}) $3'), ('event/5', 'event(${1:DB}, ${2:Gstkid}, ${3:Etype}, ${4:Edata}, ${5:Args}) $6'), ('option/5', 'option(${1:Option}, ${2:Gstkid}, ${3:TkW}, ${4:DB}, ${5:Param5}) $6'), ('read_option/5', 'read_option(${1:Option}, ${2:Gstkid}, ${3:TkW}, ${4:DB}, ${5:Param5}) $6')],
'gstk_db': [('init/1', 'init(${1:Param1}) $2'), ('insert/3', 'insert(${1:DB}, ${2:Key}, ${3:Value}) $4'), ('lookup/2', 'lookup(${1:DB}, ${2:Key}) $3'), ('lookup_event/3', 'lookup_event(${1:DB}, ${2:ID}, ${3:Etag}) $4'), ('insert_bgrp/2', 'insert_bgrp(${1:DB}, ${2:Key}) $3'), ('delete_bgrp/2', 'delete_bgrp(${1:DB}, ${2:Key}) $3'), ('insert_gs/2', 'insert_gs(${1:DB}, ${2:Gstkid}) $3'), ('insert_widget/2', 'insert_widget(${1:DB}, ${2:Gstkid}) $3'), ('delete_kid/3', 'delete_kid(${1:Param1}, ${2:Parent}, ${3:Kid}) $4'), ('insert_opts/3', 'insert_opts(${1:DB}, ${2:Id}, ${3:Param3}) $4'), ('lookup_def/3', 'lookup_def(${1:ID}, ${2:ObjType}, ${3:Key}) $4'), ('opt_or_not/3', 'opt_or_not(${1:DB}, ${2:Id}, ${3:Opt}) $4'), ('lookup_gstkid/3', 'lookup_gstkid(${1:DB}, ${2:Name}, ${3:Param3}) $4'), ('lookup_ids/2', 'lookup_ids(${1:DB}, ${2:Pid}) $3'), ('lookup_item/3', 'lookup_item(${1:DB}, ${2:TkW}, ${3:Item}) $4'), ('delete_widget/2', 'delete_widget(${1:DB}, ${2:ID}) $3'), ('delete_gstkid/2', 'delete_gstkid(${1:DB}, ${2:Gstkid}) $3'), ('get_deleted/1', 'get_deleted(${1:Param1}) $2'), ('delete_event/3', 'delete_event(${1:DB}, ${2:Gstkid}, ${3:Etype}) $4'), ('insert_event/4', 'insert_event(${1:DB}, ${2:Gstkid}, ${3:Etype}, ${4:Edata}) $5'), ('update_widget/2', 'update_widget(${1:DB}, ${2:Gstkid}) $3'), ('is_inserted/3', 'is_inserted(${1:DB}, ${2:ID}, ${3:What}) $4'), ('lookup_kids/2', 'lookup_kids(${1:Param1}, ${2:Parent}) $3'), ('insert_def/3', 'insert_def(${1:ID}, ${2:ObjType}, ${3:Param3}) $4'), ('opt/4', 'opt(${1:DB}, ${2:Id}, ${3:Opt}, ${4:ElseVal}) $5'), ('opt/3', 'opt(${1:DB}, ${2:Id}, ${3:Opt}) $4'), ('insert_opt/3', 'insert_opt(${1:Param1}, ${2:Id}, ${3:Param3}) $4'), ('default_container_opts/3', 'default_container_opts(${1:Param1}, ${2:Id}, ${3:ChildType}) $4'), ('default_opts/3', 'default_opts(${1:Param1}, ${2:Id}, ${3:ChildType}) $4'), ('counter/2', 'counter(${1:DB}, ${2:Key}) $3'), ('lookup_gstkid/2', 'lookup_gstkid(${1:DB}, ${2:ID}) $3')],
'gstk_editor': [('create/3', 'create(${1:DB}, ${2:Gstkid}, ${3:Opts}) $4'), ('config/3', 'config(${1:DB}, ${2:Gstkid}, ${3:Options}) $4'), ('read/3', 'read(${1:DB}, ${2:Gstkid}, ${3:Opt}) $4'), ('delete/2', 'delete(${1:DB}, ${2:Gstkid}) $3'), ('event/5', 'event(${1:DB}, ${2:Gstkid}, ${3:Etype}, ${4:Edata}, ${5:Args}) $6'), ('option/5', 'option(${1:Option}, ${2:Gstkid}, ${3:Param3}, ${4:DB}, ${5:Editor}) $6'), ('read_option/5', 'read_option(${1:Option}, ${2:GstkId}, ${3:Param3}, ${4:DB}, ${5:Editor}) $6')],
'gstk_entry': [('create/3', 'create(${1:DB}, ${2:GstkId}, ${3:Opts}) $4'), ('config/3', 'config(${1:DB}, ${2:Gstkid}, ${3:Opts}) $4'), ('read/3', 'read(${1:DB}, ${2:Gstkid}, ${3:Opt}) $4'), ('delete/2', 'delete(${1:DB}, ${2:Gstkid}) $3'), ('event/5', 'event(${1:DB}, ${2:Gstkid}, ${3:Etype}, ${4:Edata}, ${5:Args}) $6'), ('option/5', 'option(${1:Option}, ${2:Gstkid}, ${3:TkW}, ${4:DB}, ${5:Param5}) $6'), ('read_option/5', 'read_option(${1:Option}, ${2:Gstkid}, ${3:TkW}, ${4:DB}, ${5:Param5}) $6')],
'gstk_font': [('init/0', 'init() $1'), ('choose_ascii/2', 'choose_ascii(${1:DB}, ${2:Font}) $3'), ('choose/2', 'choose(${1:DB}, ${2:FontSpec}) $3'), ('width_height/3', 'width_height(${1:DB}, ${2:FontSpec}, ${3:Txt}) $4')],
'gstk_frame': [('create/3', 'create(${1:DB}, ${2:GstkId}, ${3:Opts}) $4'), ('config/3', 'config(${1:DB}, ${2:Gstkid}, ${3:Opts}) $4'), ('read/3', 'read(${1:DB}, ${2:Gstkid}, ${3:Opt}) $4'), ('delete/2', 'delete(${1:DB}, ${2:Gstkid}) $3'), ('event/5', 'event(${1:DB}, ${2:Gstkid}, ${3:Etype}, ${4:Edata}, ${5:Args}) $6'), ('option/5', 'option(${1:Option}, ${2:Gstkid}, ${3:TkW}, ${4:DB}, ${5:Param5}) $6'), ('read_option/5', 'read_option(${1:Option}, ${2:Gstkid}, ${3:TkW}, ${4:Param4}, ${5:Param5}) $6'), ('mk_create_opts_for_child/4', 'mk_create_opts_for_child(${1:DB}, ${2:Cgstkid}, ${3:Pgstkid}, ${4:Opts}) $5')],
'gstk_generic': [('out_opts/8', 'out_opts() $1'), ('read_option/5', 'read_option() $1'), ('mk_tkw_child/2', 'mk_tkw_child(${1:DB}, ${2:Param2}) $3'), ('merge_default_options/3', 'merge_default_options(${1:ParOpts}, ${2:BuildInOpts}, ${3:Opts}) $4'), ('merge_default_options/2', 'merge_default_options(${1:ParOpts}, ${2:Opts}) $3'), ('opts_for_child/3', 'opts_for_child(${1:DB}, ${2:Childtype}, ${3:ParId}) $4'), ('mk_cmd_and_exec/4', 'mk_cmd_and_exec(${1:Opts}, ${2:Gstkid}, ${3:Scmd}, ${4:DB}) $5'), ('mk_cmd_and_exec/5', 'mk_cmd_and_exec(${1:Opts}, ${2:Gstkid}, ${3:Scmd}, ${4:Pcmd}, ${5:DB}) $6'), ('mk_cmd_and_exec/6', 'mk_cmd_and_exec(${1:Options}, ${2:Gstkid}, ${3:TkW}, ${4:SCmd}, ${5:PCmd}, ${6:DB}) $7'), ('mk_cmd_and_exec/7', 'mk_cmd_and_exec(${1:Options}, ${2:Gstkid}, ${3:TkW}, ${4:SCmd}, ${5:PCmd}, ${6:DB}, ${7:ExtraArg}) $8'), ('make_command/5', 'make_command(${1:Opts}, ${2:Gstkid}, ${3:Scmd}, ${4:Pcmd}, ${5:DB}) $6'), ('make_command/6', 'make_command(${1:Options}, ${2:Gstkid}, ${3:TkW}, ${4:SCmd}, ${5:PCmd}, ${6:DB}) $7'), ('make_command/7', 'make_command(${1:Options}, ${2:Gstkid}, ${3:TkW}, ${4:SCmd}, ${5:PCmd}, ${6:DB}, ${7:ExtraArg}) $8'), ('read_option/4', 'read_option(${1:DB}, ${2:Gstkid}, ${3:Opt}, ${4:ExtraArg}) $5'), ('handle_external_opt_call/9', 'handle_external_opt_call(${1:Param1}, ${2:Gstkid}, ${3:TkW}, ${4:DB}, ${5:ExtraArg}, ${6:ExtRes}, ${7:S}, ${8:P}, ${9:C}) $10'), ('handle_external_read/1', 'handle_external_read(${1:Res}) $2'), ('gen_anchor/9', 'gen_anchor(${1:How}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:ExtraArg}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_anchor/5', 'gen_anchor(${1:How}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:Param5}) $6'), ('gen_height/9', 'gen_height(${1:Height}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:ExtraArg}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_height/5', 'gen_height(${1:Height}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:Param5}) $6'), ('gen_width/9', 'gen_width(${1:Width}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:ExtraArg}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_width/5', 'gen_width(${1:Width}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:Param5}) $6'), ('gen_x/9', 'gen_x(${1:X}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:ExtraArg}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_x/5', 'gen_x(${1:X}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:Param5}) $6'), ('gen_y/9', 'gen_y(${1:Y}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:ExtraArg}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_y/5', 'gen_y(${1:Y}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:Param5}) $6'), ('gen_raise/9', 'gen_raise(${1:Param1}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:ExtraArg}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_raise/5', 'gen_raise(${1:Param1}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:Param5}) $6'), ('gen_lower/9', 'gen_lower(${1:Param1}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:ExtraArg}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_lower/5', 'gen_lower(${1:Param1}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:Param5}) $6'), ('gen_enable/9', 'gen_enable(${1:Param1}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:ExtraArg}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_enable/5', 'gen_enable(${1:Param1}, ${2:ExtraArg}, ${3:S}, ${4:P}, ${5:C}) $6'), ('gen_align/9', 'gen_align(${1:How}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:ExtraArg}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_align/5', 'gen_align(${1:How}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:Param5}) $6'), ('gen_justify/9', 'gen_justify(${1:How}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:ExtraArg}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_justify/5', 'gen_justify(${1:How}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:Param5}) $6'), ('gen_padx/9', 'gen_padx(${1:Pad}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:ExtraArg}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_padx/5', 'gen_padx(${1:Pad}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:Param5}) $6'), ('gen_pady/9', 'gen_pady(${1:Pad}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:ExtraArg}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_pady/5', 'gen_pady(${1:Pad}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:Param5}) $6'), ('gen_font/9', 'gen_font(${1:Font}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:ExtraArg}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_font/5', 'gen_font(${1:Font}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:Param5}) $6'), ('gen_label/9', 'gen_label(${1:Param1}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:ExtraArg}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_label/5', 'gen_label(${1:Param1}, ${2:ExtraArg}, ${3:S}, ${4:P}, ${5:C}) $6'), ('gen_activebg/9', 'gen_activebg(${1:Color}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:ExtraArg}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_activebg/5', 'gen_activebg(${1:Color}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:Param5}) $6'), ('gen_activefg/9', 'gen_activefg(${1:Color}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:ExtraArg}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_activefg/5', 'gen_activefg(${1:Color}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:Param5}) $6'), ('gen_default/9', 'gen_default(${1:Opt}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:ExtraArg}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_relief/9', 'gen_relief(${1:Relief}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:ExtraArg}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_relief/5', 'gen_relief(${1:Relief}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:Param5}) $6'), ('gen_bw/9', 'gen_bw(${1:Wth}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:ExtraArg}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_bw/5', 'gen_bw(${1:Wth}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:Param5}) $6'), ('gen_font_wh/5', 'gen_font_wh(${1:Param1}, ${2:Param2}, ${3:Param3}, ${4:DB}, ${5:Param5}) $6'), ('gen_choose_font/5', 'gen_choose_font(${1:Param1}, ${2:Param2}, ${3:Param3}, ${4:DB}, ${5:Param5}) $6'), ('gen_data/9', 'gen_data(${1:Data}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:ExtraArg}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_data/5', 'gen_data(${1:Data}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:Param5}) $6'), ('gen_pack_x/9', 'gen_pack_x(${1:Col}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:ExtraArg}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_pack_x/5', 'gen_pack_x(${1:Col}, ${2:ExtraArg}, ${3:S}, ${4:P}, ${5:C}) $6'), ('gen_pack_y/9', 'gen_pack_y(${1:Row}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:ExtraArg}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_pack_y/5', 'gen_pack_y(${1:Row}, ${2:ExtraArg}, ${3:S}, ${4:P}, ${5:C}) $6'), ('gen_pack_xy/9', 'gen_pack_xy(${1:Param1}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:ExtraArg}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_flush/9', 'gen_flush(${1:Param1}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:ExtraArg}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_flush/5', 'gen_flush(${1:Param1}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:Param5}) $6'), ('gen_keep_opt/9', 'gen_keep_opt(${1:Opt}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:ExtraArg}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_children/5', 'gen_children(${1:Param1}, ${2:Gstkid}, ${3:Param3}, ${4:DB}, ${5:Param5}) $6'), ('make_extern_id/2', 'make_extern_id(${1:Param1}, ${2:DB}) $3'), ('gen_id/5', 'gen_id(${1:Param1}, ${2:Param2}, ${3:Param3}, ${4:DB}, ${5:Param5}) $6'), ('gen_parent/5', 'gen_parent(${1:Param1}, ${2:Gstkid}, ${3:Param3}, ${4:DB}, ${5:Param5}) $6'), ('gen_type/5', 'gen_type(${1:Param1}, ${2:Gstkid}, ${3:Param3}, ${4:Param4}, ${5:Param5}) $6'), ('gen_beep/9', 'gen_beep(${1:Param1}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:ExtraArg}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_setfocus/9', 'gen_setfocus(${1:Param1}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:ExtraArg}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_setfocus/5', 'gen_setfocus(${1:Param1}, ${2:ExtraArg}, ${3:S}, ${4:P}, ${5:C}) $6'), ('gen_buttonpress/9', 'gen_buttonpress(${1:On}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:ExtraArg}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_buttonpress/5', 'gen_buttonpress(${1:On}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:Param5}) $6'), ('gen_buttonrelease/9', 'gen_buttonrelease(${1:On}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:ExtraArg}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_buttonrelease/5', 'gen_buttonrelease(${1:On}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:Param5}) $6'), ('gen_configure/9', 'gen_configure(${1:On}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:ExtraArg}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_configure/5', 'gen_configure(${1:On}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:Param5}) $6'), ('gen_destroy/9', 'gen_destroy(${1:On}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:ExtraArg}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_destroy/5', 'gen_destroy(${1:On}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:Param5}) $6'), ('gen_enter/9', 'gen_enter(${1:On}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:ExtraArg}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_enter/5', 'gen_enter(${1:On}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:Param5}) $6'), ('gen_focus_ev/9', 'gen_focus_ev(${1:On}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:ExtraArg}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_focus_ev/5', 'gen_focus_ev(${1:On}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:Param5}) $6'), ('gen_keypress/9', 'gen_keypress(${1:On}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:ExtraArg}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_keypress/5', 'gen_keypress(${1:On}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:Param5}) $6'), ('gen_keyrelease/9', 'gen_keyrelease(${1:On}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:ExtraArg}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_keyrelease/5', 'gen_keyrelease(${1:On}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:Param5}) $6'), ('gen_leave/9', 'gen_leave(${1:On}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:ExtraArg}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_leave/5', 'gen_leave(${1:On}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:Param5}) $6'), ('gen_motion/9', 'gen_motion(${1:On}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:ExtraArg}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_motion/5', 'gen_motion(${1:On}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:Param5}) $6'), ('gen_highlightbw/9', 'gen_highlightbw(${1:Wth}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:ExtraArg}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_highlightbw/5', 'gen_highlightbw(${1:Wth}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:Param5}) $6'), ('gen_highlightbg/9', 'gen_highlightbg(${1:Color}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:ExtraArg}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_highlightbg/5', 'gen_highlightbg(${1:Color}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:Param5}) $6'), ('gen_highlightfg/9', 'gen_highlightfg(${1:Color}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:ExtraArg}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_highlightfg/5', 'gen_highlightfg(${1:Color}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:Param5}) $6'), ('gen_selectbw/9', 'gen_selectbw(${1:Width}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:ExtraArg}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_selectbw/5', 'gen_selectbw(${1:Width}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:Param5}) $6'), ('gen_selectfg/9', 'gen_selectfg(${1:Color}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:ExtraArg}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_selectfg/5', 'gen_selectfg(${1:Color}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:Param5}) $6'), ('gen_selectbg/9', 'gen_selectbg(${1:Color}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:ExtraArg}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_selectbg/5', 'gen_selectbg(${1:Color}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:Param5}) $6'), ('gen_fg/9', 'gen_fg(${1:Color}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:ExtraArg}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_fg/5', 'gen_fg(${1:Color}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:Param5}) $6'), ('gen_bg/9', 'gen_bg(${1:Color}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:ExtraArg}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_bg/5', 'gen_bg(${1:Color}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:Param5}) $6'), ('gen_so_activebg/9', 'gen_so_activebg(${1:Color}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:ExtraArg}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_so_activebg/5', 'gen_so_activebg(${1:Color}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:Param5}) $6'), ('gen_so_bc/9', 'gen_so_bc(${1:Color}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:ExtraArg}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_so_bc/5', 'gen_so_bc(${1:Color}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:Param5}) $6'), ('gen_so_scrollfg/9', 'gen_so_scrollfg(${1:Color}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:ExtraArg}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_so_scrollfg/5', 'gen_so_scrollfg(${1:Color}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:Param5}) $6'), ('gen_so_scrollbg/9', 'gen_so_scrollbg(${1:Color}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:ExtraArg}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_so_scrollbg/5', 'gen_so_scrollbg(${1:Color}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:Param5}) $6'), ('obj/1', 'obj(${1:Param1}) $2'), ('gen_so_bg/9', 'gen_so_bg(${1:Color}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:ExtraArg}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_so_bg/5', 'gen_so_bg(${1:Color}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:Param5}) $6'), ('gen_so_selectbw/9', 'gen_so_selectbw(${1:Width}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:ExtraArg}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_so_selectbw/5', 'gen_so_selectbw(${1:Width}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:Param5}) $6'), ('gen_so_selectfg/9', 'gen_so_selectfg(${1:Color}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:ExtraArg}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_so_selectfg/5', 'gen_so_selectfg(${1:Color}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:Param5}) $6'), ('gen_so_selectbg/9', 'gen_so_selectbg(${1:Color}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:ExtraArg}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_so_selectbg/5', 'gen_so_selectbg(${1:Color}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:Param5}) $6'), ('gen_so_scrolls/9', 'gen_so_scrolls(${1:Param1}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:ExtraArg}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_so_hscroll/5', 'gen_so_hscroll(${1:Param1}, ${2:Param2}, ${3:Param3}, ${4:Param4}, ${5:Param5}) $6'), ('gen_so_vscroll/5', 'gen_so_vscroll(${1:Param1}, ${2:Param2}, ${3:Param3}, ${4:Param4}, ${5:Param5}) $6'), ('cursors/0', 'cursors() $1'), ('gen_cursor/9', 'gen_cursor(${1:Cur}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:ExtraArg}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_cursor/5', 'gen_cursor(${1:Cur}, ${2:ExtraArg}, ${3:S}, ${4:P}, ${5:C}) $6'), ('gen_citem_coords/9', 'gen_citem_coords(${1:Coords}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:AItem}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_citem_coords/5', 'gen_citem_coords(${1:Coords}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:Param5}) $6'), ('gen_citem_fill/9', 'gen_citem_fill(${1:Color}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:AItem}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_citem_fill/5', 'gen_citem_fill(${1:Color}, ${2:AItem}, ${3:S}, ${4:P}, ${5:C}) $6'), ('gen_citem_lower/9', 'gen_citem_lower(${1:Param1}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:AItem}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_citem_raise/9', 'gen_citem_raise(${1:Param1}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:AItem}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_citem_move/9', 'gen_citem_move(${1:Param1}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:AItem}, ${7:S}, ${8:P}, ${9:C}) $10'), ('move_coords/3', 'move_coords(${1:Dx}, ${2:Dy}, ${3:Coords}) $4'), ('add_to_coords/3', 'add_to_coords(${1:Dx}, ${2:Dy}, ${3:Param3}) $4'), ('gen_citem_setfocus/9', 'gen_citem_setfocus(${1:Param1}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:AItem}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_citem_setfocus/5', 'gen_citem_setfocus(${1:Param1}, ${2:AItem}, ${3:S}, ${4:P}, ${5:C}) $6'), ('gen_citem_buttonpress/9', 'gen_citem_buttonpress(${1:On}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:AItem}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_citem_buttonrelease/9', 'gen_citem_buttonrelease(${1:On}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:AItem}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_citem_enter/9', 'gen_citem_enter(${1:On}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:AItem}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_citem_keypress/9', 'gen_citem_keypress(${1:On}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:AItem}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_citem_keyrelease/9', 'gen_citem_keyrelease(${1:On}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:AItem}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_citem_leave/9', 'gen_citem_leave(${1:On}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:AItem}, ${7:S}, ${8:P}, ${9:C}) $10'), ('gen_citem_motion/9', 'gen_citem_motion(${1:On}, ${2:Opts}, ${3:Gstkid}, ${4:TkW}, ${5:DB}, ${6:AItem}, ${7:S}, ${8:P}, ${9:C}) $10'), ('scrolls_vh/3', 'scrolls_vh(${1:W}, ${2:V}, ${3:H}) $4'), ('parse_scrolls/1', 'parse_scrolls(${1:Opts}) $2'), ('parse_scrolls/2', 'parse_scrolls(${1:Gstkid}, ${2:Opts}) $3'), ('parse_scrolls/4', 'parse_scrolls(${1:Param1}, ${2:Vscroll}, ${3:Hscroll}, ${4:Opts}) $5'), ('bind/5', 'bind(${1:DB}, ${2:Gstkid}, ${3:TkW}, ${4:Etype}, ${5:On}) $6'), ('bind/6', 'bind(${1:DB}, ${2:Gstkid}, ${3:TkW}, ${4:Etype}, ${5:On}, ${6:WS}) $7'), ('ebind/6', 'ebind(${1:DB}, ${2:Gstkid}, ${3:TkW}, ${4:Etype}, ${5:WS}, ${6:Edata}) $7'), ('eunbind/6', 'eunbind(${1:DB}, ${2:Gstkid}, ${3:TkW}, ${4:Etype}, ${5:WS}, ${6:Param6}) $7'), ('item_bind/6', 'item_bind(${1:DB}, ${2:Gstkid}, ${3:Canvas}, ${4:Item}, ${5:Etype}, ${6:On}) $7'), ('item_ebind/6', 'item_ebind(${1:DB}, ${2:Gstkid}, ${3:Canvas}, ${4:Item}, ${5:Etype}, ${6:Edata}) $7'), ('item_eunbind/5', 'item_eunbind(${1:DB}, ${2:Gstkid}, ${3:Canvas}, ${4:Item}, ${5:Etype}) $6'), ('event/5', 'event(${1:DB}, ${2:Gstkid}, ${3:Etype}, ${4:Param4}, ${5:Args}) $6'), ('read_option/3', 'read_option(${1:DB}, ${2:Gstkid}, ${3:Opt}) $4'), ('make_command/4', 'make_command(${1:Opts}, ${2:Gstkid}, ${3:Scmd}, ${4:DB}) $5'), ('mk_create_opts_for_child/4', 'mk_create_opts_for_child(${1:DB}, ${2:Param2}, ${3:Pgstkid}, ${4:Opts}) $5')],
'gstk_grid': [('event/5', 'event(${1:DB}, ${2:Gstkid}, ${3:Etype}, ${4:Edata}, ${5:Args}) $6'), ('create/3', 'create(${1:DB}, ${2:Gstkid}, ${3:Options}) $4'), ('config/3', 'config(${1:DB}, ${2:Gstkid}, ${3:Options}) $4'), ('option/5', 'option(${1:Option}, ${2:Gstkid}, ${3:Param3}, ${4:DB}, ${5:State}) $6'), ('read/3', 'read(${1:DB}, ${2:Gstkid}, ${3:Opt}) $4'), ('delete/2', 'delete(${1:DB}, ${2:Gstkid}) $3'), ('destroy/2', 'destroy(${1:DB}, ${2:Canvas}) $3'), ('mk_create_opts_for_child/4', 'mk_create_opts_for_child(${1:DB}, ${2:Cgstkid}, ${3:Pgstkid}, ${4:Opts}) $5'), ('read_option/5', 'read_option(${1:Option}, ${2:Gstkid}, ${3:Param3}, ${4:DB}, ${5:State}) $6')],
'gstk_gridline': [('event/5', 'event(${1:DB}, ${2:GridGstkid}, ${3:Etype}, ${4:Param4}, ${5:Param5}) $6'), ('create/3', 'create(${1:DB}, ${2:Gstkid}, ${3:Options}) $4'), ('config/3', 'config(${1:DB}, ${2:Gstkid}, ${3:Opts}) $4'), ('option/5', 'option(${1:Option}, ${2:Gstkid}, ${3:TkW}, ${4:DB}, ${5:Pgstkid}) $6'), ('read/3', 'read(${1:DB}, ${2:Gstkid}, ${3:Opt}) $4'), ('delete/2', 'delete(${1:DB}, ${2:Gstkid}) $3'), ('destroy/3', 'destroy(${1:DB}, ${2:Lgstkid}, ${3:Row}) $4'), ('read_option/5', 'read_option(${1:Option}, ${2:Gstkid}, ${3:TkW}, ${4:DB}, ${5:Pgstkid}) $6')],
'gstk_gs': [('mk_create_opts_for_child/4', 'mk_create_opts_for_child(${1:DB}, ${2:Cgstkid}, ${3:Pgstkid}, ${4:Opts}) $5'), ('config/3', 'config(${1:DB}, ${2:Gstkid}, ${3:Opts}) $4'), ('read/3', 'read(${1:DB}, ${2:Gstkid}, ${3:Opt}) $4'), ('read_option/5', 'read_option(${1:Option}, ${2:Gstkid}, ${3:Param3}, ${4:Param4}, ${5:Param5}) $6'), ('option/5', 'option(${1:Option}, ${2:Gstkid}, ${3:Param3}, ${4:Param4}, ${5:Param5}) $6')],
'gstk_image': [('create/3', 'create(${1:DB}, ${2:Gstkid}, ${3:Opts}) $4'), ('config/3', 'config(${1:DB}, ${2:Gstkid}, ${3:Opts}) $4'), ('read/3', 'read(${1:DB}, ${2:Gstkid}, ${3:Opt}) $4'), ('delete/2', 'delete(${1:DB}, ${2:Gstkid}) $3'), ('destroy/3', 'destroy(${1:Param1}, ${2:Canvas}, ${3:Item}) $4'), ('event/5', 'event(${1:DB}, ${2:Gstkid}, ${3:Etype}, ${4:Edata}, ${5:Args}) $6'), ('option/5', 'option(${1:Option}, ${2:Gstkid}, ${3:Canvas}, ${4:Param4}, ${5:AItem}) $6'), ('read_option/5', 'read_option(${1:Option}, ${2:Gstkid}, ${3:Canvas}, ${4:Param4}, ${5:AItem}) $6')],
'gstk_label': [('create/3', 'create(${1:DB}, ${2:GstkId}, ${3:Opts}) $4'), ('config/3', 'config(${1:DB}, ${2:Gstkid}, ${3:Opts}) $4'), ('read/3', 'read(${1:DB}, ${2:Gstkid}, ${3:Opt}) $4'), ('delete/2', 'delete(${1:DB}, ${2:Gstkid}) $3'), ('event/5', 'event(${1:DB}, ${2:Gstkid}, ${3:Etype}, ${4:Edata}, ${5:Args}) $6'), ('option/5', 'option(${1:Option}, ${2:Gstkid}, ${3:TkW}, ${4:Param4}, ${5:Param5}) $6'), ('read_option/5', 'read_option(${1:Option}, ${2:Gstkid}, ${3:TkW}, ${4:Param4}, ${5:Param5}) $6')],
'gstk_line': [('create/3', 'create(${1:DB}, ${2:Gstkid}, ${3:Opts}) $4'), ('config/3', 'config(${1:DB}, ${2:Gstkid}, ${3:Opts}) $4'), ('read/3', 'read(${1:DB}, ${2:Gstkid}, ${3:Opt}) $4'), ('delete/2', 'delete(${1:DB}, ${2:Gstkid}) $3'), ('destroy/3', 'destroy(${1:Param1}, ${2:Canvas}, ${3:Item}) $4'), ('event/5', 'event(${1:DB}, ${2:Gstkid}, ${3:Etype}, ${4:Edata}, ${5:Args}) $6'), ('option/5', 'option(${1:Option}, ${2:Gstkid}, ${3:Canvas}, ${4:Param4}, ${5:AItem}) $6'), ('read_option/5', 'read_option(${1:Option}, ${2:Gstkid}, ${3:Canvas}, ${4:Param4}, ${5:AItem}) $6')],
'gstk_listbox': [('create/3', 'create(${1:DB}, ${2:GstkId}, ${3:Opts}) $4'), ('config/3', 'config(${1:DB}, ${2:Gstkid}, ${3:Options}) $4'), ('read/3', 'read(${1:DB}, ${2:Gstkid}, ${3:Opt}) $4'), ('delete/2', 'delete(${1:DB}, ${2:Gstkid}) $3'), ('event/5', 'event(${1:DB}, ${2:Gstkid}, ${3:Etype}, ${4:Edata}, ${5:Args}) $6'), ('wid_event/5', 'wid_event(${1:DB}, ${2:Gstkid}, ${3:Etype}, ${4:Edata}, ${5:Param5}) $6'), ('option/5', 'option(${1:Option}, ${2:Gstkid}, ${3:MainW}, ${4:DB}, ${5:Listbox}) $6'), ('read_option/5', 'read_option(${1:Option}, ${2:GstkId}, ${3:Param3}, ${4:DB}, ${5:Listbox}) $6')],
'gstk_menu': [('create/3', 'create(${1:DB}, ${2:GstkId}, ${3:Opts}) $4'), ('config/3', 'config(${1:DB}, ${2:Gstkid}, ${3:Opts}) $4'), ('read/3', 'read(${1:DB}, ${2:Gstkid}, ${3:Opt}) $4'), ('delete/2', 'delete(${1:DB}, ${2:Gstkid}) $3'), ('event/5', 'event(${1:DB}, ${2:Gstkid}, ${3:Etype}, ${4:Edata}, ${5:Args}) $6'), ('option/5', 'option(${1:Option}, ${2:Gstkid}, ${3:TkW}, ${4:DB}, ${5:Param5}) $6'), ('read_option/5', 'read_option(${1:Option}, ${2:Gstkid}, ${3:TkW}, ${4:Param4}, ${5:Param5}) $6')],
'gstk_menubar': [('create/3', 'create(${1:DB}, ${2:GstkId}, ${3:Opts}) $4'), ('config/3', 'config(${1:DB}, ${2:Gstkid}, ${3:Opts}) $4'), ('read/3', 'read(${1:DB}, ${2:Gstkid}, ${3:Opt}) $4'), ('delete/2', 'delete(${1:DB}, ${2:Gstkid}) $3'), ('event/5', 'event(${1:DB}, ${2:Gstkid}, ${3:Etype}, ${4:Edata}, ${5:Args}) $6'), ('option/5', 'option(${1:Option}, ${2:GstkId}, ${3:TkW}, ${4:Param4}, ${5:Param5}) $6'), ('read_option/5', 'read_option(${1:Option}, ${2:GstkId}, ${3:TkW}, ${4:Param4}, ${5:Param5}) $6'), ('mk_create_opts_for_child/4', 'mk_create_opts_for_child() $1')],
'gstk_menubutton': [('create/3', 'create(${1:DB}, ${2:GstkId}, ${3:Opts}) $4'), ('config/3', 'config(${1:DB}, ${2:Gstkid}, ${3:Opts}) $4'), ('read/3', 'read(${1:DB}, ${2:Gstkid}, ${3:Opt}) $4'), ('delete/2', 'delete(${1:DB}, ${2:Gstkid}) $3'), ('event/5', 'event(${1:DB}, ${2:Gstkid}, ${3:Etype}, ${4:Edata}, ${5:Args}) $6'), ('option/5', 'option(${1:Option}, ${2:Gstkid}, ${3:TkW}, ${4:DB}, ${5:Param5}) $6'), ('read_option/5', 'read_option(${1:Option}, ${2:GstkId}, ${3:TkW}, ${4:Param4}, ${5:Param5}) $6'), ('mk_create_opts_for_child/4', 'mk_create_opts_for_child(${1:DB}, ${2:Cgstkid}, ${3:Pgstkid}, ${4:Opts}) $5')],
'gstk_menuitem': [('create/3', 'create(${1:DB}, ${2:GstkId}, ${3:Opts}) $4'), ('config/3', 'config(${1:DB}, ${2:Gstkid}, ${3:Options}) $4'), ('read/3', 'read(${1:DB}, ${2:Gstkid}, ${3:Opt}) $4'), ('delete/2', 'delete(${1:DB}, ${2:Gstkid}) $3'), ('destroy/3', 'destroy(${1:DB}, ${2:Id}, ${3:Parent}) $4'), ('event/5', 'event(${1:DB}, ${2:Gstkid}, ${3:Etype}, ${4:Edata}, ${5:Args}) $6'), ('option/5', 'option(${1:Option}, ${2:TkW}, ${3:DB}, ${4:DB}, ${5:Param5}) $6'), ('read_option/5', 'read_option(${1:Option}, ${2:GstkId}, ${3:Param3}, ${4:DB}, ${5:Param5}) $6'), ('mk_create_opts_for_child/4', 'mk_create_opts_for_child(${1:DB}, ${2:Cgstkid}, ${3:Pgstkid}, ${4:Opts}) $5')],
'gstk_oval': [('create/3', 'create(${1:DB}, ${2:Gstkid}, ${3:Opts}) $4'), ('config/3', 'config(${1:DB}, ${2:Gstkid}, ${3:Opts}) $4'), ('read/3', 'read(${1:DB}, ${2:Gstkid}, ${3:Opt}) $4'), ('delete/2', 'delete(${1:DB}, ${2:Gstkid}) $3'), ('destroy/3', 'destroy(${1:Param1}, ${2:Canvas}, ${3:Item}) $4'), ('event/5', 'event(${1:DB}, ${2:Gstkid}, ${3:Etype}, ${4:Edata}, ${5:Args}) $6'), ('option/5', 'option(${1:Option}, ${2:Gstkid}, ${3:Canvas}, ${4:Param4}, ${5:AItem}) $6'), ('read_option/5', 'read_option(${1:Option}, ${2:Gstkid}, ${3:Canvas}, ${4:Param4}, ${5:AItem}) $6')],
'gstk_polygon': [('create/3', 'create(${1:DB}, ${2:Gstkid}, ${3:Opts}) $4'), ('config/3', 'config(${1:DB}, ${2:Gstkid}, ${3:Opts}) $4'), ('read/3', 'read(${1:DB}, ${2:Gstkid}, ${3:Opt}) $4'), ('delete/2', 'delete(${1:DB}, ${2:Gstkid}) $3'), ('destroy/3', 'destroy(${1:Param1}, ${2:Canvas}, ${3:Item}) $4'), ('event/5', 'event(${1:DB}, ${2:Gstkid}, ${3:Etype}, ${4:Edata}, ${5:Args}) $6'), ('option/5', 'option(${1:Option}, ${2:Gstkid}, ${3:Canvas}, ${4:Param4}, ${5:AItem}) $6'), ('read_option/5', 'read_option(${1:Option}, ${2:Gstkid}, ${3:Canvas}, ${4:Param4}, ${5:AItem}) $6')],
'gstk_port_handler': [('exec/1', 'exec(${1:Cmd}) $2'), ('call/2', 'call(${1:PortHandler}, ${2:Cmd}) $3'), ('start_link/1', 'start_link(${1:Gstk}) $2'), ('init/2', 'init(${1:Gstk}, ${2:Mode}) $3'), ('ping/1', 'ping(${1:PortHandler}) $2'), ('stop/1', 'stop(${1:PortHandler}) $2')],
'gstk_radiobutton': [('create/3', 'create(${1:DB}, ${2:GstkId}, ${3:Opts}) $4'), ('config/3', 'config(${1:DB}, ${2:Gstkid}, ${3:Opts}) $4'), ('read/3', 'read(${1:DB}, ${2:Gstkid}, ${3:Opt}) $4'), ('delete/2', 'delete(${1:DB}, ${2:Gstkid}) $3'), ('event/5', 'event(${1:DB}, ${2:Gstkid}, ${3:Etype}, ${4:Edata}, ${5:Args}) $6'), ('option/5', 'option(${1:Option}, ${2:Gstkid}, ${3:TkW}, ${4:DB}, ${5:Param5}) $6'), ('read_option/5', 'read_option(${1:Option}, ${2:Gstkid}, ${3:TkW}, ${4:DB}, ${5:Param5}) $6')],
'gstk_rectangle': [('create/3', 'create(${1:DB}, ${2:Gstkid}, ${3:Opts}) $4'), ('config/3', 'config(${1:DB}, ${2:Gstkid}, ${3:Opts}) $4'), ('read/3', 'read(${1:DB}, ${2:Gstkid}, ${3:Opt}) $4'), ('delete/2', 'delete(${1:DB}, ${2:Gstkid}) $3'), ('destroy/3', 'destroy(${1:Param1}, ${2:Canvas}, ${3:Item}) $4'), ('event/5', 'event(${1:DB}, ${2:Gstkid}, ${3:Etype}, ${4:Edata}, ${5:Args}) $6'), ('option/5', 'option(${1:Option}, ${2:Gstkid}, ${3:Canvas}, ${4:Param4}, ${5:AItem}) $6'), ('read_option/5', 'read_option(${1:Option}, ${2:Gstkid}, ${3:Canvas}, ${4:Param4}, ${5:AItem}) $6')],
'gstk_scale': [('create/3', 'create(${1:DB}, ${2:GstkId}, ${3:Opts}) $4'), ('config/3', 'config(${1:DB}, ${2:Gstkid}, ${3:Opts}) $4'), ('read/3', 'read(${1:DB}, ${2:Gstkid}, ${3:Opt}) $4'), ('delete/2', 'delete(${1:DB}, ${2:Gstkid}) $3'), ('event/5', 'event(${1:DB}, ${2:Gstkid}, ${3:Etype}, ${4:Edata}, ${5:Args}) $6'), ('option/5', 'option(${1:Option}, ${2:Gstkid}, ${3:TkW}, ${4:DB}, ${5:Param5}) $6'), ('read_option/5', 'read_option(${1:Option}, ${2:Gstkid}, ${3:TkW}, ${4:DB}, ${5:Param5}) $6')],
'gstk_text': [('create/3', 'create(${1:DB}, ${2:Gstkid}, ${3:Opts}) $4'), ('config/3', 'config(${1:DB}, ${2:Gstkid}, ${3:Opts}) $4'), ('read/3', 'read(${1:DB}, ${2:Gstkid}, ${3:Opt}) $4'), ('delete/2', 'delete(${1:DB}, ${2:Gstkid}) $3'), ('destroy/3', 'destroy(${1:Param1}, ${2:Canvas}, ${3:Item}) $4'), ('event/5', 'event(${1:DB}, ${2:Gstkid}, ${3:Etype}, ${4:Edata}, ${5:Args}) $6'), ('option/5', 'option(${1:Option}, ${2:Gstkid}, ${3:Canvas}, ${4:DB}, ${5:AItem}) $6'), ('read_option/5', 'read_option(${1:Option}, ${2:Gstkid}, ${3:Canvas}, ${4:DB}, ${5:AItem}) $6')],
'gstk_widgets': [('type2mod/1', 'type2mod(${1:Type}) $2'), ('objmod/1', 'objmod(${1:Param1}) $2'), ('suffix/1', 'suffix(${1:Objtype}) $2')],
'gstk_window': [('create/3', 'create(${1:DB}, ${2:Gstkid}, ${3:Opts}) $4'), ('config/3', 'config(${1:DB}, ${2:Gstkid}, ${3:Opts}) $4'), ('read/3', 'read(${1:DB}, ${2:Gstkid}, ${3:Opt}) $4'), ('delete/2', 'delete(${1:DB}, ${2:Gstkid}) $3'), ('event/5', 'event(${1:DB}, ${2:Gstkid}, ${3:Etype}, ${4:Edata}, ${5:Args}) $6'), ('destroy_win/1', 'destroy_win(${1:ID}) $2')],
'tcl2erl': [('parse_event/1', 'parse_event(${1:Bytes}) $2'), ('ret_int/1', 'ret_int(${1:Str}) $2'), ('ret_atom/1', 'ret_atom(${1:Str}) $2'), ('ret_str/1', 'ret_str(${1:Str}) $2'), ('ret_tuple/1', 'ret_tuple(${1:Str}) $2'), ('ret_pack/2', 'ret_pack(${1:Key}, ${2:TkW}) $3'), ('ret_place/2', 'ret_place(${1:Key}, ${2:TkW}) $3'), ('ret_x/1', 'ret_x(${1:Str}) $2'), ('ret_y/1', 'ret_y(${1:Str}) $2'), ('ret_width/1', 'ret_width(${1:Str}) $2'), ('ret_height/1', 'ret_height(${1:Str}) $2'), ('ret_list/1', 'ret_list(${1:Str}) $2'), ('ret_str_list/1', 'ret_str_list(${1:Str}) $2'), ('ret_label/1', 'ret_label(${1:Str}) $2'), ('ret_mapped/1', 'ret_mapped(${1:Str}) $2'), ('ret_iconified/1', 'ret_iconified(${1:Str}) $2'), ('ret_focus/2', 'ret_focus(${1:W}, ${2:Str}) $3'), ('ret_file/1', 'ret_file(${1:Str}) $2'), ('ret_bool/1', 'ret_bool(${1:Str}) $2'), ('ret_enable/1', 'ret_enable(${1:Str}) $2'), ('ret_color/1', 'ret_color(${1:Str}) $2'), ('ret_stipple/1', 'ret_stipple(${1:Str}) $2')],
'tool_file_dialog': [('start/1', 'start(${1:Opts}) $2')],
'tool_utils': [('open_help/2', 'open_help(${1:Parent}, ${2:File}) $3')],
'ic': [('sgen/1', 'sgen(${1:ArgList}) $2'), ('gen/1', 'gen(${1:ArgList}) $2'), ('gen/2', 'gen(${1:File}, ${2:Opts}) $3'), ('help/0', 'help() $1'), ('compile/3', 'compile(${1:File}, ${2:Param2}, ${3:Options}) $4')],
'ic_array_java': [('gen/4', 'gen(${1:G}, ${2:N}, ${3:X}, ${4:Array}) $5')],
'ic_attribute_java': [('emit_attribute_prototype/4', 'emit_attribute_prototype(${1:G}, ${2:N}, ${3:X}, ${4:Fd}) $5'), ('emit_attribute_stub_code/4', 'emit_attribute_stub_code(${1:G}, ${2:N}, ${3:X}, ${4:Fd}) $5'), ('emit_atrribute_on_dictionary/5', 'emit_atrribute_on_dictionary(${1:G}, ${2:N}, ${3:X}, ${4:Fd}, ${5:C}) $6'), ('emit_attribute_switch_case/5', 'emit_attribute_switch_case(${1:G}, ${2:N}, ${3:X}, ${4:Fd}, ${5:C}) $6')],
'ic_cbe': [('emit_malloc_size_stmt/7', 'emit_malloc_size_stmt(${1:G}, ${2:N}, ${3:Fd}, ${4:T}, ${5:InBuffer}, ${6:Align}, ${7:CalcType}) $8'), ('emit_encoding_stmt/6', 'emit_encoding_stmt(${1:G}, ${2:N}, ${3:Fd}, ${4:T}, ${5:LName}, ${6:Param6}) $7'), ('emit_encoding_stmt/7', 'emit_encoding_stmt(${1:G}, ${2:N}, ${3:Fd}, ${4:T}, ${5:LName}, ${6:LName}, ${7:Param7}) $8'), ('emit_decoding_stmt/10', 'emit_decoding_stmt(${1:G}, ${2:N}, ${3:Fd}, ${4:T}, ${5:LName}, ${6:IndOp}, ${7:InBuffer}, ${8:Align}, ${9:NextPos}, ${10:DecType}) $11'), ('emit_decoding_stmt/11', 'emit_decoding_stmt(${1:G}, ${2:N}, ${3:Fd}, ${4:T}, ${5:LName}, ${6:IndOp}, ${7:InBuffer}, ${8:Param8}, ${9:NextPos}, ${10:DecType}, ${11:AllocedPars}) $12'), ('emit_dealloc_stmts/3', 'emit_dealloc_stmts(${1:Fd}, ${2:Prefix}, ${3:AllocedPars}) $4'), ('mk_variable_name/1', 'mk_variable_name(${1:Var}) $2'), ('mk_c_type/3', 'mk_c_type(${1:G}, ${2:N}, ${3:S}) $4'), ('mk_c_type/4', 'mk_c_type(${1:Param1}, ${2:N}, ${3:S}, ${4:Param4}) $5'), ('mk_c_type2/3', 'mk_c_type2(${1:Param1}, ${2:N}, ${3:Param3}) $4'), ('is_variable_size/1', 'is_variable_size(${1:Param1}) $2'), ('is_variable_size/3', 'is_variable_size(${1:G}, ${2:ElemTC}, ${3:Param3}) $4'), ('mk_dim/1', 'mk_dim(${1:Param1}) $2'), ('mk_slice_dim/1', 'mk_slice_dim(${1:Args}) $2'), ('emit_tmp_variables/1', 'emit_tmp_variables(${1:Fd}) $2'), ('store_tmp_decl/2', 'store_tmp_decl(${1:Format}, ${2:Args}) $3'), ('extract_info/3', 'extract_info(${1:Param1}, ${2:N}, ${3:X}) $4'), ('normalize_type/1', 'normalize_type(${1:Type}) $2')],
'ic_cclient': [('do_gen/3', 'do_gen(${1:G}, ${2:File}, ${3:Form}) $4')],
'ic_code': [('get_basetype/2', 'get_basetype(${1:G}, ${2:MyId}) $3'), ('insert_typedef/3', 'insert_typedef(${1:G}, ${2:MyId}, ${3:DefinedAsId}) $4'), ('codeDirective/2', 'codeDirective(${1:G}, ${2:X}) $3')],
'ic_codegen': [('emit/2', 'emit(${1:Fd}, ${2:Str}) $3'), ('emit/3', 'emit(${1:Fd}, ${2:Fmt}, ${3:Args}) $4')],
'ic_constant_java': [('gen/3', 'gen(${1:G}, ${2:N}, ${3:Param3}) $4')],
'ic_cserver': [('do_gen/3', 'do_gen(${1:G}, ${2:File}, ${3:Form}) $4')],
'ic_enum_java': [('gen/3', 'gen(${1:G}, ${2:N}, ${3:Param3}) $4')],
'ic_erl_template': [('do_gen/3', 'do_gen(${1:G}, ${2:Param2}, ${3:Form}) $4'), ('emit_header/3', 'emit_header(${1:G}, ${2:Fd}, ${3:Name}) $4')],
'ic_erlbe': [('do_gen/3', 'do_gen(${1:G}, ${2:File}, ${3:Form}) $4')],
'ic_error': [('error/2', 'error(${1:G}, ${2:Err}) $3'), ('fatal_error/2', 'fatal_error(${1:G}, ${2:Err}) $3'), ('init_errors/1', 'init_errors(${1:G}) $2'), ('return/1', 'return(${1:G}) $2'), ('warn/2', 'warn(${1:G}, ${2:Warn}) $3'), ('get_error_count/1', 'get_error_count(${1:G}) $2')],
'ic_fetch': [('member2type/3', 'member2type(${1:G}, ${2:X}, ${3:MName}) $4')],
'ic_file': [('filename_push/4', 'filename_push(${1:G}, ${2:N}, ${3:X}, ${4:Lang}) $5'), ('filename_pop/2', 'filename_pop(${1:G}, ${2:Lang}) $3'), ('open/2', 'open(${1:Param1}, ${2:Name}) $3'), ('close/1', 'close(${1:Fd}) $2'), ('remove_ext/1', 'remove_ext(${1:File}) $2'), ('join/2', 'join(${1:Path}, ${2:File}) $3'), ('add_dot_erl/1', 'add_dot_erl(${1:F}) $2'), ('add_dot_hrl/1', 'add_dot_hrl(${1:F}) $2'), ('add_dot_c/1', 'add_dot_c(${1:F}) $2'), ('add_dot_h/1', 'add_dot_h(${1:F}) $2'), ('add_dot_java/1', 'add_dot_java(${1:F}) $2'), ('add_dot_idl/1', 'add_dot_idl(${1:F}) $2'), ('javaInterfaceFilePush/3', 'javaInterfaceFilePush(${1:G}, ${2:N}, ${3:X}) $4'), ('javaInterfaceFilePop/1', 'javaInterfaceFilePop(${1:G}) $2'), ('createDirectory/2', 'createDirectory(${1:G}, ${2:Scope}) $3'), ('createJavaDirectory/2', 'createJavaDirectory(${1:G}, ${2:Scope}) $3'), ('open_java_file/3', 'open_java_file(${1:G}, ${2:N}, ${3:Name}) $4')],
'ic_forms': [('get_id/1', 'get_id(${1:Param1}) $2'), ('get_id2/1', 'get_id2(${1:X}) $2'), ('get_java_id/1', 'get_java_id(${1:X}) $2'), ('get_line/1', 'get_line(${1:Param1}) $2')],
'ic_genobj': [('new/1', 'new(${1:Opts}) $2'), ('free_table_space/1', 'free_table_space(${1:G}) $2'), ('process_space/0', 'process_space() $1')],
'ic_java_type': [('getType/3', 'getType(${1:G}, ${2:N}, ${3:Param3}) $4'), ('getHolderType/3', 'getHolderType(${1:G}, ${2:N}, ${3:Param3}) $4'), ('getParamType/4', 'getParamType(${1:G}, ${2:N}, ${3:S}, ${4:Param4}) $5'), ('inlinedTypes/2', 'inlinedTypes(${1:PkgName}, ${2:Param2}) $3'), ('marshalFun/4', 'marshalFun(${1:G}, ${2:N}, ${3:X}, ${4:Type}) $5'), ('unMarshalFun/4', 'unMarshalFun(${1:Param1}, ${2:Param2}, ${3:Param3}, ${4:Param4}) $5'), ('getFullType/4', 'getFullType(${1:G}, ${2:N}, ${3:X}, ${4:T}) $5'), ('getFullType/3', 'getFullType(${1:G}, ${2:N}, ${3:T}) $4'), ('getMarshalType/4', 'getMarshalType(${1:G}, ${2:N}, ${3:Param3}, ${4:Param4}) $5'), ('getUnmarshalType/4', 'getUnmarshalType(${1:G}, ${2:N}, ${3:X}, ${4:Param4}) $5'), ('getdim/1', 'getdim(${1:Param1}) $2')],
'ic_jbe': [('do_gen/3', 'do_gen(${1:G}, ${2:Param2}, ${3:Form}) $4'), ('gen/3', 'gen(${1:G}, ${2:N}, ${3:Form}) $4'), ('emit_type_function/4', 'emit_type_function(${1:G}, ${2:N}, ${3:X}, ${4:Fd}) $5')],
'ic_noc': [('do_gen/3', 'do_gen(${1:G}, ${2:File}, ${3:Form}) $4')],
'ic_options': [('defaultBe/0', 'defaultBe() $1'), ('float_to_version/1', 'float_to_version(${1:Param1}) $2'), ('get_opt/2', 'get_opt(${1:G}, ${2:K}) $3'), ('add_opt/3', 'add_opt(${1:G}, ${2:KList}, ${3:V}) $4'), ('read_cfg/2', 'read_cfg(${1:G}, ${2:Opts}) $3'), ('which_opts/1', 'which_opts(${1:G}) $2'), ('allowed_opt/2', 'allowed_opt(${1:Param1}, ${2:V}) $3')],
'ic_plainbe': [('do_gen/3', 'do_gen(${1:G}, ${2:File}, ${3:Form}) $4')],
'ic_pp': [('run/2', 'run(${1:FileName}, ${2:Flags}) $3')],
'ic_pragma': [('pragma_reg/2', 'pragma_reg(${1:G}, ${2:X}) $3'), ('pragma_cover/3', 'pragma_cover(${1:G}, ${2:Scope}, ${3:Object}) $4')],
'ic_sequence_java': [('gen/4', 'gen(${1:G}, ${2:N}, ${3:X}, ${4:Param4}) $5')],
'ic_struct_java': [('gen/3', 'gen(${1:G}, ${2:N}, ${3:Param3}) $4')],
'ic_symtab': [('new/0', 'new() $1'), ('store/3', 'store(${1:G}, ${2:N}, ${3:X}) $4'), ('retrieve/2', 'retrieve(${1:G}, ${2:Id}) $3'), ('soft_retrieve/2', 'soft_retrieve(${1:G}, ${2:Id}) $3'), ('intf_resolv/3', 'intf_resolv(${1:G}, ${2:Scope}, ${3:Id}) $4')],
'ic_union_java': [('gen/3', 'gen(${1:G}, ${2:N}, ${3:Param3}) $4')],
'ic_util': [('mk_align/1', 'mk_align(${1:String}) $2'), ('mk_list/1', 'mk_list(${1:Param1}) $2'), ('join/2', 'join(${1:Param1}, ${2:S}) $3'), ('chain/2', 'chain(${1:Param1}, ${2:T}) $3'), ('mk_name/2', 'mk_name(${1:Param1}, ${2:Name}) $3'), ('mk_OE_name/2', 'mk_OE_name(${1:Param1}, ${2:Name}) $3'), ('mk_oe_name/2', 'mk_oe_name(${1:Param1}, ${2:Name}) $3'), ('mk_var/1', 'mk_var() $1')],
'icenum': [('enum_gen/4', 'enum_gen(${1:G}, ${2:N}, ${3:X}, ${4:Param4}) $5')],
'iceval': [('eval_const/5', 'eval_const(${1:G}, ${2:S}, ${3:N}, ${4:TK}, ${5:Expr}) $6'), ('eval_e/5', 'eval_e(${1:G}, ${2:S}, ${3:N}, ${4:Tk}, ${5:Val}) $6')],
'icparse': [('parse/1', 'parse(${1:Tokens}) $2'), ('parse_and_scan/1', 'parse_and_scan(${1:Param1}) $2'), ('format_error/1', 'format_error(${1:Message}) $2')],
'icpreproc': [('preproc/2', 'preproc(${1:G}, ${2:File}) $3')],
'icscan': [('scan/2', 'scan(${1:G}, ${2:File}) $3')],
'icstruct': [('struct_gen/4', 'struct_gen(${1:G}, ${2:N}, ${3:X}, ${4:Param4}) $5'), ('except_gen/4', 'except_gen(${1:G}, ${2:N}, ${3:X}, ${4:Param4}) $5'), ('create_c_array_coding_file/5', 'create_c_array_coding_file(${1:G}, ${2:N}, ${3:Param3}, ${4:Type}, ${5:TypeDefFlag}) $6')],
'ictk': [('reg_gen/3', 'reg_gen(${1:G}, ${2:N}, ${3:X}) $4'), ('unreg_gen/3', 'unreg_gen(${1:G}, ${2:N}, ${3:X}) $4')],
'ictype': [('type_check/2', 'type_check(${1:G}, ${2:Forms}) $3'), ('scoped_lookup/4', 'scoped_lookup(${1:G}, ${2:S}, ${3:N}, ${4:X}) $5'), ('maybe_array/5', 'maybe_array(${1:G}, ${2:S}, ${3:N}, ${4:X}, ${5:TK}) $6'), ('to_uppercase/1', 'to_uppercase(${1:Z}) $2')],
'icunion': [('union_gen/4', 'union_gen(${1:G}, ${2:N}, ${3:X}, ${4:Param4}) $5')],
'inviso': [('start/0', 'start() $1'), ('start/1', 'start(${1:Options}) $2'), ('add_node/1', 'add_node(${1:Reference}) $2'), ('add_node/2', 'add_node(${1:Reference}, ${2:Param2}) $3'), ('add_node_if_ref/1', 'add_node_if_ref(${1:Reference}) $2'), ('add_node_if_ref/2', 'add_node_if_ref(${1:Reference}, ${2:Param2}) $3'), ('add_nodes/2', 'add_nodes(${1:Nodes}, ${2:Param2}) $3'), ('add_nodes/3', 'add_nodes(${1:Nodes}, ${2:Reference}, ${3:Param3}) $4'), ('add_nodes_if_ref/2', 'add_nodes_if_ref(${1:Nodes}, ${2:Param2}) $3'), ('add_nodes_if_ref/3', 'add_nodes_if_ref(${1:Nodes}, ${2:Reference}, ${3:Param3}) $4'), ('change_options/1', 'change_options(${1:Param1}) $2'), ('change_options/2', 'change_options(${1:Nodes}, ${2:Param2}) $3'), ('init_tracing/1', 'init_tracing(${1:TracerDataList}) $2'), ('init_tracing/2', 'init_tracing(${1:Nodes}, ${2:Param2}) $3'), ('stop_tracing/0', 'stop_tracing() $1'), ('stop_tracing/1', 'stop_tracing(${1:Param1}) $2'), ('clear/0', 'clear() $1'), ('clear/1', 'clear(${1:Param1}) $2'), ('clear/2', 'clear(${1:Nodes}, ${2:Param2}) $3'), ('flush/0', 'flush() $1'), ('flush/1', 'flush(${1:Param1}) $2'), ('stop/0', 'stop() $1'), ('stop_nodes/0', 'stop_nodes() $1'), ('stop_nodes/1', 'stop_nodes(${1:Param1}) $2'), ('stop_all/0', 'stop_all() $1'), ('tp/1', 'tp(${1:PatternList}) $2'), ('tp/2', 'tp(${1:Nodes}, ${2:PatternList}) $3'), ('tp/4', 'tp(${1:Nodes}, ${2:Module}, ${3:Function}, ${4:MatchSpec}) $5'), ('tp/5', 'tp(${1:Nodes}, ${2:Module}, ${3:Function}, ${4:Arity}, ${5:Param5}) $6'), ('tp/6', 'tp(${1:Nodes}, ${2:Module}, ${3:Function}, ${4:Arity}, ${5:MatchSpec}, ${6:Opts}) $7'), ('tpl/1', 'tpl(${1:PatternList}) $2'), ('tpl/2', 'tpl(${1:Nodes}, ${2:PatternList}) $3'), ('tpl/4', 'tpl(${1:Nodes}, ${2:Module}, ${3:Function}, ${4:MatchSpec}) $5'), ('tpl/5', 'tpl(${1:Nodes}, ${2:Module}, ${3:Function}, ${4:Arity}, ${5:Param5}) $6'), ('tpl/6', 'tpl(${1:Nodes}, ${2:Module}, ${3:Function}, ${4:Arity}, ${5:MatchSpec}, ${6:Opts}) $7'), ('tpm_localnames/0', 'tpm_localnames() $1'), ('tpm_localnames/1', 'tpm_localnames(${1:Nodes}) $2'), ('tpm_globalnames/0', 'tpm_globalnames() $1'), ('tpm_globalnames/1', 'tpm_globalnames(${1:Nodes}) $2'), ('init_tpm/4', 'init_tpm(${1:Mod}, ${2:Func}, ${3:Arity}, ${4:CallFunc}) $5'), ('init_tpm/5', 'init_tpm(${1:Nodes}, ${2:Mod}, ${3:Func}, ${4:Arity}, ${5:CallFunc}) $6'), ('init_tpm/7', 'init_tpm(${1:Mod}, ${2:Func}, ${3:Arity}, ${4:InitFunc}, ${5:CallFunc}, ${6:ReturnFunc}, ${7:RemoveFunc}) $8'), ('init_tpm/8', 'init_tpm(${1:Nodes}, ${2:Mod}, ${3:Func}, ${4:Arity}, ${5:InitFunc}, ${6:CallFunc}, ${7:ReturnFunc}, ${8:RemoveFunc}) $9'), ('tpm/4', 'tpm(${1:Mod}, ${2:Func}, ${3:Arity}, ${4:CallFunc}) $5'), ('tpm/5', 'tpm(${1:Nodes}, ${2:Mod}, ${3:Func}, ${4:Arity}, ${5:CallFunc}) $6'), ('tpm/6', 'tpm(${1:Mod}, ${2:Func}, ${3:Arity}, ${4:InitFunc}, ${5:CallFunc}, ${6:CallFunc}) $7'), ('tpm/8', 'tpm(${1:Nodes}, ${2:Mod}, ${3:Func}, ${4:Arity}, ${5:InitFunc}, ${6:CallFunc}, ${7:ReturnFunc}, ${8:RemoveFunc}) $9'), ('tpm/9', 'tpm(${1:Nodes}, ${2:Mod}, ${3:Func}, ${4:Arity}, ${5:MS}, ${6:InitFunc}, ${7:CallFunc}, ${8:ReturnFunc}, ${9:RemoveFunc}) $10'), ('tpm_tracer/4', 'tpm_tracer(${1:Mod}, ${2:Func}, ${3:Arity}, ${4:MS}) $5'), ('tpm_tracer/5', 'tpm_tracer(${1:Nodes}, ${2:Mod}, ${3:Func}, ${4:Arity}, ${5:Param5}) $6'), ('tpm_tracer/6', 'tpm_tracer(${1:Nodes}, ${2:Mod}, ${3:Func}, ${4:Arity}, ${5:MS}, ${6:CallFunc}) $7'), ('tpm_tracer/8', 'tpm_tracer(${1:Mod}, ${2:Func}, ${3:Arity}, ${4:MS}, ${5:InitFunc}, ${6:CallFunc}, ${7:ReturnFunc}, ${8:RemoveFunc}) $9'), ('tpm_tracer/9', 'tpm_tracer(${1:Nodes}, ${2:Mod}, ${3:Func}, ${4:Arity}, ${5:MS}, ${6:InitFunc}, ${7:CallFunc}, ${8:ReturnFunc}, ${9:RemoveFunc}) $10'), ('tpm_ms/5', 'tpm_ms(${1:Mod}, ${2:Func}, ${3:Arity}, ${4:MSname}, ${5:MS}) $6'), ('tpm_ms/6', 'tpm_ms(${1:Nodes}, ${2:Mod}, ${3:Func}, ${4:Arity}, ${5:MSname}, ${6:MS}) $7'), ('tpm_ms_tracer/5', 'tpm_ms_tracer(${1:Mod}, ${2:Func}, ${3:Arity}, ${4:MSname}, ${5:MS}) $6'), ('tpm_ms_tracer/6', 'tpm_ms_tracer(${1:Nodes}, ${2:Mod}, ${3:Func}, ${4:Arity}, ${5:MSname}, ${6:MS}) $7'), ('ctpm_ms/4', 'ctpm_ms(${1:Mod}, ${2:Func}, ${3:Arity}, ${4:MSname}) $5'), ('ctpm_ms/5', 'ctpm_ms(${1:Nodes}, ${2:Mod}, ${3:Func}, ${4:Arity}, ${5:MSname}) $6'), ('ctpm/3', 'ctpm(${1:Mod}, ${2:Func}, ${3:Arity}) $4'), ('ctpm/4', 'ctpm(${1:Nodes}, ${2:Mod}, ${3:Func}, ${4:Arity}) $5'), ('ctpm_localnames/0', 'ctpm_localnames() $1'), ('ctpm_localnames/1', 'ctpm_localnames(${1:Nodes}) $2'), ('ctpm_globalnames/0', 'ctpm_globalnames() $1'), ('ctpm_globalnames/1', 'ctpm_globalnames(${1:Nodes}) $2'), ('ctp/1', 'ctp(${1:Param1}) $2'), ('ctp/2', 'ctp(${1:Nodes}, ${2:Param2}) $3'), ('ctp/3', 'ctp(${1:Nodes}, ${2:Module}, ${3:Arity}) $4'), ('ctp/4', 'ctp(${1:Nodes}, ${2:Module}, ${3:Function}, ${4:Arity}) $5'), ('ctpl/1', 'ctpl(${1:Param1}) $2'), ('ctpl/2', 'ctpl(${1:Nodes}, ${2:Param2}) $3'), ('ctpl/3', 'ctpl(${1:Nodes}, ${2:Module}, ${3:Arity}) $4'), ('ctpl/4', 'ctpl(${1:Nodes}, ${2:Module}, ${3:Function}, ${4:Arity}) $5'), ('tf/1', 'tf(${1:Param1}) $2'), ('tf/2', 'tf(${1:Nodes}, ${2:Param2}) $3'), ('tf/3', 'tf(${1:Nodes}, ${2:PidSpec}, ${3:Param3}) $4'), ('ctf/1', 'ctf(${1:Param1}) $2'), ('ctf/2', 'ctf(${1:Nodes}, ${2:Param2}) $3'), ('ctf/3', 'ctf(${1:Nodes}, ${2:PidSpec}, ${3:Param3}) $4'), ('ctp_all/0', 'ctp_all() $1'), ('ctp_all/1', 'ctp_all(${1:Nodes}) $2'), ('ctf_all/0', 'ctf_all() $1'), ('ctf_all/1', 'ctf_all(${1:Nodes}) $2'), ('suspend/1', 'suspend(${1:Reason}) $2'), ('suspend/2', 'suspend(${1:Nodes}, ${2:Reason}) $3'), ('cancel_suspension/0', 'cancel_suspension() $1'), ('cancel_suspension/1', 'cancel_suspension(${1:Nodes}) $2'), ('get_status/0', 'get_status() $1'), ('get_status/1', 'get_status(${1:Param1}) $2'), ('get_tracerdata/0', 'get_tracerdata() $1'), ('get_tracerdata/1', 'get_tracerdata(${1:Param1}) $2'), ('list_logs/0', 'list_logs() $1'), ('list_logs/1', 'list_logs(${1:Param1}) $2'), ('fetch_log/2', 'fetch_log(${1:DestDir}, ${2:Param2}) $3'), ('fetch_log/3', 'fetch_log(${1:DestDir}, ${2:DestDir}, ${3:Param3}) $4'), ('fetch_log/4', 'fetch_log(${1:ToNode}, ${2:DestDir}, ${3:Param3}, ${4:Param4}) $5'), ('delete_log/0', 'delete_log() $1'), ('delete_log/1', 'delete_log(${1:What}) $2'), ('delete_log/2', 'delete_log(${1:Nodes}, ${2:Spec}) $3'), ('subscribe/0', 'subscribe() $1'), ('subscribe/1', 'subscribe(${1:Pid}) $2'), ('unsubscribe/0', 'unsubscribe() $1'), ('unsubscribe/1', 'unsubscribe(${1:Pid}) $2')],
'inviso_c': [('init/1', 'init(${1:Param1}) $2'), ('handle_call/3', 'handle_call(${1:Request}, ${2:From}, ${3:LD}) $4'), ('handle_cast/2', 'handle_cast(${1:Param1}, ${2:LD}) $3'), ('handle_info/2', 'handle_info(${1:Param1}, ${2:LD}) $3'), ('terminate/2', 'terminate(${1:Param1}, ${2:Param2}) $3'), ('code_change/3', 'code_change(${1:Param1}, ${2:LoopData}, ${3:Param3}) $4')],
'inviso_lfm': [('merge/2', 'merge(${1:Files}, ${2:Param2}) $3'), ('merge/3', 'merge(${1:Files}, ${2:WorkHandlerFun}, ${3:Param3}) $4'), ('merge/4', 'merge(${1:Files}, ${2:WorkHandlerFun}, ${3:HandlerData}, ${4:Param4}) $5'), ('merge/5', 'merge(${1:Files}, ${2:BeginHandlerFun}, ${3:WorkHandlerFun}, ${4:EndHandlerFun}, ${5:HandlerData}) $6'), ('merge/6', 'merge(${1:Files}, ${2:BeginHandlerFun}, ${3:WorkHandlerFun}, ${4:EndHandlerFun}, ${5:HandlerData}, ${6:Dbg}) $7')],
'inviso_lfm_tpfreader': [('init/2', 'init(${1:RecPid}, ${2:Param2}) $3')],
'inviso_tool': [('start/0', 'start() $1'), ('start/1', 'start(${1:Config}) $2'), ('stop/0', 'stop() $1'), ('stop/1', 'stop(${1:UntouchedNodes}) $2')],
'inviso_tool_lib': [('inviso_cmd/3', 'inviso_cmd(${1:NodeName}, ${2:Func}, ${3:Args}) $4'), ('expand_module_names/3', 'expand_module_names(${1:Nodes}, ${2:Mod}, ${3:Opts}) $4'), ('make_patterns/7', 'make_patterns(${1:Catches}, ${2:Opts}, ${3:Dbg}, ${4:NodeModsOrMods}, ${5:F}, ${6:A}, ${7:MS}) $8'), ('std_tdg/2', 'std_tdg(${1:Node}, ${2:Param2}) $3')],
'uds': [('listen/1', 'listen(${1:Name}) $2'), ('connect/1', 'connect(${1:Name}) $2'), ('accept/1', 'accept(${1:Port}) $2'), ('send/2', 'send(${1:Port}, ${2:Data}) $3'), ('recv/1', 'recv(${1:Port}) $2'), ('close/1', 'close(${1:Port}) $2'), ('get_port/1', 'get_port(${1:Port}) $2'), ('get_status_counters/1', 'get_status_counters(${1:Port}) $2'), ('set_mode/2', 'set_mode(${1:Port}, ${2:Param2}) $3'), ('controlling_process/2', 'controlling_process(${1:Port}, ${2:Pid}) $3'), ('tick/1', 'tick(${1:Port}) $2'), ('get_creation/1', 'get_creation(${1:Port}) $2')],
'uds_dist': [('childspecs/0', 'childspecs() $1'), ('listen/1', 'listen(${1:Name}) $2'), ('accept/1', 'accept(${1:Listen}) $2'), ('accept_connection/5', 'accept_connection(${1:AcceptPid}, ${2:Socket}, ${3:MyNode}, ${4:Allowed}, ${5:SetupTime}) $6'), ('setup/4', 'setup(${1:Node}, ${2:MyNode}, ${3:LongOrShortNames}, ${4:SetupTime}) $5'), ('close/1', 'close(${1:Socket}) $2'), ('select/1', 'select(${1:Node}) $2'), ('is_node_name/1', 'is_node_name(${1:Node}) $2')],
'uds_server': [('start_link/0', 'start_link() $1')],
'application': [('start/1', 'start(${1:Application}) $2'), ('start/2', 'start(${1:Application}, ${2:Type}) $3'), ('start_boot/1', 'start_boot(${1:Application}) $2'), ('start_boot/2', 'start_boot(${1:Application}, ${2:RestartType}) $3'), ('stop/1', 'stop(${1:Application}) $2'), ('load/1', 'load(${1:AppDescr}) $2'), ('load/2', 'load(${1:AppDescr}, ${2:Distributed}) $3'), ('unload/1', 'unload(${1:Application}) $2'), ('takeover/2', 'takeover(${1:Application}, ${2:Type}) $3'), ('which_applications/0', 'which_applications() $1'), ('which_applications/1', 'which_applications(${1:Timeout}) $2'), ('loaded_applications/0', 'loaded_applications() $1'), ('permit/2', 'permit(${1:Application}, ${2:Permission}) $3')],
'application_controller': [('start/1', 'start(${1:KernelApp}) $2'), ('load_application/1', 'load_application(${1:Application}) $2'), ('unload_application/1', 'unload_application(${1:AppName}) $2'), ('start_application/2', 'start_application(${1:AppName}, ${2:RestartType}) $3'), ('start_boot_application/2', 'start_boot_application(${1:Application}, ${2:RestartType}) $3'), ('stop_application/1', 'stop_application(${1:AppName}) $2'), ('control_application/1', 'control_application(${1:AppName}) $2'), ('change_application_data/2', 'change_application_data(${1:Applications}, ${2:Config}) $3'), ('prep_config_change/0', 'prep_config_change() $1'), ('config_change/1', 'config_change(${1:EnvPrev}) $2'), ('which_applications/0', 'which_applications() $1'), ('which_applications/1', 'which_applications(${1:Timeout}) $2'), ('loaded_applications/0', 'loaded_applications() $1'), ('info/0', 'info() $1'), ('get_pid_env/2', 'get_pid_env(${1:Master}, ${2:Key}) $3'), ('get_env/2', 'get_env(${1:AppName}, ${2:Key}) $3'), ('get_pid_all_env/1', 'get_pid_all_env(${1:Master}) $2'), ('get_all_env/1', 'get_all_env(${1:AppName}) $2'), ('get_pid_key/2', 'get_pid_key(${1:Master}, ${2:Key}) $3'), ('get_key/2', 'get_key(${1:AppName}, ${2:Key}) $3'), ('get_pid_all_key/1', 'get_pid_all_key(${1:Master}) $2'), ('get_all_key/1', 'get_all_key(${1:AppName}) $2'), ('get_master/1', 'get_master(${1:AppName}) $2'), ('get_application/1', 'get_application(${1:Master}) $2'), ('get_application_module/1', 'get_application_module(${1:Module}) $2'), ('start_type/1', 'start_type(${1:Master}) $2'), ('permit_application/2', 'permit_application(${1:ApplName}, ${2:Flag}) $3'), ('do_config_diff/2', 'do_config_diff(${1:AppEnvNow}, ${2:AppEnvBefore}) $3'), ('set_env/3', 'set_env(${1:AppName}, ${2:Key}, ${3:Val}) $4'), ('set_env/4', 'set_env(${1:AppName}, ${2:Key}, ${3:Val}, ${4:Timeout}) $5'), ('unset_env/2', 'unset_env(${1:AppName}, ${2:Key}) $3'), ('unset_env/3', 'unset_env(${1:AppName}, ${2:Key}, ${3:Timeout}) $4')],
'application_master': [('start_link/2', 'start_link(${1:ApplData}, ${2:Type}) $3'), ('start_type/0', 'start_type() $1'), ('stop/1', 'stop(${1:AppMaster}) $2')],
'application_starter': [('start/3', 'start(${1:Phases}, ${2:Type}, ${3:Applications}) $4')],
'auth': [('start_link/0', 'start_link() $1')],
'code': [('objfile_extension/0', 'objfile_extension() $1'), ('set_path/1', 'set_path(${1:Path}) $2'), ('get_path/0', 'get_path() $1'), ('load_file/1', 'load_file(${1:Module}) $2'), ('ensure_loaded/1', 'ensure_loaded(${1:Module}) $2'), ('load_abs/1', 'load_abs(${1:File}) $2'), ('load_abs/2', 'load_abs(${1:File}, ${2:Module}) $3'), ('load_binary/3', 'load_binary(${1:Module}, ${2:File}, ${3:Bin}) $4'), ('load_native_partial/2', 'load_native_partial(${1:Mod}, ${2:Param2}) $3'), ('load_native_sticky/3', 'load_native_sticky(${1:Param1}, ${2:Param2}, ${3:Param3}) $4'), ('delete/1', 'delete(${1:Module}) $2'), ('purge/1', 'purge(${1:Module}) $2'), ('soft_purge/1', 'soft_purge(${1:Module}) $2'), ('is_loaded/1', 'is_loaded(${1:Module}) $2'), ('all_loaded/0', 'all_loaded() $1'), ('stop/0', 'stop() $1'), ('root_dir/0', 'root_dir() $1'), ('lib_dir/0', 'lib_dir() $1'), ('lib_dir/1', 'lib_dir(${1:Application}) $2'), ('lib_dir/2', 'lib_dir(${1:Name}, ${2:SubDir}) $3'), ('compiler_dir/0', 'compiler_dir() $1'), ('priv_dir/1', 'priv_dir(${1:Application}) $2'), ('stick_dir/1', 'stick_dir(${1:Dir}) $2'), ('unstick_dir/1', 'unstick_dir(${1:Dir}) $2'), ('stick_mod/1', 'stick_mod(${1:Module}) $2'), ('unstick_mod/1', 'unstick_mod(${1:Module}) $2'), ('is_sticky/1', 'is_sticky(${1:Module}) $2'), ('get_object_code/1', 'get_object_code(${1:Module}) $2'), ('add_path/1', 'add_path(${1:Dir}) $2'), ('add_pathsz/1', 'add_pathsz(${1:Dirs}) $2'), ('add_paths/1', 'add_paths(${1:Dirs}) $2'), ('add_pathsa/1', 'add_pathsa(${1:Dirs}) $2'), ('add_patha/1', 'add_patha(${1:Dir}) $2'), ('add_pathz/1', 'add_pathz(${1:Dir}) $2'), ('del_path/1', 'del_path(${1:Dir}) $2'), ('replace_path/2', 'replace_path(${1:Name}, ${2:Dir}) $3'), ('rehash/0', 'rehash() $1'), ('start_link/0', 'start_link() $1'), ('start_link/1', 'start_link(${1:Flags}) $2'), ('which/1', 'which(${1:Module}) $2'), ('where_is_file/1', 'where_is_file(${1:Filename}) $2'), ('where_is_file/2', 'where_is_file(${1:Path}, ${2:Param2}) $3'), ('set_primary_archive/3', 'set_primary_archive(${1:Param1}, ${2:Bin}, ${3:FileInfo}) $4'), ('clash/0', 'clash() $1')],
'code_server': [('start_link/1', 'start_link(${1:Args}) $2'), ('call/2', 'call(${1:Name}, ${2:Req}) $3'), ('system_continue/3', 'system_continue(${1:Param1}, ${2:Param2}, ${3:State}) $4'), ('system_terminate/4', 'system_terminate(${1:Param1}, ${2:Param2}, ${3:Param3}, ${4:Param4}) $5'), ('system_code_change/4', 'system_code_change(${1:State}, ${2:Param2}, ${3:Param3}, ${4:Param4}) $5'), ('error_msg/2', 'error_msg(${1:Format}, ${2:Args}) $3'), ('info_msg/2', 'info_msg(${1:Format}, ${2:Args}) $3')],
'disk_log': [('start/0', 'start() $1'), ('istart_link/1', 'istart_link(${1:Server}) $2'), ('log/2', 'log(${1:Log}, ${2:Term}) $3'), ('log_terms/2', 'log_terms(${1:Log}, ${2:TermList}) $3'), ('blog/2', 'blog(${1:Log}, ${2:Bytes}) $3'), ('blog_terms/2', 'blog_terms(${1:Log}, ${2:BytesList}) $3'), ('alog/2', 'alog(${1:Log}, ${2:Term}) $3'), ('alog_terms/2', 'alog_terms(${1:Log}, ${2:TermList}) $3'), ('balog/2', 'balog(${1:Log}, ${2:Bytes}) $3'), ('balog_terms/2', 'balog_terms(${1:Log}, ${2:ByteList}) $3'), ('close/1', 'close(${1:Log}) $2'), ('lclose/1', 'lclose(${1:Log}) $2'), ('lclose/2', 'lclose(${1:Log}, ${2:Node}) $3'), ('sync/1', 'sync(${1:Log}) $2'), ('open/1', 'open(${1:ArgL}) $2'), ('truncate/1', 'truncate(${1:Log}) $2'), ('truncate/2', 'truncate(${1:Log}, ${2:Head}) $3'), ('btruncate/2', 'btruncate(${1:Log}, ${2:BHead}) $3'), ('reopen/2', 'reopen(${1:Log}, ${2:File}) $3'), ('reopen/3', 'reopen(${1:Log}, ${2:File}, ${3:Head}) $4'), ('breopen/3', 'breopen(${1:Log}, ${2:File}, ${3:BHead}) $4'), ('inc_wrap_file/1', 'inc_wrap_file(${1:Log}) $2'), ('change_size/2', 'change_size(${1:Log}, ${2:Size}) $3'), ('change_notify/3', 'change_notify(${1:Log}, ${2:Owner}, ${3:Notify}) $4'), ('change_header/2', 'change_header(${1:Log}, ${2:Header}) $3'), ('chunk/2', 'chunk(${1:Log}, ${2:Continuation}) $3'), ('chunk/3', 'chunk(${1:Log}, ${2:Continuation}, ${3:N}) $4'), ('bchunk/2', 'bchunk(${1:Log}, ${2:Continuation}) $3'), ('bchunk/3', 'bchunk(${1:Log}, ${2:Continuation}, ${3:N}) $4'), ('chunk_step/3', 'chunk_step(${1:Log}, ${2:Continuation}, ${3:Step}) $4'), ('chunk_info/1', 'chunk_info(${1:Continuation}) $2'), ('block/1', 'block(${1:Log}) $2'), ('block/2', 'block(${1:Log}, ${2:QueueLogRecords}) $3'), ('unblock/1', 'unblock(${1:Log}) $2'), ('info/1', 'info(${1:Log}) $2'), ('format_error/1', 'format_error(${1:Error}) $2'), ('accessible_logs/0', 'accessible_logs() $1')],
'disk_log_1': [('int_open/4', 'int_open(${1:FileName}, ${2:Repair}, ${3:Mode}, ${4:Head}) $5'), ('ext_open/4', 'ext_open(${1:FName}, ${2:MaxB}, ${3:MaxF}, ${4:Head}) $5'), ('logl/1', 'logl(${1:X}) $2'), ('close/3', 'close(${1:Fd}, ${2:FileName}, ${3:Mode}) $4'), ('truncate/3', 'truncate(${1:FdC}, ${2:FileName}, ${3:Head}) $4'), ('chunk/5', 'chunk(${1:FdC}, ${2:FileName}, ${3:Pos}, ${4:B}, ${5:N}) $6'), ('sync/2', 'sync(${1:FdC}, ${2:FName}) $3'), ('write_cache/2', 'write_cache(${1:Fd}, ${2:FName}) $3')],
'disk_log_server': [('start_link/0', 'start_link() $1'), ('start/0', 'start() $1'), ('open/1', 'open(${1:Other}) $2'), ('close/1', 'close(${1:Pid}) $2'), ('get_log_pids/1', 'get_log_pids(${1:LogName}) $2'), ('accessible_logs/0', 'accessible_logs() $1')],
'disk_log_sup': [('start_link/0', 'start_link() $1'), ('init/1', 'init(${1:Param1}) $2')],
'dist_ac': [('start_link/0', 'start_link() $1'), ('load_application/2', 'load_application(${1:AppName}, ${2:DistNodes}) $3'), ('takeover_application/2', 'takeover_application(${1:AppName}, ${2:RestartType}) $3'), ('permit_application/2', 'permit_application(${1:AppName}, ${2:Bool}) $3'), ('permit_only_loaded_application/2', 'permit_only_loaded_application(${1:AppName}, ${2:Bool}) $3')],
'dist_util': [('handshake_we_started/1', 'handshake_we_started() $1'), ('handshake_other_started/1', 'handshake_other_started(${1:Param1}) $2'), ('start_timer/1', 'start_timer(${1:Timeout}) $2'), ('setup_timer/2', 'setup_timer(${1:Pid}, ${2:Timeout}) $3'), ('reset_timer/1', 'reset_timer(${1:Timer}) $2'), ('cancel_timer/1', 'cancel_timer(${1:Timer}) $2'), ('shutdown/3', 'shutdown(${1:Module}, ${2:Line}, ${3:Data}) $4'), ('shutdown/4', 'shutdown(${1:Param1}, ${2:Param2}, ${3:Param3}, ${4:Reason}) $5')],
'erl_boot_server': [('start/1', 'start(${1:Slaves}) $2'), ('start_link/1', 'start_link(${1:Slaves}) $2'), ('add_slave/1', 'add_slave(${1:Slave}) $2'), ('delete_slave/1', 'delete_slave(${1:Slave}) $2'), ('add_subnet/2', 'add_subnet(${1:Mask}, ${2:Param2}) $3'), ('delete_subnet/2', 'delete_subnet(${1:Mask}, ${2:Param2}) $3'), ('which_slaves/0', 'which_slaves() $1')],
'erl_ddll': [('load_driver/2', 'load_driver(${1:Path}, ${2:Name}) $3'), ('load/2', 'load(${1:Path}, ${2:Name}) $3'), ('unload_driver/1', 'unload_driver(${1:Name}) $2'), ('unload/1', 'unload(${1:Name}) $2'), ('reload/2', 'reload(${1:Path}, ${2:Name}) $3'), ('reload_driver/2', 'reload_driver(${1:Path}, ${2:Name}) $3'), ('format_error/1', 'format_error(${1:ErrorDesc}) $2'), ('info/1', 'info(${1:Name}) $2'), ('info/0', 'info() $1'), ('start/0', 'start() $1'), ('stop/0', 'stop() $1')],
'erl_distribution': [('start_link/0', 'start_link() $1'), ('start_link/1', 'start_link(${1:Args}) $2'), ('init/1', 'init(${1:NetArgs}) $2'), ('start/1', 'start(${1:Args}) $2'), ('stop/0', 'stop() $1')],
'erl_epmd': [('start/0', 'start() $1'), ('start_link/0', 'start_link() $1'), ('stop/0', 'stop() $1'), ('port_please/2', 'port_please(${1:Node}, ${2:Host}) $3'), ('port_please/3', 'port_please(${1:Node}, ${2:HostName}, ${3:Timeout}) $4'), ('names/0', 'names() $1'), ('names/1', 'names(${1:EpmdAddr}) $2'), ('register_node/2', 'register_node(${1:Name}, ${2:PortNo}) $3'), ('open/0', 'open() $1'), ('open/1', 'open(${1:Param1}) $2'), ('open/2', 'open(${1:Param1}, ${2:D}) $3')],
'erl_reply': [('reply/1', 'reply(${1:Param1}) $2')],
'error_handler': [('undefined_function/3', 'undefined_function(${1:Module}, ${2:Function}, ${3:Args}) $4'), ('undefined_lambda/3', 'undefined_lambda(${1:Module}, ${2:Fun}, ${3:Args}) $4'), ('stub_function/3', 'stub_function(${1:Mod}, ${2:Func}, ${3:Args}) $4'), ('breakpoint/3', 'breakpoint(${1:Module}, ${2:Func}, ${3:Args}) $4')],
'error_logger': [('start/0', 'start() $1'), ('start_link/0', 'start_link() $1'), ('format/2', 'format(${1:Format}, ${2:Data}) $3'), ('error_msg/1', 'error_msg(${1:Format}) $2'), ('error_msg/2', 'error_msg(${1:Format}, ${2:Data}) $3'), ('error_report/1', 'error_report(${1:Report}) $2'), ('error_report/2', 'error_report(${1:Type}, ${2:Report}) $3'), ('info_report/1', 'info_report(${1:Report}) $2'), ('info_report/2', 'info_report(${1:Type}, ${2:Report}) $3'), ('warning_report/1', 'warning_report(${1:Report}) $2'), ('warning_report/2', 'warning_report(${1:Type}, ${2:Report}) $3'), ('error_info/1', 'error_info(${1:Error}) $2'), ('info_msg/1', 'info_msg(${1:Format}) $2'), ('info_msg/2', 'info_msg(${1:Format}, ${2:Data}) $3'), ('warning_msg/1', 'warning_msg(${1:Format}) $2'), ('warning_msg/2', 'warning_msg(${1:Format}, ${2:Data}) $3'), ('logfile/1', 'logfile(${1:Param1}) $2'), ('tty/1', 'tty(${1:Flag}) $2'), ('swap_handler/1', 'swap_handler(${1:Param1}) $2'), ('add_report_handler/1', 'add_report_handler(${1:Handler}) $2'), ('add_report_handler/2', 'add_report_handler(${1:Handler}, ${2:Args}) $3'), ('delete_report_handler/1', 'delete_report_handler(${1:Handler}) $2')],
'erts_debug': [('size/1', 'size(${1:Term}) $2'), ('df/1', 'df(${1:Param1}) $2'), ('df/2', 'df(${1:Mod}, ${2:Param2}) $3'), ('df/3', 'df(${1:Mod}, ${2:Func}, ${3:Param3}) $4')],
'file': [('format_error/1', 'format_error(${1:Reason}) $2')],
'file_io_server': [('format_error/1', 'format_error(${1:ErrorId}) $2')],
'file_server': [('format_error/1', 'format_error(${1:ErrorId}) $2')],
'gen_sctp': [('open/0', 'open() $1'), ('open/1', 'open(${1:Port}) $2'), ('open/2', 'open(${1:Port}, ${2:Opts}) $3'), ('close/1', 'close(${1:Socket}) $2')],
'gen_tcp': [('connect/3', 'connect(${1:Address}, ${2:Port}, ${3:Options}) $4'), ('connect/4', 'connect(${1:Address}, ${2:Port}, ${3:Options}, ${4:Timeout}) $5'), ('listen/2', 'listen(${1:Port}, ${2:Options}) $3'), ('accept/1', 'accept(${1:ListenSocket}) $2'), ('accept/2', 'accept(${1:ListenSocket}, ${2:Timeout}) $3'), ('shutdown/2', 'shutdown(${1:Socket}, ${2:How}) $3'), ('close/1', 'close(${1:Socket}) $2')],
'gen_udp': [('open/1', 'open(${1:Port}) $2'), ('open/2', 'open(${1:Port}, ${2:Opts}) $3'), ('close/1', 'close(${1:Socket}) $2')],
'global': [('start/0', 'start() $1'), ('start_link/0', 'start_link() $1'), ('stop/0', 'stop() $1'), ('sync/0', 'sync() $1'), ('sync/1', 'sync(${1:Nodes}) $2'), ('whereis_name/1', 'whereis_name(${1:Name}) $2'), ('register_name/2', 'register_name(${1:Name}, ${2:Pid}) $3'), ('register_name/3', 'register_name(${1:Name}, ${2:Pid}, ${3:Resolve}) $4'), ('register_name_external/2', 'register_name_external(${1:Name}, ${2:Param2}) $3'), ('register_name_external/3', 'register_name_external(${1:Name}, ${2:Pid}, ${3:Param3}) $4'), ('unregister_name_external/1', 'unregister_name_external(${1:Name}) $2'), ('re_register_name/2', 're_register_name(${1:Name}, ${2:Pid}) $3'), ('re_register_name/3', 're_register_name(${1:Name}, ${2:Pid}, ${3:Resolve}) $4'), ('unregister_name/1', 'unregister_name(${1:Name}) $2'), ('registered_names/0', 'registered_names() $1'), ('send/2', 'send(${1:Name}, ${2:Msg}) $3'), ('node_disconnected/1', 'node_disconnected(${1:Node}) $2'), ('set_lock/1', 'set_lock(${1:Id}) $2'), ('set_lock/2', 'set_lock(${1:Id}, ${2:Nodes}) $3'), ('set_lock/3', 'set_lock(${1:Id}, ${2:Nodes}, ${3:Retries}) $4'), ('del_lock/1', 'del_lock(${1:Id}) $2'), ('del_lock/2', 'del_lock(${1:Id}, ${2:Nodes}) $3'), ('trans/2', 'trans(${1:Id}, ${2:Fun}) $3'), ('trans/3', 'trans(${1:Id}, ${2:Fun}, ${3:Nodes}) $4'), ('trans/4', 'trans(${1:Id}, ${2:Fun}, ${3:Nodes}, ${4:Retries}) $5'), ('random_exit_name/3', 'random_exit_name(${1:Name}, ${2:Pid1}, ${3:Pid2}) $4'), ('random_notify_name/3', 'random_notify_name(${1:Name}, ${2:Pid1}, ${3:Pid2}) $4'), ('notify_all_name/3', 'notify_all_name(${1:Name}, ${2:Pid1}, ${3:Pid2}) $4')],
'global_group': [('start/0', 'start() $1'), ('start_link/0', 'start_link() $1'), ('stop/0', 'stop() $1'), ('init/1', 'init(${1:Param1}) $2')],
'global_search': [('start/2', 'start(${1:Flag}, ${2:Arg}) $3')],
'group': [('start/2', 'start(${1:Drv}, ${2:Shell}) $3'), ('start/3', 'start(${1:Drv}, ${2:Shell}, ${3:Options}) $4'), ('server/3', 'server(${1:Drv}, ${2:Shell}, ${3:Options}) $4')],
'heart': [('start/0', 'start() $1'), ('init/2', 'init(${1:Starter}, ${2:Parent}) $3'), ('set_cmd/1', 'set_cmd(${1:Cmd}) $2'), ('clear_cmd/0', 'clear_cmd() $1'), ('get_cmd/0', 'get_cmd() $1'), ('cycle/0', 'cycle() $1')],
'hipe_unified_loader': [('chunk_name/1', 'chunk_name(${1:Architecture}) $2'), ('load_native_code/2', 'load_native_code(${1:Mod}, ${2:Param2}) $3'), ('post_beam_load/1', 'post_beam_load(${1:Param1}) $2'), ('load_module/3', 'load_module(${1:Mod}, ${2:Bin}, ${3:Beam}) $4'), ('load/2', 'load(${1:Mod}, ${2:Bin}) $3')],
'inet': [('peername/1', 'peername(${1:Socket}) $2'), ('sockname/1', 'sockname(${1:Socket}) $2'), ('port/1', 'port(${1:Socket}) $2'), ('send/2', 'send(${1:Socket}, ${2:Packet}) $3'), ('setopts/2', 'setopts(${1:Socket}, ${2:Options}) $3'), ('getopts/2', 'getopts(${1:Socket}, ${2:Options}) $3'), ('getifaddrs/0', 'getifaddrs() $1'), ('getifaddrs/1', 'getifaddrs(${1:Socket}) $2'), ('getif/1', 'getif(${1:Socket}) $2'), ('getif/0', 'getif() $1'), ('getiflist/0', 'getiflist() $1'), ('getiflist/1', 'getiflist(${1:Socket}) $2'), ('ifget/3', 'ifget(${1:Socket}, ${2:Name}, ${3:Opts}) $4'), ('ifget/2', 'ifget(${1:Socket}, ${2:Opts}) $3'), ('ifset/3', 'ifset(${1:Socket}, ${2:Name}, ${3:Opts}) $4'), ('ifset/2', 'ifset(${1:Socket}, ${2:Opts}) $3'), ('getstat/1', 'getstat(${1:Socket}) $2'), ('getstat/2', 'getstat(${1:Socket}, ${2:Options}) $3'), ('ip/1', 'ip(${1:Name}) $2'), ('stats/0', 'stats() $1'), ('options/0', 'options() $1'), ('pushf/3', 'pushf(${1:Param1}, ${2:Fun}, ${3:Param3}) $4'), ('popf/1', 'popf(${1:Param1}) $2'), ('close/1', 'close(${1:Socket}) $2'), ('gethostname/0', 'gethostname() $1'), ('gethostname/1', 'gethostname(${1:Socket}) $2')],
'inet6_sctp': [('getserv/1', 'getserv(${1:Param1}) $2'), ('getaddr/1', 'getaddr(${1:Address}) $2'), ('getaddr/2', 'getaddr(${1:Address}, ${2:Timer}) $3'), ('translate_ip/1', 'translate_ip(${1:IP}) $2')],
'inet6_tcp': [('connect/3', 'connect(${1:Address}, ${2:Port}, ${3:Opts}) $4'), ('connect/4', 'connect(${1:Address}, ${2:Port}, ${3:Opts}, ${4:Param4}) $5'), ('listen/2', 'listen(${1:Port}, ${2:Opts}) $3'), ('accept/1', 'accept(${1:L}) $2'), ('accept/2', 'accept(${1:L}, ${2:Timeout}) $3'), ('close/1', 'close(${1:Socket}) $2')],
'inet6_tcp_dist': [('listen/1', 'listen(${1:Name}) $2'), ('accept/1', 'accept(${1:Listen}) $2'), ('accept_connection/5', 'accept_connection(${1:AcceptPid}, ${2:Socket}, ${3:MyNode}, ${4:Allowed}, ${5:SetupTime}) $6'), ('setup/5', 'setup(${1:Node}, ${2:Type}, ${3:MyNode}, ${4:LongOrShortNames}, ${5:SetupTime}) $6'), ('close/1', 'close(${1:Socket}) $2'), ('select/1', 'select(${1:Node}) $2'), ('is_node_name/1', 'is_node_name(${1:Param1}) $2')],
'inet6_udp': [('open/1', 'open(${1:Port}) $2'), ('open/2', 'open(${1:Port}, ${2:Opts}) $3'), ('close/1', 'close(${1:S}) $2')],
'inet_config': [('init/0', 'init() $1')],
'inet_db': [('start/0', 'start() $1'), ('start_link/0', 'start_link() $1'), ('stop/0', 'stop() $1'), ('reset/0', 'reset() $1'), ('clear_cache/0', 'clear_cache() $1')],
'inet_dns': [('decode/1', 'decode(${1:Param1}) $2'), ('encode/1', 'encode(${1:Q}) $2')],
'inet_gethost_native': [('start_link/0', 'start_link() $1'), ('init/1', 'init(${1:Param1}) $2'), ('terminate/2', 'terminate(${1:Reason}, ${2:Pid}) $3'), ('start_raw/0', 'start_raw() $1'), ('run_once/0', 'run_once() $1')],
'inet_hosts': [('gethostbyname/1', 'gethostbyname(${1:Param1}) $2'), ('gethostbyname/2', 'gethostbyname(${1:Name}, ${2:Param2}) $3'), ('gethostbyaddr/1', 'gethostbyaddr(${1:Param1}) $2')],
'inet_parse': [('hosts/1', 'hosts(${1:File}) $2'), ('hosts/2', 'hosts(${1:Fname}, ${2:File}) $3')],
'inet_res': [('gethostbyname/1', 'gethostbyname(${1:Name}) $2'), ('gethostbyname/2', 'gethostbyname(${1:Name}, ${2:Family}) $3'), ('gethostbyname/3', 'gethostbyname(${1:Name}, ${2:Family}, ${3:Timeout}) $4'), ('gethostbyname_tm/3', 'gethostbyname_tm(${1:Name}, ${2:Param2}, ${3:Timer}) $4')],
'inet_sctp': [('getserv/1', 'getserv(${1:Param1}) $2'), ('getaddr/1', 'getaddr(${1:Address}) $2'), ('getaddr/2', 'getaddr(${1:Address}, ${2:Timer}) $3'), ('translate_ip/1', 'translate_ip(${1:IP}) $2')],
'inet_tcp': [('connect/3', 'connect(${1:Address}, ${2:Port}, ${3:Opts}) $4'), ('connect/4', 'connect(${1:Address}, ${2:Port}, ${3:Opts}, ${4:Param4}) $5'), ('listen/2', 'listen(${1:Port}, ${2:Opts}) $3'), ('accept/1', 'accept(${1:L}) $2'), ('accept/2', 'accept(${1:L}, ${2:Timeout}) $3'), ('close/1', 'close(${1:Socket}) $2')],
'inet_tcp_dist': [('listen/1', 'listen(${1:Name}) $2'), ('accept/1', 'accept(${1:Listen}) $2'), ('accept_connection/5', 'accept_connection(${1:AcceptPid}, ${2:Socket}, ${3:MyNode}, ${4:Allowed}, ${5:SetupTime}) $6'), ('setup/5', 'setup(${1:Node}, ${2:Type}, ${3:MyNode}, ${4:LongOrShortNames}, ${5:SetupTime}) $6'), ('close/1', 'close(${1:Socket}) $2'), ('select/1', 'select(${1:Node}) $2'), ('is_node_name/1', 'is_node_name(${1:Param1}) $2')],
'inet_udp': [('open/1', 'open(${1:Port}) $2'), ('open/2', 'open(${1:Port}, ${2:Opts}) $3'), ('close/1', 'close(${1:S}) $2')],
'kernel': [('start/2', 'start(${1:Param1}, ${2:Param2}) $3'), ('init/1', 'init(${1:Param1}) $2'), ('stop/1', 'stop(${1:Param1}) $2')],
'kernel_config': [('start_link/0', 'start_link() $1')],
'net': [('call/4', 'call(${1:N}, ${2:M}, ${3:F}, ${4:A}) $5'), ('cast/4', 'cast(${1:N}, ${2:M}, ${3:F}, ${4:A}) $5'), ('broadcast/3', 'broadcast(${1:M}, ${2:F}, ${3:A}) $4'), ('ping/1', 'ping(${1:Node}) $2'), ('relay/1', 'relay(${1:X}) $2'), ('sleep/1', 'sleep(${1:T}) $2')],
'net_adm': [('host_file/0', 'host_file() $1'), ('localhost/0', 'localhost() $1'), ('names/0', 'names() $1'), ('names/1', 'names(${1:Host}) $2'), ('ping_list/1', 'ping_list(${1:Nodelist}) $2'), ('world/0', 'world() $1'), ('world/1', 'world(${1:Arg}) $2'), ('world_list/1', 'world_list(${1:Hosts}) $2'), ('world_list/2', 'world_list(${1:Hosts}, ${2:Arg}) $3'), ('dns_hostname/1', 'dns_hostname(${1:Host}) $2'), ('ping/1', 'ping(${1:Node}) $2')],
'net_kernel': [('start/1', 'start(${1:Args}) $2'), ('start_link/1', 'start_link(${1:Param1}) $2'), ('stop/0', 'stop() $1'), ('kernel_apply/3', 'kernel_apply(${1:M}, ${2:F}, ${3:A}) $4'), ('monitor_nodes/1', 'monitor_nodes(${1:Flag}) $2'), ('monitor_nodes/2', 'monitor_nodes(${1:Flag}, ${2:Options}) $3'), ('longnames/0', 'longnames() $1'), ('allow/1', 'allow(${1:Nodes}) $2'), ('protocol_childspecs/0', 'protocol_childspecs() $1'), ('epmd_module/0', 'epmd_module() $1')],
'os': [('type/0', 'type() $1'), ('version/0', 'version() $1'), ('cmd/1', 'cmd(${1:Command}) $2'), ('find_executable/1', 'find_executable(${1:Name}) $2'), ('find_executable/2', 'find_executable(${1:Name}, ${2:Path}) $3')],
'packages': [('to_string/1', 'to_string(${1:Name}) $2'), ('concat/1', 'concat(${1:L}) $2'), ('concat/2', 'concat(${1:A}, ${2:B}) $3'), ('is_valid/1', 'is_valid(${1:Name}) $2'), ('is_segmented/1', 'is_segmented(${1:Name}) $2'), ('split/1', 'split(${1:Name}) $2'), ('last/1', 'last(${1:Name}) $2'), ('first/1', 'first(${1:Name}) $2'), ('strip_last/1', 'strip_last(${1:Name}) $2'), ('find_modules/1', 'find_modules(${1:P}) $2'), ('find_modules/2', 'find_modules(${1:P}, ${2:Paths}) $3')],
'pg2': [('create/1', 'create(${1:Name}) $2'), ('delete/1', 'delete(${1:Name}) $2'), ('join/2', 'join(${1:Name}, ${2:Param2}) $3'), ('leave/2', 'leave(${1:Name}, ${2:Param2}) $3')],
'ram_file': [('open/2', 'open(${1:Data}, ${2:Mode}) $3'), ('close/1', 'close(${1:Port}) $2')],
'rpc': [('start/0', 'start() $1'), ('start_link/0', 'start_link() $1'), ('stop/0', 'stop() $1'), ('call/4', 'call(${1:Mod}, ${2:Fun}, ${3:To}, ${4:S}) $5'), ('call/5', 'call(${1:Mod}, ${2:Args}, ${3:Args}, ${4:To}, ${5:S}) $6'), ('block_call/4', 'block_call(${1:Node}, ${2:Module}, ${3:Function}, ${4:Args}) $5'), ('block_call/5', 'block_call(${1:Node}, ${2:Module}, ${3:Function}, ${4:Args}, ${5:Timeout}) $6'), ('server_call/4', 'server_call(${1:Node}, ${2:Name}, ${3:ReplyWrapper}, ${4:Msg}) $5'), ('cast/4', 'cast(${1:Node}, ${2:Args}, ${3:Function}, ${4:S}) $5'), ('abcast/2', 'abcast(${1:Name}, ${2:Msg}) $3'), ('abcast/3', 'abcast(${1:Nodes}, ${2:Name}, ${3:Msg}) $4'), ('sbcast/2', 'sbcast(${1:Name}, ${2:Msg}) $3'), ('sbcast/3', 'sbcast(${1:Nodes}, ${2:Name}, ${3:Msg}) $4'), ('eval_everywhere/3', 'eval_everywhere(${1:Module}, ${2:Function}, ${3:Args}) $4'), ('eval_everywhere/4', 'eval_everywhere(${1:Nodes}, ${2:Module}, ${3:Function}, ${4:Args}) $5'), ('multi_server_call/2', 'multi_server_call(${1:Name}, ${2:Msg}) $3'), ('multi_server_call/3', 'multi_server_call(${1:Nodes}, ${2:Name}, ${3:Msg}) $4'), ('multicall/3', 'multicall(${1:Module}, ${2:Function}, ${3:Args}) $4'), ('multicall/4', 'multicall(${1:Nodes}, ${2:Module}, ${3:Function}, ${4:Args}) $5'), ('multicall/5', 'multicall(${1:Nodes}, ${2:Module}, ${3:Function}, ${4:Args}, ${5:Timeout}) $6'), ('async_call/4', 'async_call(${1:Node}, ${2:Module}, ${3:Function}, ${4:Args}) $5'), ('yield/1', 'yield(${1:Key}) $2'), ('nb_yield/2', 'nb_yield(${1:Key}, ${2:Timeout}) $3'), ('nb_yield/1', 'nb_yield(${1:Key}) $2'), ('parallel_eval/1', 'parallel_eval(${1:FuncCalls}) $2'), ('pmap/3', 'pmap(${1:FuncSpec}, ${2:ExtraArgs}, ${3:List1}) $4'), ('pinfo/1', 'pinfo(${1:Pid}) $2'), ('pinfo/2', 'pinfo(${1:Pid}, ${2:Item}) $3')],
'seq_trace': [('set_token/1', 'set_token(${1:Token}) $2'), ('set_token/2', 'set_token(${1:Component}, ${2:Val}) $3'), ('get_token/0', 'get_token() $1'), ('get_token/1', 'get_token(${1:Component}) $2'), ('print/1', 'print(${1:TraceInfo}) $2'), ('print/2', 'print(${1:Label}, ${2:TraceInfo}) $3'), ('reset_trace/0', 'reset_trace() $1'), ('set_system_tracer/1', 'set_system_tracer(${1:Tracer}) $2'), ('get_system_tracer/0', 'get_system_tracer() $1')],
'standard_error': [('start_link/0', 'start_link() $1'), ('init/1', 'init(${1:Param1}) $2'), ('terminate/2', 'terminate(${1:Param1}, ${2:Pid}) $3')],
'user': [('start/0', 'start() $1'), ('start/1', 'start(${1:Param1}) $2'), ('start_out/0', 'start_out() $1')],
'user_drv': [('start/0', 'start() $1'), ('start/1', 'start(${1:Pname}) $2'), ('start/2', 'start(${1:Pname}, ${2:Shell}) $3'), ('start/3', 'start(${1:Iname}, ${2:Oname}, ${3:Shell}) $4'), ('server/2', 'server(${1:Pid}, ${2:Shell}) $3'), ('server/3', 'server(${1:Iname}, ${2:Oname}, ${3:Shell}) $4')],
'user_sup': [('start/0', 'start() $1')],
'wrap_log_reader': [('open/1', 'open(${1:Filename}) $2'), ('open/2', 'open(${1:Filename}, ${2:N}) $3'), ('chunk/1', 'chunk(${1:Continuation}) $2'), ('chunk/2', 'chunk(${1:Continuation}, ${2:N}) $3'), ('close/1', 'close(${1:Continuation}) $2')],
'mnesia': [('start/0', 'start() $1'), ('start/1', 'start(${1:ExtraEnv}) $2'), ('stop/0', 'stop() $1'), ('set_debug_level/1', 'set_debug_level(${1:Level}) $2'), ('lkill/0', 'lkill() $1'), ('kill/0', 'kill() $1'), ('ms/0', 'ms() $1'), ('change_config/2', 'change_config(${1:BadKey}, ${2:Param2}) $3'), ('abort/1', 'abort(${1:Reason}) $2'), ('transaction/1', 'transaction(${1:Fun}) $2'), ('transaction/2', 'transaction(${1:Fun}, ${2:Args}) $3'), ('transaction/3', 'transaction(${1:Fun}, ${2:Args}, ${3:Retries}) $4'), ('sync_transaction/1', 'sync_transaction(${1:Fun}) $2'), ('sync_transaction/2', 'sync_transaction(${1:Fun}, ${2:Args}) $3'), ('sync_transaction/3', 'sync_transaction(${1:Fun}, ${2:Args}, ${3:Retries}) $4'), ('async_dirty/1', 'async_dirty(${1:Fun}) $2'), ('async_dirty/2', 'async_dirty(${1:Fun}, ${2:Args}) $3'), ('sync_dirty/1', 'sync_dirty(${1:Fun}) $2'), ('sync_dirty/2', 'sync_dirty(${1:Fun}, ${2:Args}) $3'), ('ets/1', 'ets(${1:Fun}) $2'), ('ets/2', 'ets(${1:Fun}, ${2:Args}) $3'), ('activity/2', 'activity(${1:Kind}, ${2:Fun}) $3'), ('activity/3', 'activity(${1:Kind}, ${2:Fun}, ${3:Mod}) $4'), ('activity/4', 'activity(${1:Kind}, ${2:Fun}, ${3:Args}, ${4:Mod}) $5'), ('is_transaction/0', 'is_transaction() $1'), ('lock/2', 'lock(${1:LockItem}, ${2:LockKind}) $3'), ('lock/4', 'lock(${1:Tid}, ${2:Ts}, ${3:LockItem}, ${4:LockKind}) $5'), ('lock_table/2', 'lock_table(${1:Tab}, ${2:LockKind}) $3'), ('read_lock_table/1', 'read_lock_table(${1:Tab}) $2'), ('write_lock_table/1', 'write_lock_table(${1:Tab}) $2'), ('write/1', 'write(${1:Val}) $2'), ('s_write/1', 's_write() $1'), ('write/3', 'write(${1:Tab}, ${2:Val}, ${3:LockKind}) $4'), ('write/5', 'write(${1:Param1}, ${2:Param2}, ${3:Tab}, ${4:Val}, ${5:LockKind}) $6'), ('delete/1', 'delete(${1:Oid}) $2'), ('s_delete/1', 's_delete(${1:Oid}) $2'), ('delete/3', 'delete(${1:Tab}, ${2:Key}, ${3:LockKind}) $4'), ('delete/5', 'delete(${1:Param1}, ${2:Param2}, ${3:Tab}, ${4:Param4}, ${5:Param5}) $6'), ('delete_object/1', 'delete_object(${1:Val}) $2'), ('s_delete_object/1', 's_delete_object(${1:Val}) $2'), ('delete_object/3', 'delete_object(${1:Tab}, ${2:Val}, ${3:LockKind}) $4'), ('delete_object/5', 'delete_object(${1:Tid}, ${2:Ts}, ${3:Tab}, ${4:Val}, ${5:LockKind}) $6'), ('read/1', 'read(${1:Oid}) $2'), ('read/2', 'read(${1:Tab}, ${2:Key}) $3'), ('wread/1', 'wread(${1:Oid}) $2'), ('read/3', 'read(${1:Tab}, ${2:Key}, ${3:LockKind}) $4'), ('read/5', 'read(${1:Param1}, ${2:Param2}, ${3:Tab}, ${4:Param4}, ${5:Param5}) $6'), ('match_object/1', 'match_object(${1:Pat}) $2'), ('match_object/3', 'match_object(${1:Tab}, ${2:Pat}, ${3:LockKind}) $4'), ('match_object/5', 'match_object(${1:Param1}, ${2:Param2}, ${3:Tab}, ${4:Pat}, ${5:Param5}) $6'), ('select/1', 'select(${1:Cont}) $2'), ('select/2', 'select(${1:Tab}, ${2:Pat}) $3'), ('select/3', 'select(${1:Tab}, ${2:Pat}, ${3:Param3}) $4'), ('select/4', 'select(${1:Tid}, ${2:Ts}, ${3:Tab}, ${4:Param4}) $5'), ('select/5', 'select(${1:Tid}, ${2:Ts}, ${3:Tab}, ${4:Spec}, ${5:LockKind}) $6'), ('select/6', 'select(${1:Tid}, ${2:Ts}, ${3:Tab}, ${4:Spec}, ${5:LockKind}, ${6:LockKind}) $7'), ('all_keys/1', 'all_keys(${1:Tab}) $2'), ('all_keys/4', 'all_keys(${1:Param1}, ${2:Param2}, ${3:Tab}, ${4:Param4}) $5'), ('index_match_object/2', 'index_match_object(${1:Pat}, ${2:Param2}) $3'), ('index_match_object/4', 'index_match_object(${1:Tab}, ${2:Pat}, ${3:Attr}, ${4:LockKind}) $5'), ('index_match_object/6', 'index_match_object(${1:Param1}, ${2:Param2}, ${3:Tab}, ${4:Pat}, ${5:Param5}, ${6:Param6}) $7'), ('index_read/3', 'index_read(${1:Tab}, ${2:Key}, ${3:Attr}) $4'), ('index_read/6', 'index_read(${1:Param1}, ${2:Param2}, ${3:Tab}, ${4:Param4}, ${5:Param5}, ${6:Param6}) $7'), ('first/1', 'first(${1:Tab}) $2'), ('next/2', 'next(${1:Tab}, ${2:Key}) $3'), ('last/1', 'last(${1:Tab}) $2'), ('prev/2', 'prev(${1:Tab}, ${2:Key}) $3'), ('first/3', 'first(${1:Param1}, ${2:Param2}, ${3:Tab}) $4'), ('next/4', 'next(${1:Param1}, ${2:Param2}, ${3:Tab}, ${4:Param4}) $5'), ('last/3', 'last(${1:Param1}, ${2:Param2}, ${3:Tab}) $4'), ('prev/4', 'prev(${1:Param1}, ${2:Param2}, ${3:Tab}, ${4:Param4}) $5'), ('foldl/3', 'foldl(${1:Fun}, ${2:Acc}, ${3:Tab}) $4'), ('foldl/4', 'foldl(${1:Fun}, ${2:Acc}, ${3:Tab}, ${4:Param4}) $5'), ('foldr/3', 'foldr(${1:Fun}, ${2:Acc}, ${3:Tab}) $4'), ('foldr/4', 'foldr(${1:Fun}, ${2:Acc}, ${3:Tab}, ${4:Param4}) $5'), ('dirty_write/1', 'dirty_write(${1:Val}) $2'), ('dirty_write/2', 'dirty_write(${1:Tab}, ${2:Val}) $3'), ('dirty_delete/1', 'dirty_delete(${1:Oid}) $2'), ('dirty_delete/2', 'dirty_delete(${1:Tab}, ${2:Key}) $3'), ('dirty_delete_object/1', 'dirty_delete_object(${1:Val}) $2'), ('dirty_delete_object/2', 'dirty_delete_object(${1:Tab}, ${2:Val}) $3'), ('dirty_update_counter/2', 'dirty_update_counter(${1:Counter}, ${2:Incr}) $3'), ('dirty_update_counter/3', 'dirty_update_counter(${1:Tab}, ${2:Key}, ${3:Incr}) $4'), ('dirty_read/1', 'dirty_read(${1:Oid}) $2'), ('dirty_read/2', 'dirty_read(${1:Tab}, ${2:Param2}) $3'), ('dirty_select/2', 'dirty_select(${1:Tab}, ${2:Spec}) $3'), ('dirty_match_object/1', 'dirty_match_object(${1:Pat}) $2'), ('dirty_match_object/2', 'dirty_match_object(${1:Tab}, ${2:Pat}) $3'), ('dirty_all_keys/1', 'dirty_all_keys(${1:Tab}) $2'), ('dirty_index_match_object/2', 'dirty_index_match_object(${1:Pat}, ${2:Param2}) $3'), ('dirty_index_match_object/3', 'dirty_index_match_object(${1:Tab}, ${2:Pat}, ${3:Param3}) $4'), ('dirty_index_read/3', 'dirty_index_read(${1:Tab}, ${2:Param2}, ${3:Param3}) $4'), ('dirty_slot/2', 'dirty_slot(${1:Tab}, ${2:Slot}) $3'), ('dirty_first/1', 'dirty_first(${1:Tab}) $2'), ('dirty_next/2', 'dirty_next(${1:Tab}, ${2:Param2}) $3'), ('dirty_last/1', 'dirty_last(${1:Tab}) $2'), ('dirty_prev/2', 'dirty_prev(${1:Tab}, ${2:Param2}) $3'), ('table_info/2', 'table_info(${1:Tab}, ${2:Item}) $3'), ('table_info/4', 'table_info(${1:Param1}, ${2:Param2}, ${3:Tab}, ${4:Item}) $5'), ('schema/0', 'schema() $1'), ('schema/1', 'schema(${1:Tab}) $2'), ('error_description/1', 'error_description(${1:Err}) $2'), ('info/0', 'info() $1'), ('system_info/1', 'system_info(${1:Item}) $2'), ('system_info/0', 'system_info() $1'), ('create_schema/1', 'create_schema(${1:Ns}) $2'), ('delete_schema/1', 'delete_schema(${1:Ns}) $2'), ('backup/1', 'backup(${1:Opaque}) $2'), ('backup/2', 'backup(${1:Opaque}, ${2:Mod}) $3'), ('traverse_backup/4', 'traverse_backup(${1:S}, ${2:T}, ${3:Fun}, ${4:Acc}) $5'), ('traverse_backup/6', 'traverse_backup(${1:S}, ${2:SM}, ${3:T}, ${4:TM}, ${5:F}, ${6:A}) $7'), ('install_fallback/1', 'install_fallback(${1:Opaque}) $2'), ('install_fallback/2', 'install_fallback(${1:Opaque}, ${2:Mod}) $3'), ('uninstall_fallback/0', 'uninstall_fallback() $1'), ('uninstall_fallback/1', 'uninstall_fallback(${1:Args}) $2'), ('activate_checkpoint/1', 'activate_checkpoint(${1:Args}) $2'), ('deactivate_checkpoint/1', 'deactivate_checkpoint(${1:Name}) $2'), ('backup_checkpoint/2', 'backup_checkpoint(${1:Name}, ${2:Opaque}) $3'), ('backup_checkpoint/3', 'backup_checkpoint(${1:Name}, ${2:Opaque}, ${3:Mod}) $4'), ('restore/2', 'restore(${1:Opaque}, ${2:Args}) $3'), ('create_table/1', 'create_table(${1:Arg}) $2'), ('create_table/2', 'create_table(${1:Name}, ${2:Arg}) $3'), ('delete_table/1', 'delete_table(${1:Tab}) $2'), ('add_table_copy/3', 'add_table_copy(${1:Tab}, ${2:N}, ${3:S}) $4'), ('del_table_copy/2', 'del_table_copy(${1:Tab}, ${2:N}) $3'), ('move_table_copy/3', 'move_table_copy(${1:Tab}, ${2:From}, ${3:To}) $4'), ('add_table_index/2', 'add_table_index(${1:Tab}, ${2:Ix}) $3'), ('del_table_index/2', 'del_table_index(${1:Tab}, ${2:Ix}) $3'), ('transform_table/3', 'transform_table(${1:Tab}, ${2:Fun}, ${3:NewA}) $4'), ('transform_table/4', 'transform_table(${1:Tab}, ${2:Fun}, ${3:NewA}, ${4:NewRN}) $5'), ('change_table_copy_type/3', 'change_table_copy_type(${1:T}, ${2:N}, ${3:S}) $4'), ('change_table_majority/2', 'change_table_majority(${1:T}, ${2:M}) $3'), ('read_table_property/2', 'read_table_property(${1:Tab}, ${2:PropKey}) $3'), ('write_table_property/2', 'write_table_property(${1:Tab}, ${2:Prop}) $3'), ('delete_table_property/2', 'delete_table_property(${1:Tab}, ${2:PropKey}) $3'), ('change_table_frag/2', 'change_table_frag(${1:Tab}, ${2:FragProp}) $3'), ('clear_table/1', 'clear_table(${1:Tab}) $2'), ('clear_table/4', 'clear_table() $1'), ('dump_tables/1', 'dump_tables(${1:Tabs}) $2'), ('wait_for_tables/2', 'wait_for_tables(${1:Tabs}, ${2:Timeout}) $3'), ('force_load_table/1', 'force_load_table(${1:Tab}) $2'), ('change_table_access_mode/2', 'change_table_access_mode(${1:T}, ${2:Access}) $3'), ('change_table_load_order/2', 'change_table_load_order(${1:T}, ${2:O}) $3'), ('set_master_nodes/1', 'set_master_nodes(${1:Nodes}) $2'), ('set_master_nodes/2', 'set_master_nodes(${1:Tab}, ${2:Nodes}) $3'), ('dump_log/0', 'dump_log() $1'), ('subscribe/1', 'subscribe(${1:What}) $2'), ('unsubscribe/1', 'unsubscribe(${1:What}) $2'), ('report_event/1', 'report_event(${1:Event}) $2'), ('snmp_open_table/2', 'snmp_open_table(${1:Tab}, ${2:Us}) $3'), ('snmp_close_table/1', 'snmp_close_table(${1:Tab}) $2'), ('snmp_get_row/2', 'snmp_get_row(${1:Tab}, ${2:Param2}) $3'), ('snmp_get_next_index/2', 'snmp_get_next_index(${1:Tab}, ${2:Param2}) $3'), ('snmp_get_mnesia_key/2', 'snmp_get_mnesia_key(${1:Tab}, ${2:Param2}) $3'), ('load_textfile/1', 'load_textfile(${1:F}) $2'), ('dump_to_textfile/1', 'dump_to_textfile(${1:F}) $2'), ('table/1', 'table(${1:Tab}) $2'), ('table/2', 'table(${1:Tab}, ${2:LockKind}) $3'), ('get_activity_id/0', 'get_activity_id() $1'), ('put_activity_id/1', 'put_activity_id(${1:Activity}) $2'), ('dirty_rpc/4', 'dirty_rpc(${1:Tab}, ${2:M}, ${3:F}, ${4:Args}) $5'), ('has_var/1', 'has_var(${1:Param1}) $2'), ('fun_select/7', 'fun_select(${1:Tid}, ${2:Ts}, ${3:Tab}, ${4:Spec}, ${5:LockKind}, ${6:TabPat}, ${7:SelectFun}) $8'), ('fun_select/10', 'fun_select(${1:Tid}, ${2:Ts}, ${3:Tab}, ${4:Spec}, ${5:LockKind}, ${6:TabPat}, ${7:Init}, ${8:NObjects}, ${9:Node}, ${10:Storage}) $11'), ('select_cont/3', 'select_cont(${1:Tid}, ${2:Param2}, ${3:Cont}) $4'), ('dirty_sel_init/5', 'dirty_sel_init(${1:Node}, ${2:Tab}, ${3:Spec}, ${4:NObjects}, ${5:Type}) $6'), ('foldl/6', 'foldl(${1:ActivityId}, ${2:Opaque}, ${3:Fun}, ${4:Acc}, ${5:Tab}, ${6:LockKind}) $7'), ('foldr/6', 'foldr(${1:ActivityId}, ${2:Opaque}, ${3:Fun}, ${4:Acc}, ${5:Tab}, ${6:LockKind}) $7'), ('raw_table_info/2', 'raw_table_info(${1:Tab}, ${2:Item}) $3'), ('remote_dirty_match_object/2', 'remote_dirty_match_object(${1:Tab}, ${2:Pat}) $3'), ('remote_dirty_select/2', 'remote_dirty_select(${1:Tab}, ${2:Spec}) $3')],
'mnesia_backup': [('open_write/1', 'open_write(${1:OpaqueData}) $2'), ('write/2', 'write(${1:OpaqueData}, ${2:BackupItems}) $3'), ('commit_write/1', 'commit_write(${1:OpaqueData}) $2'), ('abort_write/1', 'abort_write(${1:BackupRef}) $2'), ('open_read/1', 'open_read(${1:OpaqueData}) $2'), ('read/1', 'read(${1:OpaqueData}) $2'), ('close_read/1', 'close_read(${1:OpaqueData}) $2')],
'mnesia_bup': [('iterate/4', 'iterate(${1:Mod}, ${2:Fun}, ${3:Opaque}, ${4:Acc}) $5'), ('read_schema/2', 'read_schema(${1:Mod}, ${2:Opaque}) $3'), ('fallback_bup/0', 'fallback_bup() $1'), ('fallback_exists/0', 'fallback_exists() $1'), ('tm_fallback_start/1', 'tm_fallback_start(${1:IgnoreFallback}) $2'), ('create_schema/1', 'create_schema(${1:Ns}) $2'), ('install_fallback/1', 'install_fallback(${1:Opaque}) $2'), ('install_fallback/2', 'install_fallback(${1:Opaque}, ${2:Args}) $3'), ('uninstall_fallback/0', 'uninstall_fallback() $1'), ('uninstall_fallback/1', 'uninstall_fallback(${1:Args}) $2'), ('traverse_backup/4', 'traverse_backup(${1:Source}, ${2:Target}, ${3:Fun}, ${4:Acc}) $5'), ('traverse_backup/6', 'traverse_backup(${1:Source}, ${2:SourceMod}, ${3:Target}, ${4:TargetMod}, ${5:Fun}, ${6:Acc}) $7'), ('make_initial_backup/3', 'make_initial_backup(${1:Ns}, ${2:Opaque}, ${3:Mod}) $4'), ('fallback_to_schema/0', 'fallback_to_schema() $1'), ('lookup_schema/2', 'lookup_schema(${1:Key}, ${2:Schema}) $3'), ('schema2bup/1', 'schema2bup(${1:Param1}) $2'), ('refresh_cookie/2', 'refresh_cookie(${1:Schema}, ${2:NewCookie}) $3'), ('fallback_receiver/2', 'fallback_receiver(${1:Master}, ${2:FA}) $3'), ('install_fallback_master/2', 'install_fallback_master(${1:ClientPid}, ${2:FA}) $3'), ('uninstall_fallback_master/2', 'uninstall_fallback_master(${1:ClientPid}, ${2:FA}) $3'), ('local_uninstall_fallback/2', 'local_uninstall_fallback(${1:Master}, ${2:FA}) $3'), ('do_traverse_backup/7', 'do_traverse_backup(${1:ClientPid}, ${2:Source}, ${3:SourceMod}, ${4:Target}, ${5:TargetMod}, ${6:Fun}, ${7:Acc}) $8'), ('trav_apply/4', 'trav_apply(${1:Recs}, ${2:Header}, ${3:Schema}, ${4:Param4}) $5')],
'mnesia_checkpoint': [('tm_add_copy/2', 'tm_add_copy(${1:Tab}, ${2:Param2}) $3'), ('tm_change_table_copy_type/3', 'tm_change_table_copy_type(${1:Tab}, ${2:From}, ${3:To}) $4'), ('tm_del_copy/2', 'tm_del_copy(${1:Tab}, ${2:Param2}) $3'), ('tm_mnesia_down/1', 'tm_mnesia_down(${1:Node}) $2'), ('tm_prepare/1', 'tm_prepare(${1:Param1}) $2'), ('tm_retain/4', 'tm_retain(${1:Tid}, ${2:Tab}, ${3:Key}, ${4:Op}) $5'), ('tm_retain/5', 'tm_retain(${1:Tid}, ${2:Tab}, ${3:Key}, ${4:Op}, ${5:Checkpoints}) $6'), ('tm_enter_pending/1', 'tm_enter_pending(${1:Pending}) $2'), ('tm_enter_pending/3', 'tm_enter_pending(${1:Tid}, ${2:DiscNs}, ${3:RamNs}) $4'), ('tm_exit_pending/1', 'tm_exit_pending(${1:Tid}) $2'), ('convert_cp_record/1', 'convert_cp_record(${1:Param1}) $2')],
'mnesia_checkpoint_sup': [('start/0', 'start() $1'), ('init/1', 'init(${1:Param1}) $2')],
'mnesia_controller': [('start/0', 'start() $1'), ('i_have_tab/1', 'i_have_tab(${1:Tab}) $2'), ('info/0', 'info() $1'), ('get_info/1', 'get_info(${1:Timeout}) $2'), ('get_workers/1', 'get_workers(${1:Timeout}) $2'), ('force_load_table/1', 'force_load_table(${1:Tab}) $2'), ('async_dump_log/1', 'async_dump_log(${1:InitBy}) $2'), ('sync_dump_log/1', 'sync_dump_log(${1:InitBy}) $2'), ('connect_nodes/1', 'connect_nodes(${1:Ns}) $2'), ('connect_nodes/2', 'connect_nodes(${1:Ns}, ${2:UserFun}) $3'), ('wait_for_schema_commit_lock/0', 'wait_for_schema_commit_lock() $1'), ('release_schema_commit_lock/0', 'release_schema_commit_lock() $1'), ('create_table/1', 'create_table(${1:Tab}) $2'), ('get_disc_copy/1', 'get_disc_copy(${1:Tab}) $2'), ('get_remote_cstructs/0', 'get_remote_cstructs() $1'), ('get_cstructs/0', 'get_cstructs() $1'), ('sync_and_block_table_whereabouts/4', 'sync_and_block_table_whereabouts() $1'), ('sync_del_table_copy_whereabouts/2', 'sync_del_table_copy_whereabouts() $1'), ('block_table/1', 'block_table(${1:Tab}) $2'), ('unblock_table/1', 'unblock_table(${1:Tab}) $2'), ('block_controller/0', 'block_controller() $1'), ('unblock_controller/0', 'unblock_controller() $1'), ('unannounce_add_table_copy/2', 'unannounce_add_table_copy(${1:Tab}, ${2:To}) $3'), ('master_nodes_updated/2', 'master_nodes_updated(${1:Tab}, ${2:Masters}) $3'), ('mnesia_down/1', 'mnesia_down(${1:Node}) $2'), ('add_active_replica/2', 'add_active_replica(${1:Tab}, ${2:Node}) $3'), ('add_active_replica/3', 'add_active_replica(${1:Tab}, ${2:Node}, ${3:Param3}) $4'), ('add_active_replica/4', 'add_active_replica(${1:Tab}, ${2:Node}, ${3:Storage}, ${4:AccessMode}) $5'), ('update/1', 'update(${1:Fun}) $2'), ('change_table_access_mode/1', 'change_table_access_mode(${1:Cs}) $2'), ('change_table_majority/1', 'change_table_majority(${1:Cs}) $2'), ('del_active_replica/2', 'del_active_replica(${1:Tab}, ${2:Node}) $3'), ('wait_for_tables/2', 'wait_for_tables(${1:Tabs}, ${2:Timeout}) $3'), ('get_network_copy/2', 'get_network_copy(${1:Tab}, ${2:Cs}) $3'), ('merge_schema/0', 'merge_schema() $1'), ('start_remote_sender/4', 'start_remote_sender(${1:Node}, ${2:Tab}, ${3:Receiver}, ${4:Storage}) $5'), ('schedule_late_disc_load/2', 'schedule_late_disc_load(${1:Tabs}, ${2:Reason}) $3')],
'mnesia_dumper': [('get_log_writes/0', 'get_log_writes() $1'), ('incr_log_writes/0', 'incr_log_writes() $1'), ('raw_dump_table/2', 'raw_dump_table(${1:DetsRef}, ${2:EtsRef}) $3'), ('raw_named_dump_table/2', 'raw_named_dump_table(${1:Tab}, ${2:Ftype}) $3'), ('start_regulator/0', 'start_regulator() $1'), ('opt_dump_log/1', 'opt_dump_log(${1:InitBy}) $2'), ('update/3', 'update(${1:Tid}, ${2:SchemaOps}, ${3:DumperMode}) $4')],
'mnesia_event': [('init/1', 'init(${1:Args}) $2'), ('handle_event/2', 'handle_event(${1:Event}, ${2:State}) $3'), ('handle_call/2', 'handle_call(${1:Event}, ${2:State}) $3'), ('handle_info/2', 'handle_info(${1:Msg}, ${2:State}) $3'), ('terminate/2', 'terminate(${1:Reason}, ${2:State}) $3'), ('code_change/3', 'code_change(${1:Param1}, ${2:State}, ${3:Param3}) $4')],
'mnesia_frag': [('lock/4', 'lock(${1:ActivityId}, ${2:Opaque}, ${3:LockItem}, ${4:LockKind}) $5'), ('write/5', 'write(${1:ActivityId}, ${2:Opaque}, ${3:Tab}, ${4:Rec}, ${5:LockKind}) $6'), ('delete/5', 'delete(${1:ActivityId}, ${2:Opaque}, ${3:Tab}, ${4:Key}, ${5:LockKind}) $6'), ('delete_object/5', 'delete_object(${1:ActivityId}, ${2:Opaque}, ${3:Tab}, ${4:Rec}, ${5:LockKind}) $6'), ('read/5', 'read(${1:ActivityId}, ${2:Opaque}, ${3:Tab}, ${4:Key}, ${5:LockKind}) $6'), ('match_object/5', 'match_object(${1:ActivityId}, ${2:Opaque}, ${3:Tab}, ${4:HeadPat}, ${5:LockKind}) $6'), ('all_keys/4', 'all_keys(${1:ActivityId}, ${2:Opaque}, ${3:Tab}, ${4:LockKind}) $5'), ('select/5', 'select(${1:ActivityId}, ${2:Opaque}, ${3:Tab}, ${4:MatchSpec}, ${5:LockKind}) $6'), ('select/6', 'select(${1:ActivityId}, ${2:Opaque}, ${3:Tab}, ${4:MatchSpec}, ${5:Limit}, ${6:LockKind}) $7'), ('select_cont/3', 'select_cont(${1:Tid}, ${2:Ts}, ${3:Else}) $4'), ('index_match_object/6', 'index_match_object(${1:ActivityId}, ${2:Opaque}, ${3:Tab}, ${4:Pat}, ${5:Attr}, ${6:LockKind}) $7'), ('index_read/6', 'index_read(${1:ActivityId}, ${2:Opaque}, ${3:Tab}, ${4:Key}, ${5:Attr}, ${6:LockKind}) $7'), ('foldl/6', 'foldl(${1:ActivityId}, ${2:Opaque}, ${3:Fun}, ${4:Acc}, ${5:Tab}, ${6:LockKind}) $7'), ('foldr/6', 'foldr(${1:ActivityId}, ${2:Opaque}, ${3:Fun}, ${4:Acc}, ${5:Tab}, ${6:LockKind}) $7'), ('table_info/4', 'table_info(${1:ActivityId}, ${2:Opaque}, ${3:Tab}, ${4:Item}) $5'), ('first/3', 'first(${1:ActivityId}, ${2:Opaque}, ${3:Tab}) $4'), ('next/4', 'next(${1:ActivityId}, ${2:Opaque}, ${3:Tab}, ${4:Key}) $5'), ('prev/4', 'prev(${1:ActivityId}, ${2:Opaque}, ${3:Tab}, ${4:Key}) $5'), ('last/3', 'last(${1:ActivityId}, ${2:Opaque}, ${3:Tab}) $4'), ('clear_table/4', 'clear_table(${1:ActivityId}, ${2:Opaque}, ${3:Tab}, ${4:Obj}) $5')],
'mnesia_frag_hash': [('init_state/2', 'init_state() $1'), ('add_frag/1', 'add_frag(${1:OldState}) $2'), ('del_frag/1', 'del_frag(${1:OldState}) $2'), ('key_to_frag_number/2', 'key_to_frag_number(${1:OldState}, ${2:Key}) $3'), ('match_spec_to_frag_numbers/2', 'match_spec_to_frag_numbers(${1:OldState}, ${2:MatchSpec}) $3')],
'mnesia_frag_old_hash': [('init_state/2', 'init_state(${1:Param1}, ${2:Param2}) $3'), ('add_frag/1', 'add_frag(${1:Param1}) $2'), ('del_frag/1', 'del_frag(${1:Param1}) $2'), ('key_to_frag_number/2', 'key_to_frag_number(${1:State}, ${2:Param2}) $3'), ('match_spec_to_frag_numbers/2', 'match_spec_to_frag_numbers(${1:State}, ${2:Param2}) $3')],
'mnesia_index': [('read/5', 'read(${1:Tid}, ${2:Store}, ${3:Tab}, ${4:IxKey}, ${5:Pos}) $6'), ('add_index/5', 'add_index(${1:Index}, ${2:Tab}, ${3:Key}, ${4:Obj}, ${5:Old}) $6'), ('delete_index/3', 'delete_index(${1:Index}, ${2:Tab}, ${3:K}) $4'), ('del_object_index/5', 'del_object_index(${1:Index}, ${2:Tab}, ${3:K}, ${4:Obj}, ${5:Old}) $6'), ('clear_index/4', 'clear_index(${1:Index}, ${2:Tab}, ${3:K}, ${4:Obj}) $5'), ('dirty_match_object/3', 'dirty_match_object(${1:Tab}, ${2:Pat}, ${3:Pos}) $4'), ('dirty_select/3', 'dirty_select(${1:Tab}, ${2:Spec}, ${3:Pos}) $4'), ('dirty_read/3', 'dirty_read(${1:Tab}, ${2:IxKey}, ${3:Pos}) $4'), ('dirty_read2/3', 'dirty_read2(${1:Tab}, ${2:IxKey}, ${3:Pos}) $4'), ('db_put/2', 'db_put(${1:Param1}, ${2:V}) $3'), ('db_get/2', 'db_get(${1:Param1}, ${2:K}) $3'), ('db_match_erase/2', 'db_match_erase(${1:Param1}, ${2:Pat}) $3'), ('get_index_table/2', 'get_index_table(${1:Tab}, ${2:Pos}) $3'), ('get_index_table/3', 'get_index_table(${1:Tab}, ${2:Param2}, ${3:Pos}) $4'), ('tab2filename/2', 'tab2filename(${1:Tab}, ${2:Pos}) $3'), ('tab2tmp_filename/2', 'tab2tmp_filename(${1:Tab}, ${2:Pos}) $3'), ('init_index/2', 'init_index(${1:Tab}, ${2:Storage}) $3'), ('init_indecies/3', 'init_indecies(${1:Tab}, ${2:Storage}, ${3:PosList}) $4'), ('del_transient/2', 'del_transient(${1:Tab}, ${2:Storage}) $3'), ('del_transient/3', 'del_transient(${1:Tab}, ${2:Param2}, ${3:Storage}) $4'), ('del_index_table/3', 'del_index_table(${1:Tab}, ${2:Storage}, ${3:Pos}) $4')],
'mnesia_kernel_sup': [('start/0', 'start() $1'), ('init/1', 'init(${1:Param1}) $2'), ('supervisor_timeout/1', 'supervisor_timeout(${1:KillAfter}) $2')],
'mnesia_late_loader': [('async_late_disc_load/3', 'async_late_disc_load(${1:Node}, ${2:Tabs}, ${3:Reason}) $4'), ('maybe_async_late_disc_load/3', 'maybe_async_late_disc_load(${1:Node}, ${2:Tabs}, ${3:Reason}) $4'), ('init/1', 'init(${1:Parent}) $2'), ('start/0', 'start() $1')],
'mnesia_lib': [('core_file/0', 'core_file() $1')],
'mnesia_loader': [('disc_load_table/2', 'disc_load_table(${1:Tab}, ${2:Reason}) $3'), ('net_load_table/4', 'net_load_table(${1:Tab}, ${2:Reason}, ${3:Ns}, ${4:Cs}) $5'), ('send_table/3', 'send_table(${1:Pid}, ${2:Tab}, ${3:RemoteS}) $4')],
'mnesia_locker': [('get_held_locks/0', 'get_held_locks() $1'), ('get_lock_queue/0', 'get_lock_queue() $1'), ('global_lock/5', 'global_lock(${1:Tid}, ${2:Store}, ${3:Item}, ${4:Param4}, ${5:Ns}) $6'), ('ixrlock/5', 'ixrlock(${1:Tid}, ${2:Store}, ${3:Tab}, ${4:IxKey}, ${5:Pos}) $6'), ('init/1', 'init(${1:Parent}) $2'), ('mnesia_down/2', 'mnesia_down(${1:N}, ${2:Pending}) $3'), ('release_tid/1', 'release_tid(${1:Tid}) $2'), ('async_release_tid/2', 'async_release_tid(${1:Nodes}, ${2:Tid}) $3'), ('send_release_tid/2', 'send_release_tid(${1:Nodes}, ${2:Tid}) $3'), ('receive_release_tid_acc/2', 'receive_release_tid_acc(${1:Param1}, ${2:Tid}) $3'), ('rlock/3', 'rlock(${1:Tid}, ${2:Store}, ${3:Oid}) $4'), ('rlock_table/3', 'rlock_table(${1:Tid}, ${2:Store}, ${3:Tab}) $4'), ('rwlock/3', 'rwlock(${1:Tid}, ${2:Store}, ${3:Oid}) $4'), ('sticky_rwlock/3', 'sticky_rwlock(${1:Tid}, ${2:Store}, ${3:Oid}) $4'), ('start/0', 'start() $1'), ('sticky_wlock/3', 'sticky_wlock(${1:Tid}, ${2:Store}, ${3:Oid}) $4'), ('sticky_wlock_table/3', 'sticky_wlock_table(${1:Tid}, ${2:Store}, ${3:Tab}) $4'), ('wlock/3', 'wlock(${1:Tid}, ${2:Store}, ${3:Oid}) $4'), ('wlock_no_exist/4', 'wlock_no_exist(${1:Tid}, ${2:Store}, ${3:Tab}, ${4:Ns}) $5'), ('wlock_table/3', 'wlock_table(${1:Tid}, ${2:Store}, ${3:Tab}) $4'), ('load_lock_table/3', 'load_lock_table(${1:Tid}, ${2:Store}, ${3:Tab}) $4')],
'mnesia_log': [('append/2', 'append(${1:Log}, ${2:Term}) $3'), ('backup/1', 'backup(${1:Opaque}) $2'), ('backup/2', 'backup(${1:Opaque}, ${2:Param2}) $3'), ('backup_checkpoint/2', 'backup_checkpoint(${1:Name}, ${2:Opaque}) $3'), ('backup_checkpoint/3', 'backup_checkpoint(${1:Name}, ${2:Opaque}, ${3:Param3}) $4'), ('backup_log_header/0', 'backup_log_header() $1'), ('backup_master/2', 'backup_master(${1:ClientPid}, ${2:B}) $3'), ('chunk_decision_log/1', 'chunk_decision_log(${1:Cont}) $2'), ('chunk_decision_tab/1', 'chunk_decision_tab(${1:Cont}) $2'), ('chunk_log/1', 'chunk_log(${1:Cont}) $2'), ('chunk_log/2', 'chunk_log(${1:Log}, ${2:Cont}) $3'), ('close_decision_log/0', 'close_decision_log() $1'), ('close_decision_tab/0', 'close_decision_tab() $1'), ('close_log/1', 'close_log(${1:Log}) $2'), ('unsafe_close_log/1', 'unsafe_close_log(${1:Log}) $2'), ('confirm_log_dump/1', 'confirm_log_dump(${1:Updates}) $2'), ('confirm_decision_log_dump/0', 'confirm_decision_log_dump() $1'), ('previous_log_file/0', 'previous_log_file() $1'), ('previous_decision_log_file/0', 'previous_decision_log_file() $1'), ('latest_log_file/0', 'latest_log_file() $1'), ('decision_log_version/0', 'decision_log_version() $1'), ('decision_log_file/0', 'decision_log_file() $1'), ('decision_tab_file/0', 'decision_tab_file() $1'), ('decision_tab_version/0', 'decision_tab_version() $1'), ('dcl_version/0', 'dcl_version() $1'), ('dcd_version/0', 'dcd_version() $1'), ('ets2dcd/1', 'ets2dcd(${1:Tab}) $2'), ('ets2dcd/2', 'ets2dcd(${1:Tab}, ${2:Ftype}) $3'), ('dcd2ets/1', 'dcd2ets(${1:Tab}) $2'), ('dcd2ets/2', 'dcd2ets(${1:Tab}, ${2:Rep}) $3'), ('init/0', 'init() $1'), ('init_log_dump/0', 'init_log_dump() $1'), ('log/1', 'log(${1:C}) $2'), ('slog/1', 'slog(${1:C}) $2'), ('log_decision/1', 'log_decision(${1:Decision}) $2'), ('log_files/0', 'log_files() $1'), ('open_decision_log/0', 'open_decision_log() $1'), ('trans_log_header/0', 'trans_log_header() $1'), ('open_decision_tab/0', 'open_decision_tab() $1'), ('dcl_log_header/0', 'dcl_log_header() $1'), ('dcd_log_header/0', 'dcd_log_header() $1'), ('open_log/4', 'open_log(${1:Name}, ${2:Header}, ${3:Fname}, ${4:Exists}) $5'), ('open_log/6', 'open_log(${1:Name}, ${2:Header}, ${3:Fname}, ${4:Exists}, ${5:Repair}, ${6:Mode}) $7'), ('prepare_decision_log_dump/0', 'prepare_decision_log_dump() $1'), ('prepare_log_dump/1', 'prepare_log_dump(${1:InitBy}) $2'), ('save_decision_tab/1', 'save_decision_tab(${1:Decisions}) $2'), ('purge_all_logs/0', 'purge_all_logs() $1'), ('purge_some_logs/0', 'purge_some_logs() $1'), ('stop/0', 'stop() $1'), ('tab_copier/3', 'tab_copier(${1:Pid}, ${2:B}, ${3:Param3}) $4'), ('version/0', 'version() $1'), ('view/0', 'view() $1'), ('view/1', 'view(${1:File}) $2'), ('write_trans_log_header/0', 'write_trans_log_header() $1')],
'mnesia_monitor': [('close_dets/1', 'close_dets(${1:Tab}) $2'), ('close_log/1', 'close_log(${1:Name}) $2'), ('detect_inconcistency/2', 'detect_inconcistency(${1:Nodes}, ${2:Context}) $3'), ('get_env/1', 'get_env(${1:E}) $2'), ('init/0', 'init() $1'), ('mktab/2', 'mktab(${1:Tab}, ${2:Args}) $3'), ('unsafe_mktab/2', 'unsafe_mktab(${1:Tab}, ${2:Args}) $3'), ('mnesia_down/2', 'mnesia_down(${1:From}, ${2:Node}) $3'), ('needs_protocol_conversion/1', 'needs_protocol_conversion(${1:Node}) $2'), ('negotiate_protocol/1', 'negotiate_protocol(${1:Nodes}) $2'), ('disconnect/1', 'disconnect(${1:Node}) $2'), ('open_dets/2', 'open_dets(${1:Tab}, ${2:Args}) $3'), ('unsafe_open_dets/2', 'unsafe_open_dets(${1:Tab}, ${2:Args}) $3'), ('open_log/1', 'open_log(${1:Args}) $2'), ('patch_env/2', 'patch_env(${1:Env}, ${2:Val}) $3'), ('protocol_version/0', 'protocol_version() $1'), ('reopen_log/3', 'reopen_log(${1:Name}, ${2:Fname}, ${3:Head}) $4'), ('set_env/2', 'set_env(${1:E}, ${2:Val}) $3'), ('start/0', 'start() $1'), ('start_proc/4', 'start_proc(${1:Who}, ${2:Mod}, ${3:Fun}, ${4:Args}) $5'), ('terminate_proc/3', 'terminate_proc(${1:Who}, ${2:Reason}, ${3:Param3}) $4'), ('unsafe_close_dets/1', 'unsafe_close_dets(${1:Name}) $2'), ('unsafe_close_log/1', 'unsafe_close_log(${1:Name}) $2'), ('use_dir/0', 'use_dir() $1'), ('do_check_type/2', 'do_check_type(${1:Param1}, ${2:B}) $3')],
'mnesia_recover': [('allow_garb/0', 'allow_garb() $1'), ('call/1', 'call(${1:Msg}) $2'), ('connect_nodes/1', 'connect_nodes(${1:Ns}) $2'), ('disconnect/1', 'disconnect(${1:Node}) $2'), ('dump_decision_tab/0', 'dump_decision_tab() $1'), ('get_master_node_info/0', 'get_master_node_info() $1'), ('get_master_node_tables/0', 'get_master_node_tables() $1'), ('get_master_nodes/1', 'get_master_nodes(${1:Tab}) $2'), ('get_mnesia_downs/0', 'get_mnesia_downs() $1'), ('has_mnesia_down/1', 'has_mnesia_down(${1:Node}) $2'), ('incr_trans_tid_serial/0', 'incr_trans_tid_serial() $1'), ('init/0', 'init() $1'), ('log_decision/1', 'log_decision(${1:D}) $2'), ('log_dump_overload/1', 'log_dump_overload(${1:Param1}) $2'), ('log_master_nodes/3', 'log_master_nodes(${1:Args}, ${2:UseDir}, ${3:IsRunning}) $4'), ('log_mnesia_down/1', 'log_mnesia_down(${1:Node}) $2'), ('log_mnesia_up/1', 'log_mnesia_up(${1:Node}) $2'), ('mnesia_down/1', 'mnesia_down(${1:Node}) $2'), ('note_decision/2', 'note_decision(${1:Tid}, ${2:Outcome}) $3'), ('note_log_decision/2', 'note_log_decision(${1:NewD}, ${2:InitBy}) $3'), ('outcome/2', 'outcome(${1:Tid}, ${2:Default}) $3'), ('start/0', 'start() $1'), ('start_garb/0', 'start_garb() $1'), ('still_pending/1', 'still_pending(${1:Param1}) $2'), ('sync_trans_tid_serial/1', 'sync_trans_tid_serial(${1:Tid}) $2'), ('sync/0', 'sync() $1'), ('wait_for_decision/2', 'wait_for_decision(${1:D}, ${2:Param2}) $3'), ('what_happened/3', 'what_happened(${1:Tid}, ${2:Protocol}, ${3:Nodes}) $4')],
'mnesia_registry': [('start_dump/2', 'start_dump(${1:Tab}, ${2:LinkTo}) $3'), ('start_restore/2', 'start_restore(${1:Tab}, ${2:LinkTo}) $3')],
'mnesia_schema': [('add_snmp/2', 'add_snmp(${1:Tab}, ${2:Ustruct}) $3'), ('add_table_copy/3', 'add_table_copy(${1:Tab}, ${2:Node}, ${3:Storage}) $4'), ('add_table_index/2', 'add_table_index(${1:Tab}, ${2:Pos}) $3'), ('arrange_restore/3', 'arrange_restore(${1:R}, ${2:Fun}, ${3:Recs}) $4'), ('attr_tab_to_pos/2', 'attr_tab_to_pos(${1:Tab}, ${2:Attr}) $3'), ('attr_to_pos/2', 'attr_to_pos(${1:Pos}, ${2:Param2}) $3'), ('change_table_copy_type/3', 'change_table_copy_type(${1:Tab}, ${2:Node}, ${3:ToS}) $4'), ('change_table_access_mode/2', 'change_table_access_mode(${1:Tab}, ${2:Mode}) $3'), ('change_table_load_order/2', 'change_table_load_order(${1:Tab}, ${2:LoadOrder}) $3'), ('change_table_majority/2', 'change_table_majority(${1:Tab}, ${2:Majority}) $3'), ('change_table_frag/2', 'change_table_frag(${1:Tab}, ${2:Change}) $3'), ('create_table/1', 'create_table(${1:TabDef}) $2'), ('cs2list/1', 'cs2list(${1:Cs}) $2'), ('vsn_cs2list/1', 'vsn_cs2list(${1:Cs}) $2'), ('del_snmp/1', 'del_snmp(${1:Tab}) $2'), ('del_table_copy/2', 'del_table_copy(${1:Tab}, ${2:Node}) $3'), ('del_table_index/2', 'del_table_index(${1:Tab}, ${2:Pos}) $3'), ('delete_cstruct/2', 'delete_cstruct(${1:Tid}, ${2:Cs}) $3'), ('delete_schema/1', 'delete_schema(${1:Ns}) $2'), ('delete_schema2/0', 'delete_schema2() $1'), ('delete_table/1', 'delete_table(${1:Tab}) $2'), ('delete_table_property/2', 'delete_table_property(${1:Tab}, ${2:PropKey}) $3'), ('dump_tables/1', 'dump_tables(${1:Tabs}) $2'), ('ensure_no_schema/1', 'ensure_no_schema(${1:Param1}) $2'), ('get_create_list/1', 'get_create_list(${1:Tab}) $2'), ('get_initial_schema/2', 'get_initial_schema(${1:SchemaStorage}, ${2:Nodes}) $3'), ('get_table_properties/1', 'get_table_properties(${1:Tab}) $2'), ('info/0', 'info() $1'), ('info/1', 'info(${1:Tab}) $2'), ('init/1', 'init(${1:IgnoreFallback}) $2'), ('insert_cstruct/3', 'insert_cstruct(${1:Tid}, ${2:Cs}, ${3:KeepWhereabouts}) $4'), ('is_remote_member/1', 'is_remote_member(${1:Key}) $2'), ('list2cs/1', 'list2cs(${1:Other}) $2'), ('lock_schema/0', 'lock_schema() $1'), ('merge_schema/0', 'merge_schema() $1'), ('merge_schema/1', 'merge_schema(${1:UserFun}) $2'), ('move_table/3', 'move_table(${1:Tab}, ${2:FromNode}, ${3:ToNode}) $4'), ('normalize_cs/2', 'normalize_cs(${1:Cstructs}, ${2:Node}) $3'), ('opt_create_dir/2', 'opt_create_dir(${1:Param1}, ${2:Param2}) $3'), ('prepare_commit/3', 'prepare_commit(${1:Tid}, ${2:Commit}, ${3:WaitFor}) $4'), ('purge_dir/2', 'purge_dir(${1:Dir}, ${2:KeepFiles}) $3'), ('purge_tmp_files/0', 'purge_tmp_files() $1'), ('ram_delete_table/2', 'ram_delete_table(${1:Tab}, ${2:Storage}) $3'), ('read_cstructs_from_disc/0', 'read_cstructs_from_disc() $1'), ('read_nodes/0', 'read_nodes() $1'), ('remote_read_schema/0', 'remote_read_schema() $1'), ('restore/1', 'restore(${1:Opaque}) $2'), ('restore/2', 'restore(${1:Opaque}, ${2:BadArg}) $3'), ('restore/3', 'restore(${1:Opaque}, ${2:Args}, ${3:Module}) $4'), ('schema_coordinator/3', 'schema_coordinator(${1:Client}, ${2:Fun}, ${3:Param3}) $4'), ('set_where_to_read/3', 'set_where_to_read(${1:Tab}, ${2:Node}, ${3:Cs}) $4'), ('transform_table/4', 'transform_table(${1:Tab}, ${2:Fun}, ${3:NewAttrs}, ${4:NewRecName}) $5'), ('undo_prepare_commit/2', 'undo_prepare_commit(${1:Tid}, ${2:Commit}) $3'), ('unlock_schema/0', 'unlock_schema() $1'), ('version/0', 'version() $1'), ('write_table_property/2', 'write_table_property(${1:Tab}, ${2:Prop}) $3')],
'mnesia_snmp_hook': [('check_ustruct/1', 'check_ustruct(${1:Param1}) $2'), ('create_table/3', 'create_table(${1:Param1}, ${2:MnesiaTab}, ${3:Storage}) $4'), ('delete_table/2', 'delete_table(${1:Param1}, ${2:Tree}) $3'), ('key_to_oid/2', 'key_to_oid(${1:Tab}, ${2:Key}) $3'), ('key_to_oid/3', 'key_to_oid(${1:Tab}, ${2:Key}, ${3:Param3}) $4'), ('oid_to_key/2', 'oid_to_key(${1:Oid}, ${2:Tab}) $3'), ('update/1', 'update(${1:Param1}) $2'), ('get_row/2', 'get_row(${1:Name}, ${2:RowIndex}) $3'), ('get_next_index/2', 'get_next_index(${1:Name}, ${2:RowIndex}) $3'), ('get_mnesia_key/2', 'get_mnesia_key(${1:Name}, ${2:RowIndex}) $3')],
'mnesia_snmp_sup': [('start/0', 'start() $1'), ('init/1', 'init(${1:Param1}) $2')],
'mnesia_sp': [('init_proc/4', 'init_proc(${1:Who}, ${2:Mod}, ${3:Fun}, ${4:Args}) $5')],
'mnesia_subscr': [('start/0', 'start() $1'), ('set_debug_level/1', 'set_debug_level(${1:Level}) $2'), ('subscribe/2', 'subscribe(${1:ClientPid}, ${2:What}) $3'), ('unsubscribe/2', 'unsubscribe(${1:ClientPid}, ${2:What}) $3'), ('unsubscribe_table/1', 'unsubscribe_table(${1:Tab}) $2'), ('subscribers/0', 'subscribers() $1'), ('report_table_event/4', 'report_table_event(${1:Tab}, ${2:Tid}, ${3:Obj}, ${4:Op}) $5'), ('report_table_event/5', 'report_table_event(${1:Subscr}, ${2:Tab}, ${3:Tid}, ${4:Obj}, ${5:Op}) $6'), ('report_table_event/6', 'report_table_event(${1:Param1}, ${2:Tab}, ${3:Tid}, ${4:Obj}, ${5:Op}, ${6:Old}) $7'), ('report_activity/1', 'report_activity(${1:Tid}) $2')],
'mnesia_sup': [('start/0', 'start() $1'), ('start/2', 'start(${1:Param1}, ${2:Args}) $3'), ('init/1', 'init(${1:BadArg}) $2'), ('stop/1', 'stop(${1:Param1}) $2'), ('start_event/0', 'start_event() $1'), ('kill/0', 'kill() $1')],
'mnesia_text': [('parse/1', 'parse(${1:File}) $2'), ('file/1', 'file(${1:File}) $2'), ('load_textfile/1', 'load_textfile(${1:File}) $2'), ('dump_to_textfile/1', 'dump_to_textfile(${1:File}) $2')],
'mnesia_tm': [('start/0', 'start() $1'), ('init/1', 'init(${1:Parent}) $2'), ('non_transaction/5', 'non_transaction(${1:OldState}, ${2:Fun}, ${3:Args}, ${4:ActivityKind}, ${5:Mod}) $6'), ('transaction/6', 'transaction(${1:OldTidTs}, ${2:Fun}, ${3:Args}, ${4:Retries}, ${5:Mod}, ${6:Type}) $7'), ('commit_participant/5', 'commit_participant(${1:Coord}, ${2:Tid}, ${3:Bin}, ${4:DiscNs}, ${5:RamNs}) $6'), ('dirty/2', 'dirty(${1:From}, ${2:Item}) $3'), ('display_info/2', 'display_info(${1:Stream}, ${2:Param2}) $3'), ('do_update_op/3', 'do_update_op(${1:Tid}, ${2:Storage}, ${3:Param3}) $4'), ('get_info/1', 'get_info(${1:Timeout}) $2'), ('get_transactions/0', 'get_transactions() $1'), ('info/1', 'info(${1:Timeout}) $2'), ('mnesia_down/1', 'mnesia_down(${1:Node}) $2'), ('prepare_checkpoint/2', 'prepare_checkpoint(${1:Nodes}, ${2:Cp}) $3'), ('prepare_checkpoint/1', 'prepare_checkpoint(${1:Cp}) $2'), ('prepare_snmp/3', 'prepare_snmp(${1:Tab}, ${2:Key}, ${3:Items}) $4'), ('do_snmp/2', 'do_snmp(${1:Tid}, ${2:Param2}) $3'), ('put_activity_id/1', 'put_activity_id(${1:MTT}) $2'), ('put_activity_id/2', 'put_activity_id(${1:SimpleState}, ${2:Fun}) $3'), ('block_tab/1', 'block_tab(${1:Tab}) $2'), ('unblock_tab/1', 'unblock_tab(${1:Tab}) $2'), ('fixtable/3', 'fixtable(${1:Tab}, ${2:Lock}, ${3:Me}) $4')],
'mochifmt': [('format/2', 'format(${1:Format}, ${2:Args}) $3'), ('format_field/2', 'format_field(${1:Arg}, ${2:Format}) $3'), ('convert_field/2', 'convert_field(${1:Arg}, ${2:Param2}) $3'), ('get_value/2', 'get_value(${1:Key}, ${2:Param2}) $3'), ('get_field/2', 'get_field(${1:Key}, ${2:Args}) $3')],
'mochifmt_records': [('get_value/2', 'get_value(${1:Key}, ${2:Args}) $3')],
'mochifmt_std': [('format/2', 'format(${1:Format}, ${2:Args}) $3'), ('get_value/2', 'get_value(${1:Key}, ${2:Args}) $3'), ('format_field/2', 'format_field(${1:Arg}, ${2:Format}) $3'), ('get_field/2', 'get_field(${1:Key}, ${2:Args}) $3'), ('convert_field/2', 'convert_field(${1:Key}, ${2:Args}) $3')],
'mochiglobal': [('get/1', 'get(${1:K}) $2'), ('get/2', 'get(${1:K}, ${2:T}) $3'), ('put/2', 'put(${1:K}, ${2:V}) $3'), ('delete/1', 'delete(${1:K}) $2')],
'mochihex': [('to_hex/1', 'to_hex(${1:B}) $2'), ('to_bin/1', 'to_bin(${1:L}) $2'), ('to_int/1', 'to_int(${1:L}) $2'), ('dehex/1', 'dehex(${1:Param1}) $2'), ('hexdigit/1', 'hexdigit(${1:Param1}) $2')],
'mochijson': [('encoder/1', 'encoder(${1:Options}) $2'), ('encode/1', 'encode(${1:Any}) $2')],
'mochijson2': [('encoder/1', 'encoder(${1:Options}) $2'), ('encode/1', 'encode(${1:Any}) $2')],
'mochilists': [('get_value/2', 'get_value(${1:Key}, ${2:Proplist}) $3'), ('get_value/3', 'get_value(${1:Key}, ${2:Proplist}, ${3:Default}) $4'), ('is_defined/2', 'is_defined(${1:Key}, ${2:Proplist}) $3'), ('set_default/2', 'set_default(${1:Param1}, ${2:Proplist}) $3'), ('set_defaults/2', 'set_defaults(${1:DefaultProps}, ${2:Proplist}) $3')],
'mochilogfile2': [('open/1', 'open(${1:Name}) $2'), ('write/2', 'write(${1:Handle}, ${2:IoData}) $3'), ('close/1', 'close(${1:Handle}) $2'), ('name/1', 'name(${1:Handle}) $2')],
'mochinum': [('digits/1', 'digits(${1:Float}) $2'), ('frexp/1', 'frexp(${1:F}) $2'), ('int_pow/2', 'int_pow(${1:X}, ${2:Param2}) $3'), ('int_ceil/1', 'int_ceil(${1:X}) $2')],
'mochitemp': [('gettempdir/0', 'gettempdir() $1')],
'mochiutf8': [('valid_utf8_bytes/1', 'valid_utf8_bytes(${1:Param1}) $2'), ('codepoint_to_bytes/1', 'codepoint_to_bytes(${1:Param1}) $2'), ('codepoints_to_bytes/1', 'codepoints_to_bytes(${1:L}) $2')],
'mochiweb': [('new_request/1', 'new_request(${1:Param1}) $2'), ('new_response/1', 'new_response(${1:Param1}) $2')],
'mochiweb_acceptor': [('start_link/3', 'start_link(${1:Server}, ${2:Listen}, ${3:Loop}) $4'), ('init/3', 'init(${1:Server}, ${2:Listen}, ${3:Loop}) $4')],
'mochiweb_charref': [('charref/1', 'charref(${1:L}) $2')],
'mochiweb_cookies': [('parse_cookie/1', 'parse_cookie(${1:Cookie}) $2'), ('cookie/3', 'cookie(${1:Key}, ${2:Value}, ${3:Options}) $4'), ('cookie/2', 'cookie(${1:Key}, ${2:Value}) $3')],
'mochiweb_cover': [('get_beam/1', 'get_beam(${1:Module}) $2'), ('get_abstract_code/1', 'get_abstract_code(${1:Beam}) $2'), ('get_clauses/2', 'get_clauses(${1:Function}, ${2:Code}) $3'), ('clause_lookup_table/1', 'clause_lookup_table(${1:Clauses}) $2')],
'mochiweb_echo': [('start/0', 'start() $1'), ('stop/0', 'stop() $1'), ('loop/1', 'loop(${1:Socket}) $2')],
'mochiweb_headers': [('empty/0', 'empty() $1'), ('from_list/1', 'from_list(${1:List}) $2'), ('insert/3', 'insert(${1:K}, ${2:V}, ${3:T}) $4'), ('enter/3', 'enter(${1:K}, ${2:V}, ${3:T}) $4'), ('get_value/2', 'get_value(${1:K}, ${2:T}) $3'), ('lookup/2', 'lookup(${1:K}, ${2:T}) $3')],
'mochiweb_html': [('tokens/1', 'tokens(${1:StringOrBinary}) $2'), ('parse/1', 'parse(${1:Input}) $2'), ('parse_tokens/1', 'parse_tokens(${1:Param1}) $2'), ('to_tokens/1', 'to_tokens(${1:Param1}) $2'), ('escape/1', 'escape(${1:Param1}) $2'), ('escape_attr/1', 'escape_attr(${1:Param1}) $2'), ('to_html/1', 'to_html(${1:Param1}) $2')],
'mochiweb_http': [('start/1', 'start(${1:Options}) $2'), ('start_link/1', 'start_link(${1:Options}) $2'), ('stop/0', 'stop() $1'), ('stop/1', 'stop(${1:Name}) $2')],
'mochiweb_io': [('iodevice_stream/3', 'iodevice_stream(${1:Callback}, ${2:IoDevice}, ${3:BufferSize}) $4'), ('iodevice_stream/2', 'iodevice_stream(${1:Callback}, ${2:IoDevice}) $3')],
'mochiweb_mime': [('from_extension/1', 'from_extension(${1:Param1}) $2')],
'mochiweb_multipart': [('parse_form/1', 'parse_form(${1:Req}) $2'), ('parse_form/2', 'parse_form(${1:Req}, ${2:FileHandler}) $3')],
'mochiweb_request': [('get_header_value/1', 'get_header_value(${1:K}) $2'), ('get_primary_header_value/1', 'get_primary_header_value(${1:K}) $2'), ('get/1', 'get(${1:Param1}) $2'), ('dump/0', 'dump() $1')],
'mochiweb_response': [('get_header_value/1', 'get_header_value(${1:K}) $2'), ('get/1', 'get(${1:Param1}) $2'), ('dump/0', 'dump() $1')],
'mochiweb_socket': [('listen/4', 'listen(${1:Ssl}, ${2:Port}, ${3:Opts}, ${4:SslOpts}) $5'), ('accept/1', 'accept(${1:ListenSocket}) $2'), ('recv/3', 'recv(${1:Socket}, ${2:Length}, ${3:Timeout}) $4'), ('send/2', 'send(${1:Socket}, ${2:Data}) $3'), ('close/1', 'close(${1:Socket}) $2'), ('port/1', 'port(${1:Socket}) $2'), ('peername/1', 'peername(${1:Socket}) $2'), ('setopts/2', 'setopts(${1:Socket}, ${2:Opts}) $3'), ('type/1', 'type(${1:Param1}) $2')],
'mochiweb_socket_server': [('start/1', 'start(${1:Options}) $2'), ('start_link/1', 'start_link(${1:Options}) $2'), ('stop/1', 'stop(${1:Options}) $2')],
'mochiweb_util': [('join/2', 'join(${1:Strings}, ${2:Separator}) $3'), ('quote_plus/1', 'quote_plus(${1:String}) $2'), ('urlencode/1', 'urlencode(${1:Props}) $2'), ('parse_qs/1', 'parse_qs(${1:String}) $2'), ('unquote/1', 'unquote(${1:String}) $2')],
'reloader': [('start/0', 'start() $1'), ('start_link/0', 'start_link() $1')],
'mochiapp': [('start/0', 'start() $1'), ('stop/0', 'stop() $1')],
'mochiapp_app': [('start/2', 'start(${1:Param1}, ${2:Param2}) $3'), ('stop/1', 'stop(${1:Param1}) $2')],
'mochiapp_deps': [('ensure/0', 'ensure() $1'), ('ensure/1', 'ensure(${1:Module}) $2')],
'mochiapp_sup': [('start_link/0', 'start_link() $1'), ('upgrade/0', 'upgrade() $1')],
'mochiapp_web': [('start/1', 'start(${1:Options}) $2'), ('stop/0', 'stop() $1'), ('loop/2', 'loop(${1:Req}, ${2:DocRoot}) $3')],
'crashdump_viewer': [('start/0', 'start() $1'), ('stop/0', 'stop() $1'), ('script_start/0', 'script_start() $1'), ('script_start/1', 'script_start(${1:Param1}) $2')],
'crashdump_viewer_html': [('welcome/0', 'welcome() $1'), ('read_file_frame/0', 'read_file_frame() $1'), ('redirect/1', 'redirect(${1:Status}) $2'), ('start_page/0', 'start_page() $1'), ('filename_frame/1', 'filename_frame(${1:File}) $2'), ('menu_frame/0', 'menu_frame() $1'), ('general_info/1', 'general_info(${1:GenInfo}) $2'), ('pretty_info_page/2', 'pretty_info_page(${1:Heading}, ${2:Info}) $3'), ('info_page/2', 'info_page(${1:Heading}, ${2:Info}) $3'), ('proc_details/4', 'proc_details(${1:Pid}, ${2:Proc}, ${3:TW}, ${4:SharedHeap}) $5'), ('expanded_memory/2', 'expanded_memory(${1:Heading}, ${2:Expanded}) $3'), ('expanded_binary/1', 'expanded_binary(${1:Bin}) $2'), ('port/3', 'port(${1:Heading}, ${2:Port}, ${3:TW}) $4'), ('internal_ets_tables/2', 'internal_ets_tables(${1:InternalEts}, ${2:TW}) $3'), ('nods/2', 'nods(${1:Nods}, ${2:TW}) $3'), ('loaded_mod_details/2', 'loaded_mod_details(${1:ModInfo}, ${2:TW}) $3'), ('atoms/4', 'atoms(${1:SessionId}, ${2:TW}, ${3:Num}, ${4:FirstChunk}) $5'), ('atoms_chunk/2', 'atoms_chunk(${1:SessionId}, ${2:Atoms}) $3'), ('memory/2', 'memory(${1:Heading}, ${2:Pid}) $3'), ('allocated_areas/2', 'allocated_areas(${1:AllocatedAreas}, ${2:TW}) $3'), ('allocator_info/2', 'allocator_info(${1:Allocators}, ${2:TW}) $3'), ('hash_tables/2', 'hash_tables(${1:HashTables}, ${2:TW}) $3'), ('index_tables/2', 'index_tables(${1:IndexTables}, ${2:TW}) $3'), ('error/2', 'error(${1:Text}, ${2:Args}) $3'), ('chunk_page/5', 'chunk_page(${1:SessionId}, ${2:TW}, ${3:TW}, ${4:Heading}, ${5:FirstChunk}) $6'), ('chunk/3', 'chunk(${1:SessionId}, ${2:Items}, ${3:TableFun}) $4')],
'etop': [('start/0', 'start() $1'), ('start/1', 'start(${1:Opts}) $2'), ('config/2', 'config(${1:Key}, ${2:Value}) $3'), ('stop/0', 'stop() $1'), ('dump/1', 'dump(${1:File}) $2'), ('help/0', 'help() $1')],
'etop_gui': [('init/1', 'init(${1:Config}) $2'), ('stop/1', 'stop(${1:Param1}) $2')],
'etop_tr': [('setup_tracer/1', 'setup_tracer(${1:Config}) $2'), ('stop_tracer/1', 'stop_tracer(${1:Param1}) $2'), ('reader/1', 'reader(${1:Config}) $2')],
'etop_txt': [('init/1', 'init(${1:Config}) $2'), ('stop/1', 'stop(${1:Pid}) $2')],
'observer': [('start/0', 'start() $1')],
'observer_app_wx': [('start_link/2', 'start_link(${1:Notebook}, ${2:Parent}) $3')],
'observer_lib': [('get_wx_parent/1', 'get_wx_parent(${1:Window}) $2'), ('display_info_dialog/1', 'display_info_dialog(${1:Str}) $2'), ('user_term/3', 'user_term(${1:Parent}, ${2:Title}, ${3:Default}) $4'), ('interval_dialog/4', 'interval_dialog(${1:Parent0}, ${2:Param2}, ${3:Min}, ${4:Max}) $5'), ('start_timer/1', 'start_timer(${1:Timer}) $2'), ('stop_timer/1', 'stop_timer(${1:Param1}) $2'), ('display_info/2', 'display_info(${1:Parent}, ${2:Info}) $3'), ('fill_info/2', 'fill_info(${1:Param1}, ${2:Data}) $3'), ('update_info/2', 'update_info(${1:Param1}, ${2:Param2}) $3'), ('to_str/1', 'to_str(${1:Term}) $2'), ('create_menus/3', 'create_menus(${1:Menus}, ${2:MenuBar}, ${3:Type}) $4'), ('create_menu_item/3', 'create_menu_item(${1:Param1}, ${2:Menu}, ${3:Index}) $4'), ('create_attrs/0', 'create_attrs() $1'), ('set_listctrl_col_size/2', 'set_listctrl_col_size(${1:LCtrl}, ${2:Total}) $3')],
'observer_pro_wx': [('start_link/2', 'start_link(${1:Notebook}, ${2:Parent}) $3')],
'observer_procinfo': [('start/3', 'start(${1:Process}, ${2:ParentFrame}, ${3:Parent}) $4')],
'observer_sys_wx': [('start_link/2', 'start_link(${1:Notebook}, ${2:Parent}) $3')],
'observer_trace_wx': [('start_link/2', 'start_link(${1:Notebook}, ${2:ParentPid}) $3'), ('add_processes/2', 'add_processes(${1:Tracer}, ${2:Param2}) $3')],
'observer_traceoptions_wx': [('process_trace/2', 'process_trace(${1:Parent}, ${2:Default}) $3'), ('trace_pattern/4', 'trace_pattern(${1:ParentPid}, ${2:Parent}, ${3:Node}, ${4:MatchSpecs}) $5'), ('select_nodes/2', 'select_nodes(${1:Parent}, ${2:Nodes}) $3'), ('output/2', 'output(${1:Parent}, ${2:Default}) $3'), ('select_matchspec/3', 'select_matchspec(${1:Pid}, ${2:Parent}, ${3:MatchSpecs}) $4')],
'observer_tv_table': [('start_link/2', 'start_link(${1:Parent}, ${2:Opts}) $3')],
'observer_tv_wx': [('start_link/2', 'start_link(${1:Notebook}, ${2:Parent}) $3'), ('display_table_info/4', 'display_table_info(${1:Parent0}, ${2:Node}, ${3:Source}, ${4:Table}) $5')],
'observer_wx': [('start/0', 'start() $1')],
'ttb': [('tracer/0', 'tracer() $1'), ('tracer/1', 'tracer(${1:Nodes}) $2'), ('tracer/2', 'tracer(${1:Nodes}, ${2:Opt}) $3'), ('p/2', 'p(${1:Procs0}, ${2:Flags0}) $3'), ('stop/0', 'stop() $1'), ('stop/1', 'stop(${1:Opts}) $2'), ('start_trace/4', 'start_trace(${1:Nodes}, ${2:Patterns}, ${3:Param3}, ${4:Options}) $5')],
'ttb_et': [('handler/4', 'handler(${1:Out}, ${2:Trace}, ${3:Traci}, ${4:Col}) $5')],
'odbc': [('start/0', 'start() $1'), ('start/1', 'start(${1:Type}) $2'), ('stop/0', 'stop() $1'), ('connect/2', 'connect(${1:ConnectionStr}, ${2:Options}) $3'), ('disconnect/1', 'disconnect(${1:ConnectionReferense}) $2'), ('commit/2', 'commit(${1:ConnectionReference}, ${2:CommitMode}) $3'), ('commit/3', 'commit(${1:ConnectionReference}, ${2:CommitMode}, ${3:Param3}) $4'), ('sql_query/2', 'sql_query(${1:ConnectionReference}, ${2:SQLQuery}) $3'), ('sql_query/3', 'sql_query(${1:ConnectionReference}, ${2:SQLQuery}, ${3:Param3}) $4'), ('select_count/2', 'select_count(${1:ConnectionReference}, ${2:SQLQuery}) $3'), ('select_count/3', 'select_count(${1:ConnectionReference}, ${2:SQLQuery}, ${3:Param3}) $4'), ('first/1', 'first(${1:ConnectionReference}) $2'), ('first/2', 'first(${1:ConnectionReference}, ${2:Param2}) $3'), ('last/1', 'last(${1:ConnectionReference}) $2'), ('last/2', 'last(${1:ConnectionReference}, ${2:Param2}) $3'), ('next/1', 'next(${1:ConnectionReference}) $2'), ('next/2', 'next(${1:ConnectionReference}, ${2:Param2}) $3'), ('prev/1', 'prev(${1:ConnectionReference}) $2'), ('prev/2', 'prev(${1:ConnectionReference}, ${2:Param2}) $3'), ('select/3', 'select(${1:ConnectionReference}, ${2:Position}, ${3:N}) $4'), ('select/4', 'select() $1'), ('param_query/3', 'param_query(${1:ConnectionReference}, ${2:SQLQuery}, ${3:Params}) $4'), ('param_query/4', 'param_query(${1:ConnectionReference}, ${2:SQLQuery}, ${3:Params}, ${4:Param4}) $5'), ('describe_table/2', 'describe_table(${1:ConnectionReference}, ${2:Table}) $3'), ('describe_table/3', 'describe_table(${1:ConnectionReference}, ${2:Table}, ${3:Param3}) $4')],
'odbc_app': [('start/2', 'start(${1:Param1}, ${2:Name}) $3'), ('stop/1', 'stop(${1:Param1}) $2')],
'odbc_sup': [('init/1', 'init(${1:Param1}) $2')],
'any': [('create/0', 'create() $1'), ('create/2', 'create(${1:TC}, ${2:V}) $3'), ('set_typecode/2', 'set_typecode(${1:Any}, ${2:TC}) $3'), ('get_typecode/1', 'get_typecode(${1:Any}) $2'), ('set_value/2', 'set_value(${1:Any}, ${2:V}) $3'), ('get_value/1', 'get_value(${1:Any}) $2')],
'cdr_decode': [('dec_giop_message_header/1', 'dec_giop_message_header(${1:Other}) $2'), ('dec_reply_header/4', 'dec_reply_header(${1:Version}, ${2:Message}, ${3:Len0}, ${4:ByteOrder}) $5'), ('dec_reply_body/6', 'dec_reply_body(${1:Version}, ${2:Param2}, ${3:Body}, ${4:Len}, ${5:ByteOrder}, ${6:Bytes}) $7'), ('dec_locate_reply_header/4', 'dec_locate_reply_header(${1:Version}, ${2:Message}, ${3:Len}, ${4:ByteOrder}) $5'), ('dec_locate_reply_body/5', 'dec_locate_reply_body(${1:Version}, ${2:LocateStatus}, ${3:Rest}, ${4:Len}, ${5:ByteOrder}) $6'), ('dec_message_header/3', 'dec_message_header(${1:TypeCodes}, ${2:Message}, ${3:Bytes}) $4'), ('dec_request_body/6', 'dec_request_body(${1:Version}, ${2:ReqHdr}, ${3:Rest}, ${4:Len}, ${5:ByteOrder}, ${6:Buffer}) $7'), ('dec_octet_sequence_bin/6', 'dec_octet_sequence_bin(${1:Param1}, ${2:Message}, ${3:Len}, ${4:ByteOrder}, ${5:Param5}, ${6:C}) $7'), ('dec_message/2', 'dec_message(${1:TypeCodes}, ${2:Bytes}) $3'), ('peek_request_id/2', 'peek_request_id(${1:Param1}, ${2:Param2}) $3')],
'cdr_encode': [('enc_giop_msg_type/1', 'enc_giop_msg_type(${1:Param1}) $2'), ('enc_request/1', 'enc_request(${1:Param1}) $2'), ('enc_request_split/1', 'enc_request_split(${1:Param1}) $2'), ('enc_reply/1', 'enc_reply(${1:Env}) $2'), ('enc_reply_split/1', 'enc_reply_split(${1:Env}) $2'), ('enc_type/3', 'enc_type(${1:Env}, ${2:TypeCode}, ${3:Value}) $4'), ('enc_type/5', 'enc_type(${1:Type}, ${2:Any}, ${3:Value}, ${4:Bytes}, ${5:Len}) $6'), ('enc_cancel_request/1', 'enc_cancel_request(${1:Env}) $2'), ('enc_locate_request/1', 'enc_locate_request(${1:Env}) $2'), ('enc_locate_reply/1', 'enc_locate_reply(${1:Env}) $2'), ('enc_close_connection/1', 'enc_close_connection(${1:Env}) $2'), ('enc_message_error/1', 'enc_message_error(${1:Env}) $2'), ('enc_fragment/1', 'enc_fragment(${1:Env}) $2'), ('enc_giop_message_header/5', 'enc_giop_message_header(${1:Param1}, ${2:MessType}, ${3:Param3}, ${4:MessSize}, ${5:Message}) $6'), ('validate_request_body/1', 'validate_request_body() $1'), ('validate_reply_body/2', 'validate_reply_body(${1:Env}, ${2:Reply}) $3')],
'cdrlib': [('enc_short/2', 'enc_short(${1:X}, ${2:Param2}) $3'), ('dec_short/2', 'dec_short(${1:Param1}, ${2:Param2}) $3'), ('enc_unsigned_short/2', 'enc_unsigned_short(${1:X}, ${2:Param2}) $3'), ('dec_unsigned_short/2', 'dec_unsigned_short(${1:Param1}, ${2:Param2}) $3'), ('enc_long/2', 'enc_long(${1:X}, ${2:Param2}) $3'), ('dec_long/2', 'dec_long(${1:Param1}, ${2:Param2}) $3'), ('enc_unsigned_long/2', 'enc_unsigned_long(${1:X}, ${2:Param2}) $3'), ('dec_unsigned_long/2', 'dec_unsigned_long(${1:Param1}, ${2:Param2}) $3'), ('enc_bool/2', 'enc_bool(${1:X}, ${2:Message}) $3'), ('dec_bool/1', 'dec_bool(${1:Param1}) $2'), ('enc_float/2', 'enc_float(${1:X}, ${2:Param2}) $3'), ('dec_float/2', 'dec_float(${1:Param1}, ${2:Param2}) $3'), ('enc_double/2', 'enc_double(${1:X}, ${2:Param2}) $3'), ('dec_double/2', 'dec_double(${1:Param1}, ${2:Param2}) $3'), ('enc_char/2', 'enc_char(${1:X}, ${2:Param2}) $3'), ('dec_char/1', 'dec_char(${1:Param1}) $2'), ('enc_octet/2', 'enc_octet(${1:X}, ${2:Param2}) $3'), ('dec_octet/1', 'dec_octet(${1:Param1}) $2'), ('enc_enum/3', 'enc_enum(${1:Enum}, ${2:ElemList}, ${3:Message}) $4'), ('dec_enum/3', 'dec_enum(${1:ByteOrder}, ${2:ElemList}, ${3:Message}) $4'), ('enc_longlong/2', 'enc_longlong(${1:X}, ${2:Param2}) $3'), ('dec_longlong/2', 'dec_longlong(${1:Param1}, ${2:Param2}) $3'), ('enc_unsigned_longlong/2', 'enc_unsigned_longlong(${1:X}, ${2:Param2}) $3'), ('dec_unsigned_longlong/2', 'dec_unsigned_longlong(${1:Param1}, ${2:Param2}) $3')],
'corba': [('orb_init/1', 'orb_init(${1:KeyValueList}) $2'), ('orb_init/2', 'orb_init(${1:KeyValueList}, ${2:Param2}) $3')],
'corba_boa': [('dispose/1', 'dispose(${1:Object}) $2'), ('get_id/1', 'get_id(${1:Object}) $2')],
'corba_object': [('get_interface/1', 'get_interface(${1:Obj}) $2'), ('is_nil/1', 'is_nil(${1:Obj}) $2'), ('is_a/2', 'is_a(${1:Obj}, ${2:Logical_type_id}) $3'), ('is_a/3', 'is_a(${1:Obj}, ${2:Logical_type_id}, ${3:Ctx}) $4'), ('is_remote/1', 'is_remote(${1:Obj}) $2'), ('non_existent/1', 'non_existent(${1:Obj}) $2'), ('non_existent/2', 'non_existent(${1:Obj}, ${2:Ctx}) $3'), ('not_existent/1', 'not_existent(${1:Obj}) $2'), ('not_existent/2', 'not_existent(${1:Obj}, ${2:Ctx}) $3'), ('is_equivalent/2', 'is_equivalent(${1:Obj}, ${2:Obj}) $3'), ('hash/2', 'hash(${1:Obj}, ${2:Maximum}) $3'), ('create_request/6', 'create_request(${1:Param1}, ${2:Param2}, ${3:Param3}, ${4:Param4}, ${5:NamedValueResult}, ${6:Param6}) $7')],
'fixed': [('create/3', 'create(${1:Digits}, ${2:Scale}, ${3:Value}) $4'), ('add/2', 'add(${1:F1}, ${2:F2}) $3'), ('subtract/2', 'subtract(${1:F1}, ${2:F2}) $3'), ('divide/2', 'divide(${1:F1}, ${2:F2}) $3'), ('multiply/2', 'multiply(${1:F1}, ${2:F2}) $3'), ('unary_minus/1', 'unary_minus(${1:Fixed}) $2'), ('get_typecode/1', 'get_typecode(${1:Other}) $2')],
'iop_ior': [('code/4', 'code(${1:IOR}, ${2:Host}, ${3:Port}, ${4:SSLPort}) $5'), ('decode/4', 'decode(${1:Version}, ${2:IorByteSeq}, ${3:Len}, ${4:ByteOrder}) $5'), ('string_decode/1', 'string_decode(${1:What}) $2'), ('string_code/1', 'string_code(${1:IOR}) $2'), ('string_code/2', 'string_code(${1:IOR}, ${2:Host}) $3'), ('string_code/3', 'string_code(${1:IOR}, ${2:Host}, ${3:Port}) $4'), ('string_code/4', 'string_code(${1:IOR}, ${2:Host}, ${3:Port}, ${4:SSLPort}) $5'), ('get_key/1', 'get_key(${1:What}) $2'), ('get_key/2', 'get_key(${1:What}, ${2:Exclude}) $3'), ('get_typeID/1', 'get_typeID(${1:Param1}) $2'), ('create/9', 'create(${1:Version}, ${2:TypeID}, ${3:Hosts}, ${4:IIOPPort}, ${5:SSLPort}, ${6:Objkey}, ${7:MC}, ${8:Flags}, ${9:EnvFlags}) $10'), ('get_objkey/1', 'get_objkey(${1:Param1}) $2'), ('check_nil/1', 'check_nil(${1:Param1}) $2'), ('get_privfield/1', 'get_privfield(${1:Param1}) $2'), ('set_privfield/2', 'set_privfield(${1:Param1}, ${2:UserData}) $3'), ('get_orbfield/1', 'get_orbfield(${1:Param1}) $2'), ('set_orbfield/2', 'set_orbfield(${1:Param1}, ${2:OrberDef}) $3'), ('get_flagfield/1', 'get_flagfield(${1:Param1}) $2'), ('set_flagfield/2', 'set_flagfield(${1:Param1}, ${2:Flags}) $3'), ('create_external/5', 'create_external(${1:Version}, ${2:TypeID}, ${3:Host}, ${4:IIOP_port}, ${5:Objkey}) $6'), ('create_external/6', 'create_external(${1:Version}, ${2:TypeID}, ${3:Host}, ${4:IIOP_port}, ${5:Objkey}, ${6:Components}) $7'), ('print/1', 'print(${1:Object}) $2'), ('print/2', 'print(${1:IoDevice}, ${2:Param2}) $3'), ('get_alt_addr/1', 'get_alt_addr(${1:Param1}) $2'), ('add_component/2', 'add_component(${1:Objref}, ${2:Component}) $3'), ('get_peerdata/1', 'get_peerdata(${1:Param1}) $2')],
'orber': [('start/0', 'start() $1'), ('start/1', 'start(${1:Options}) $2'), ('stop/0', 'stop() $1'), ('install/1', 'install(${1:Nodes}) $2'), ('install/2', 'install(${1:Nodes}, ${2:Options}) $3'), ('orber_nodes/0', 'orber_nodes() $1'), ('iiop_port/0', 'iiop_port() $1'), ('domain/0', 'domain() $1'), ('iiop_ssl_port/0', 'iiop_ssl_port() $1'), ('iiop_out_ports/0', 'iiop_out_ports() $1'), ('iiop_out_ports_random/0', 'iiop_out_ports_random() $1'), ('iiop_out_ports_attempts/0', 'iiop_out_ports_attempts() $1'), ('ssl_server_options/0', 'ssl_server_options() $1'), ('ssl_client_options/0', 'ssl_client_options() $1'), ('set_ssl_client_options/1', 'set_ssl_client_options(${1:Value}) $2'), ('ssl_server_certfile/0', 'ssl_server_certfile() $1'), ('ssl_client_certfile/0', 'ssl_client_certfile() $1'), ('set_ssl_client_certfile/1', 'set_ssl_client_certfile(${1:Value}) $2'), ('ssl_server_verify/0', 'ssl_server_verify() $1'), ('ssl_client_verify/0', 'ssl_client_verify() $1'), ('set_ssl_client_verify/1', 'set_ssl_client_verify(${1:Value}) $2'), ('ssl_server_depth/0', 'ssl_server_depth() $1'), ('ssl_client_depth/0', 'ssl_client_depth() $1'), ('set_ssl_client_depth/1', 'set_ssl_client_depth(${1:Value}) $2'), ('ssl_server_cacertfile/0', 'ssl_server_cacertfile() $1'), ('ssl_client_cacertfile/0', 'ssl_client_cacertfile() $1'), ('set_ssl_client_cacertfile/1', 'set_ssl_client_cacertfile(${1:Value}) $2'), ('ssl_client_keyfile/0', 'ssl_client_keyfile() $1'), ('ssl_client_password/0', 'ssl_client_password() $1'), ('ssl_server_keyfile/0', 'ssl_server_keyfile() $1'), ('ssl_server_password/0', 'ssl_server_password() $1'), ('ssl_client_ciphers/0', 'ssl_client_ciphers() $1'), ('ssl_server_ciphers/0', 'ssl_server_ciphers() $1'), ('ssl_client_cachetimeout/0', 'ssl_client_cachetimeout() $1'), ('ssl_server_cachetimeout/0', 'ssl_server_cachetimeout() $1'), ('uninstall/0', 'uninstall() $1'), ('giop_version/0', 'giop_version() $1'), ('info/0', 'info() $1'), ('info/1', 'info(${1:IoDevice}) $2'), ('is_running/0', 'is_running() $1'), ('add_node/2', 'add_node(${1:Node}, ${2:Param2}) $3'), ('remove_node/1', 'remove_node(${1:Param1}) $2'), ('iiop_timeout/0', 'iiop_timeout() $1'), ('iiop_connection_timeout/0', 'iiop_connection_timeout() $1'), ('iiop_setup_connection_timeout/0', 'iiop_setup_connection_timeout() $1'), ('objectkeys_gc_time/0', 'objectkeys_gc_time() $1'), ('is_lightweight/0', 'is_lightweight() $1'), ('get_lightweight_nodes/0', 'get_lightweight_nodes() $1'), ('start_lightweight/0', 'start_lightweight() $1'), ('start_lightweight/1', 'start_lightweight(${1:Param1}) $2'), ('get_ORBDefaultInitRef/0', 'get_ORBDefaultInitRef() $1'), ('get_ORBInitRef/0', 'get_ORBInitRef() $1'), ('get_interceptors/0', 'get_interceptors() $1'), ('get_local_interceptors/0', 'get_local_interceptors() $1'), ('get_cached_interceptors/0', 'get_cached_interceptors() $1'), ('set_interceptors/1', 'set_interceptors(${1:Val}) $2'), ('jump_start/0', 'jump_start() $1'), ('jump_start/1', 'jump_start(${1:Options}) $2'), ('jump_stop/0', 'jump_stop() $1'), ('iiop_connections/0', 'iiop_connections() $1'), ('iiop_connections/1', 'iiop_connections(${1:Param1}) $2'), ('iiop_connections_pending/0', 'iiop_connections_pending() $1'), ('typechecking/0', 'typechecking() $1'), ('exclude_codeset_ctx/0', 'exclude_codeset_ctx() $1'), ('exclude_codeset_component/0', 'exclude_codeset_component() $1'), ('bidir_context/0', 'bidir_context() $1'), ('use_FT/0', 'use_FT() $1'), ('use_CSIv2/0', 'use_CSIv2() $1'), ('get_flags/0', 'get_flags() $1'), ('secure/0', 'secure() $1'), ('multi_jump_start/1', 'multi_jump_start(${1:Nodes}) $2'), ('multi_jump_start/2', 'multi_jump_start(${1:Nodes}, ${2:Port}) $3'), ('multi_jump_start/3', 'multi_jump_start(${1:Nodes}, ${2:Port}, ${3:Options}) $4'), ('get_tables/0', 'get_tables() $1'), ('iiop_in_connection_timeout/0', 'iiop_in_connection_timeout() $1'), ('partial_security/0', 'partial_security() $1'), ('nat_iiop_ssl_port/0', 'nat_iiop_ssl_port() $1'), ('nat_iiop_port/0', 'nat_iiop_port() $1'), ('ip_version/0', 'ip_version() $1'), ('light_ifr/0', 'light_ifr() $1'), ('iiop_max_in_requests/0', 'iiop_max_in_requests() $1'), ('iiop_max_in_connections/0', 'iiop_max_in_connections() $1'), ('iiop_max_fragments/0', 'iiop_max_fragments() $1'), ('iiop_backlog/0', 'iiop_backlog() $1'), ('iiop_ssl_backlog/0', 'iiop_ssl_backlog() $1'), ('find_sockname_by_peername/2', 'find_sockname_by_peername(${1:Host}, ${2:Port}) $3'), ('find_peername_by_sockname/2', 'find_peername_by_sockname(${1:Host}, ${2:Port}) $3'), ('iiop_acl/0', 'iiop_acl() $1'), ('add_listen_interface/2', 'add_listen_interface(${1:IP}, ${2:Param2}) $3'), ('add_listen_interface/3', 'add_listen_interface(${1:IP}, ${2:Type}, ${3:Extra}) $4'), ('remove_listen_interface/1', 'remove_listen_interface(${1:Ref}) $2'), ('reconfigure_out_connections/1', 'reconfigure_out_connections(${1:Options}) $2'), ('reconfigure_out_connection/3', 'reconfigure_out_connection(${1:Options}, ${2:Host}, ${3:Port}) $4'), ('reconfigure_out_connection/4', 'reconfigure_out_connection(${1:Options}, ${2:Host}, ${3:Port}, ${4:Interface}) $5'), ('reconfigure_in_connections/1', 'reconfigure_in_connections(${1:Options}) $2'), ('reconfigure_in_connection/2', 'reconfigure_in_connection(${1:Options}, ${2:Ref}) $3'), ('activate_audit_trail/0', 'activate_audit_trail() $1'), ('activate_audit_trail/1', 'activate_audit_trail(${1:Param1}) $2'), ('deactivate_audit_trail/0', 'deactivate_audit_trail() $1'), ('iiop_ssl_ip_address_local/0', 'iiop_ssl_ip_address_local() $1'), ('ip_address_local/0', 'ip_address_local() $1'), ('close_connection/1', 'close_connection(${1:ObjRef}) $2'), ('close_connection/2', 'close_connection(${1:ObjRef}, ${2:Interface}) $3'), ('is_system_exception/1', 'is_system_exception(${1:Exc}) $2'), ('exception_info/1', 'exception_info(${1:Exc}) $2')],
'orber_acl': [('init_acl/1', 'init_acl(${1:Filters}) $2'), ('init_acl/2', 'init_acl(${1:Filters}, ${2:Family}) $3'), ('clear_acl/0', 'clear_acl() $1'), ('match/2', 'match(${1:IPTuple}, ${2:Direction}) $3'), ('match/3', 'match(${1:IPTuple}, ${2:Direction}, ${3:All}) $4'), ('verify/3', 'verify(${1:IP}, ${2:Filter}, ${3:Family}) $4'), ('range/1', 'range(${1:Filter}) $2'), ('range/2', 'range(${1:Filter}, ${2:Family}) $3')],
'orber_diagnostics': [('nameservice/0', 'nameservice() $1'), ('nameservice/1', 'nameservice(${1:Flags}) $2'), ('objectkeys/0', 'objectkeys() $1'), ('missing_modules/0', 'missing_modules() $1')],
'orber_env': [('start/1', 'start(${1:Opts}) $2'), ('configure/2', 'configure(${1:Key}, ${2:Status}) $3'), ('configure/3', 'configure(${1:Key}, ${2:String}, ${3:Status}) $4'), ('configure_override/2', 'configure_override(${1:Key}, ${2:Param2}) $3'), ('multi_configure/1', 'multi_configure(${1:KeyValueList}) $2'), ('get_env/1', 'get_env(${1:Param1}) $2'), ('set_env/2', 'set_env(${1:Key}, ${2:Param2}) $3'), ('get_keys/0', 'get_keys() $1'), ('env/1', 'env(${1:Key}) $2'), ('info/0', 'info() $1'), ('info/1', 'info(${1:IoDevice}) $2')],
'orber_exceptions': [('dissect/1', 'dissect(${1:Param1}) $2'), ('get_def/1', 'get_def(${1:Exception}) $2'), ('get_name/2', 'get_name(${1:TypeId}, ${2:Param2}) $3'), ('type/1', 'type(${1:Param1}) $2'), ('is_system_exception/1', 'is_system_exception(${1:Param1}) $2')],
'orber_ifr': [('init/2', 'init(${1:Nodes}, ${2:Nodes}) $3'), ('find_repository/0', 'find_repository() $1'), ("'IRObject__get_def_kind'/1", "'IRObject__get_def_kind'(${1:Objref}) $2"), ("'Contained__get_def_kind'/1", "'Contained__get_def_kind'(${1:Objref}) $2"), ("'Contained__get_id'/1", "'Contained__get_id'(${1:Objref}) $2"), ("'Contained__set_id'/2", "'Contained__set_id'(${1:Objref}, ${2:Id}) $3"), ("'Contained__get_name'/1", "'Contained__get_name'(${1:Objref}) $2"), ("'Contained__set_name'/2", "'Contained__set_name'(${1:Objref}, ${2:Name}) $3"), ("'Contained__get_version'/1", "'Contained__get_version'(${1:Objref}) $2"), ("'Contained__set_version'/2", "'Contained__set_version'(${1:Objref}, ${2:Version}) $3"), ("'Contained__get_defined_in'/1", "'Contained__get_defined_in'(${1:Objref}) $2"), ("'Contained__get_absolute_name'/1", "'Contained__get_absolute_name'(${1:Objref}) $2"), ("'Contained__get_containing_repository'/1", "'Contained__get_containing_repository'(${1:Objref}) $2"), ("'Contained_describe'/1", "'Contained_describe'(${1:Objref}) $2"), ("'Contained_move'/4", "'Contained_move'(${1:Objref}, ${2:New_container}, ${3:New_name}, ${4:New_version}) $5"), ("'Container__get_def_kind'/1", "'Container__get_def_kind'(${1:Objref}) $2"), ("'Container_destroy'/1", "'Container_destroy'(${1:Objref}) $2"), ("'Container_lookup'/2", "'Container_lookup'(${1:Objref}, ${2:Search_name}) $3"), ("'Container_contents'/3", "'Container_contents'(${1:Objref}, ${2:Limit_type}, ${3:Exclude_inherited}) $4"), ("'Container_lookup_name'/5", "'Container_lookup_name'(${1:Objref}, ${2:Search_name}, ${3:Levels_to_search}, ${4:Limit_type}, ${5:Exclude_inherited}) $6"), ("'Container_describe_contents'/4", "'Container_describe_contents'(${1:Objref}, ${2:Limit_type}, ${3:Exclude_inherited}, ${4:Max_returned_objs}) $5"), ("'Container_create_module'/4", "'Container_create_module'(${1:Objref}, ${2:Id}, ${3:Name}, ${4:Version}) $5"), ("'Container_create_constant'/6", "'Container_create_constant'(${1:Objref}, ${2:Id}, ${3:Name}, ${4:Version}, ${5:Type}, ${6:Value}) $7"), ("'Container_create_struct'/5", "'Container_create_struct'(${1:Objref}, ${2:Id}, ${3:Name}, ${4:Version}, ${5:Members}) $6"), ("'Container_create_union'/6", "'Container_create_union'(${1:Objref}, ${2:Id}, ${3:Name}, ${4:Version}, ${5:Discriminator_type}, ${6:Members}) $7"), ("'Container_create_enum'/5", "'Container_create_enum'(${1:Objref}, ${2:Id}, ${3:Name}, ${4:Version}, ${5:Members}) $6"), ("'Container_create_alias'/5", "'Container_create_alias'(${1:Objref}, ${2:Id}, ${3:Name}, ${4:Version}, ${5:Original_type}) $6"), ("'Container_create_interface'/5", "'Container_create_interface'(${1:Objref}, ${2:Id}, ${3:Name}, ${4:Version}, ${5:Base_interfaces}) $6"), ("'Container_create_exception'/5", "'Container_create_exception'(${1:Objref}, ${2:Id}, ${3:Name}, ${4:Version}, ${5:Members}) $6"), ("'IDLType__get_def_kind'/1", "'IDLType__get_def_kind'(${1:Objref}) $2"), ("'IDLType_destroy'/1", "'IDLType_destroy'(${1:Objref}) $2"), ("'IDLType__get_type'/1", "'IDLType__get_type'(${1:Objref}) $2"), ("'Repository__get_def_kind'/1", "'Repository__get_def_kind'(${1:Objref}) $2"), ("'Repository_destroy'/1", "'Repository_destroy'(${1:Objref}) $2"), ("'Repository_lookup'/2", "'Repository_lookup'(${1:Objref}, ${2:Search_name}) $3"), ("'Repository_contents'/3", "'Repository_contents'(${1:Objref}, ${2:Limit_type}, ${3:Exclude_inherited}) $4"), ("'Repository_lookup_name'/5", "'Repository_lookup_name'(${1:Objref}, ${2:Search_name}, ${3:Levels_to_search}, ${4:Limit_type}, ${5:Exclude_inherited}) $6"), ("'Repository_describe_contents'/4", "'Repository_describe_contents'(${1:Objref}, ${2:Limit_type}, ${3:Exclude_inherited}, ${4:Max_returned_objs}) $5"), ("'Repository_create_module'/4", "'Repository_create_module'(${1:Objref}, ${2:Id}, ${3:Name}, ${4:Version}) $5"), ("'Repository_create_constant'/6", "'Repository_create_constant'(${1:Objref}, ${2:Id}, ${3:Name}, ${4:Version}, ${5:Type}, ${6:Value}) $7"), ("'Repository_create_struct'/5", "'Repository_create_struct'(${1:Objref}, ${2:Id}, ${3:Name}, ${4:Version}, ${5:Members}) $6"), ("'Repository_create_union'/6", "'Repository_create_union'(${1:Objref}, ${2:Id}, ${3:Name}, ${4:Version}, ${5:Discriminator_type}, ${6:Members}) $7"), ("'Repository_create_enum'/5", "'Repository_create_enum'(${1:Objref}, ${2:Id}, ${3:Name}, ${4:Version}, ${5:Members}) $6"), ("'Repository_create_alias'/5", "'Repository_create_alias'(${1:Objref}, ${2:Id}, ${3:Name}, ${4:Version}, ${5:Original_type}) $6"), ("'Repository_create_interface'/5", "'Repository_create_interface'(${1:Objref}, ${2:Id}, ${3:Name}, ${4:Version}, ${5:Base_interfaces}) $6"), ("'Repository_create_exception'/5", "'Repository_create_exception'(${1:Objref}, ${2:Id}, ${3:Name}, ${4:Version}, ${5:Members}) $6"), ("'Repository_lookup_id'/2", "'Repository_lookup_id'(${1:Objref}, ${2:Search_id}) $3"), ("'Repository_get_primitive'/2", "'Repository_get_primitive'(${1:Objref}, ${2:Kind}) $3"), ("'Repository_create_string'/2", "'Repository_create_string'(${1:Objref}, ${2:Bound}) $3"), ("'Repository_create_wstring'/2", "'Repository_create_wstring'(${1:Objref}, ${2:Bound}) $3"), ("'Repository_create_sequence'/3", "'Repository_create_sequence'(${1:Objref}, ${2:Bound}, ${3:Element_type}) $4"), ("'Repository_create_array'/3", "'Repository_create_array'(${1:Objref}, ${2:Length}, ${3:Element_type}) $4"), ("'Repository_create_idltype'/2", "'Repository_create_idltype'(${1:Objref}, ${2:Typecode}) $3"), ("'ModuleDef__get_def_kind'/1", "'ModuleDef__get_def_kind'(${1:Objref}) $2"), ("'ModuleDef_destroy'/1", "'ModuleDef_destroy'(${1:Objref}) $2"), ("'ModuleDef_lookup'/2", "'ModuleDef_lookup'(${1:Objref}, ${2:Search_name}) $3"), ("'ModuleDef_contents'/3", "'ModuleDef_contents'(${1:Objref}, ${2:Limit_type}, ${3:Exclude_inherited}) $4"), ("'ModuleDef_lookup_name'/5", "'ModuleDef_lookup_name'(${1:Objref}, ${2:Search_name}, ${3:Levels_to_search}, ${4:Limit_type}, ${5:Exclude_inherited}) $6"), ("'ModuleDef_describe_contents'/4", "'ModuleDef_describe_contents'(${1:Objref}, ${2:Limit_type}, ${3:Exclude_inherited}, ${4:Max_returned_objs}) $5"), ("'ModuleDef_create_module'/4", "'ModuleDef_create_module'(${1:Objref}, ${2:Id}, ${3:Name}, ${4:Version}) $5"), ("'ModuleDef_create_constant'/6", "'ModuleDef_create_constant'(${1:Objref}, ${2:Id}, ${3:Name}, ${4:Version}, ${5:Type}, ${6:Value}) $7"), ("'ModuleDef_create_struct'/5", "'ModuleDef_create_struct'(${1:Objref}, ${2:Id}, ${3:Name}, ${4:Version}, ${5:Members}) $6"), ("'ModuleDef_create_union'/6", "'ModuleDef_create_union'(${1:Objref}, ${2:Id}, ${3:Name}, ${4:Version}, ${5:Discriminator_type}, ${6:Members}) $7"), ("'ModuleDef_create_enum'/5", "'ModuleDef_create_enum'(${1:Objref}, ${2:Id}, ${3:Name}, ${4:Version}, ${5:Members}) $6"), ("'ModuleDef_create_alias'/5", "'ModuleDef_create_alias'(${1:Objref}, ${2:Id}, ${3:Name}, ${4:Version}, ${5:Original_type}) $6"), ("'ModuleDef_create_interface'/5", "'ModuleDef_create_interface'(${1:Objref}, ${2:Id}, ${3:Name}, ${4:Version}, ${5:Base_interfaces}) $6"), ("'ModuleDef_create_exception'/5", "'ModuleDef_create_exception'(${1:Objref}, ${2:Id}, ${3:Name}, ${4:Version}, ${5:Members}) $6"), ("'ModuleDef__get_id'/1", "'ModuleDef__get_id'(${1:Objref}) $2"), ("'ModuleDef__set_id'/2", "'ModuleDef__set_id'(${1:Objref}, ${2:Id}) $3"), ("'ModuleDef__get_name'/1", "'ModuleDef__get_name'(${1:Objref}) $2"), ("'ModuleDef__set_name'/2", "'ModuleDef__set_name'(${1:Objref}, ${2:Name}) $3"), ("'ModuleDef__get_version'/1", "'ModuleDef__get_version'(${1:Objref}) $2"), ("'ModuleDef__set_version'/2", "'ModuleDef__set_version'(${1:Objref}, ${2:Version}) $3"), ("'ModuleDef__get_defined_in'/1", "'ModuleDef__get_defined_in'(${1:Objref}) $2"), ("'ModuleDef__get_absolute_name'/1", "'ModuleDef__get_absolute_name'(${1:Objref}) $2"), ("'ModuleDef__get_containing_repository'/1", "'ModuleDef__get_containing_repository'(${1:Objref}) $2"), ("'ModuleDef_describe'/1", "'ModuleDef_describe'(${1:Objref}) $2"), ("'ModuleDef_move'/4", "'ModuleDef_move'(${1:Objref}, ${2:New_container}, ${3:New_name}, ${4:New_version}) $5"), ("'ConstantDef__get_def_kind'/1", "'ConstantDef__get_def_kind'(${1:Objref}) $2"), ("'ConstantDef_destroy'/1", "'ConstantDef_destroy'(${1:Objref}) $2"), ("'ConstantDef__get_id'/1", "'ConstantDef__get_id'(${1:Objref}) $2"), ("'ConstantDef__set_id'/2", "'ConstantDef__set_id'(${1:Objref}, ${2:Id}) $3"), ("'ConstantDef__get_name'/1", "'ConstantDef__get_name'(${1:Objref}) $2"), ("'ConstantDef__set_name'/2", "'ConstantDef__set_name'(${1:Objref}, ${2:Name}) $3"), ("'ConstantDef__get_version'/1", "'ConstantDef__get_version'(${1:Objref}) $2"), ("'ConstantDef__set_version'/2", "'ConstantDef__set_version'(${1:Objref}, ${2:Version}) $3"), ("'ConstantDef__get_defined_in'/1", "'ConstantDef__get_defined_in'(${1:Objref}) $2"), ("'ConstantDef__get_absolute_name'/1", "'ConstantDef__get_absolute_name'(${1:Objref}) $2"), ("'ConstantDef__get_containing_repository'/1", "'ConstantDef__get_containing_repository'(${1:Objref}) $2"), ("'ConstantDef_describe'/1", "'ConstantDef_describe'(${1:Objref}) $2"), ("'ConstantDef_move'/4", "'ConstantDef_move'(${1:Objref}, ${2:New_container}, ${3:New_name}, ${4:New_version}) $5"), ("'ConstantDef__get_type'/1", "'ConstantDef__get_type'(${1:Objref}) $2"), ("'ConstantDef__get_type_def'/1", "'ConstantDef__get_type_def'(${1:Objref}) $2"), ("'ConstantDef__set_type_def'/2", "'ConstantDef__set_type_def'(${1:Objref}, ${2:TypeDef}) $3"), ("'ConstantDef__get_value'/1", "'ConstantDef__get_value'(${1:Objref}) $2"), ("'ConstantDef__set_value'/2", "'ConstantDef__set_value'(${1:Objref}, ${2:Value}) $3"), ("'TypedefDef__get_def_kind'/1", "'TypedefDef__get_def_kind'(${1:Objref}) $2"), ("'TypedefDef_destroy'/1", "'TypedefDef_destroy'(${1:Objref}) $2"), ("'TypedefDef__get_id'/1", "'TypedefDef__get_id'(${1:Objref}) $2"), ("'TypedefDef__set_id'/2", "'TypedefDef__set_id'(${1:Objref}, ${2:Id}) $3"), ("'TypedefDef__get_name'/1", "'TypedefDef__get_name'(${1:Objref}) $2"), ("'TypedefDef__set_name'/2", "'TypedefDef__set_name'(${1:Objref}, ${2:Name}) $3"), ("'TypedefDef__get_version'/1", "'TypedefDef__get_version'(${1:Objref}) $2"), ("'TypedefDef__set_version'/2", "'TypedefDef__set_version'(${1:Objref}, ${2:Version}) $3"), ("'TypedefDef__get_defined_in'/1", "'TypedefDef__get_defined_in'(${1:Objref}) $2"), ("'TypedefDef__get_absolute_name'/1", "'TypedefDef__get_absolute_name'(${1:Objref}) $2"), ("'TypedefDef__get_containing_repository'/1", "'TypedefDef__get_containing_repository'(${1:Objref}) $2"), ("'TypedefDef_describe'/1", "'TypedefDef_describe'(${1:Objref}) $2"), ("'TypedefDef_move'/4", "'TypedefDef_move'(${1:Objref}, ${2:New_container}, ${3:New_name}, ${4:New_version}) $5"), ("'TypedefDef__get_type'/1", "'TypedefDef__get_type'(${1:Objref}) $2"), ("'StructDef__get_def_kind'/1", "'StructDef__get_def_kind'(${1:Objref}) $2"), ("'StructDef_destroy'/1", "'StructDef_destroy'(${1:Objref}) $2"), ("'StructDef__get_id'/1", "'StructDef__get_id'(${1:Objref}) $2"), ("'StructDef__set_id'/2", "'StructDef__set_id'(${1:Objref}, ${2:Id}) $3"), ("'StructDef__get_name'/1", "'StructDef__get_name'(${1:Objref}) $2"), ("'StructDef__set_name'/2", "'StructDef__set_name'(${1:Objref}, ${2:Name}) $3"), ("'StructDef__get_version'/1", "'StructDef__get_version'(${1:Objref}) $2"), ("'StructDef__set_version'/2", "'StructDef__set_version'(${1:Objref}, ${2:Version}) $3"), ("'StructDef__get_defined_in'/1", "'StructDef__get_defined_in'(${1:Objref}) $2"), ("'StructDef__get_absolute_name'/1", "'StructDef__get_absolute_name'(${1:Objref}) $2"), ("'StructDef__get_containing_repository'/1", "'StructDef__get_containing_repository'(${1:Objref}) $2"), ("'StructDef_describe'/1", "'StructDef_describe'(${1:Objref}) $2"), ("'StructDef_move'/4", "'StructDef_move'(${1:Objref}, ${2:New_container}, ${3:New_name}, ${4:New_version}) $5"), ("'StructDef__get_type'/1", "'StructDef__get_type'(${1:Objref}) $2"), ("'StructDef__get_members'/1", "'StructDef__get_members'(${1:Objref}) $2"), ("'StructDef__set_members'/2", "'StructDef__set_members'(${1:Objref}, ${2:Members}) $3"), ("'UnionDef__get_def_kind'/1", "'UnionDef__get_def_kind'(${1:Objref}) $2"), ("'UnionDef_destroy'/1", "'UnionDef_destroy'(${1:Objref}) $2"), ("'UnionDef__get_id'/1", "'UnionDef__get_id'(${1:Objref}) $2"), ("'UnionDef__set_id'/2", "'UnionDef__set_id'(${1:Objref}, ${2:Id}) $3"), ("'UnionDef__get_name'/1", "'UnionDef__get_name'(${1:Objref}) $2"), ("'UnionDef__set_name'/2", "'UnionDef__set_name'(${1:Objref}, ${2:Name}) $3"), ("'UnionDef__get_version'/1", "'UnionDef__get_version'(${1:Objref}) $2"), ("'UnionDef__set_version'/2", "'UnionDef__set_version'(${1:Objref}, ${2:Version}) $3"), ("'UnionDef__get_defined_in'/1", "'UnionDef__get_defined_in'(${1:Objref}) $2"), ("'UnionDef__get_absolute_name'/1", "'UnionDef__get_absolute_name'(${1:Objref}) $2"), ("'UnionDef__get_containing_repository'/1", "'UnionDef__get_containing_repository'(${1:Objref}) $2"), ("'UnionDef_describe'/1", "'UnionDef_describe'(${1:Objref}) $2"), ("'UnionDef_move'/4", "'UnionDef_move'(${1:Objref}, ${2:New_container}, ${3:New_name}, ${4:New_version}) $5"), ("'UnionDef__get_type'/1", "'UnionDef__get_type'(${1:Objref}) $2"), ("'UnionDef__get_discriminator_type'/1", "'UnionDef__get_discriminator_type'(${1:Objref}) $2"), ("'UnionDef__get_discriminator_type_def'/1", "'UnionDef__get_discriminator_type_def'(${1:Objref}) $2"), ("'UnionDef__set_discriminator_type_def'/2", "'UnionDef__set_discriminator_type_def'(${1:Objref}, ${2:TypeDef}) $3"), ("'UnionDef__get_members'/1", "'UnionDef__get_members'(${1:Objref}) $2"), ("'UnionDef__set_members'/2", "'UnionDef__set_members'(${1:Objref}, ${2:Members}) $3"), ("'EnumDef__get_def_kind'/1", "'EnumDef__get_def_kind'(${1:Objref}) $2"), ("'EnumDef_destroy'/1", "'EnumDef_destroy'(${1:Objref}) $2"), ("'EnumDef__get_id'/1", "'EnumDef__get_id'(${1:Objref}) $2"), ("'EnumDef__set_id'/2", "'EnumDef__set_id'(${1:Objref}, ${2:Id}) $3"), ("'EnumDef__get_name'/1", "'EnumDef__get_name'(${1:Objref}) $2"), ("'EnumDef__set_name'/2", "'EnumDef__set_name'(${1:Objref}, ${2:Name}) $3"), ("'EnumDef__get_version'/1", "'EnumDef__get_version'(${1:Objref}) $2"), ("'EnumDef__set_version'/2", "'EnumDef__set_version'(${1:Objref}, ${2:Version}) $3"), ("'EnumDef__get_defined_in'/1", "'EnumDef__get_defined_in'(${1:Objref}) $2"), ("'EnumDef__get_absolute_name'/1", "'EnumDef__get_absolute_name'(${1:Objref}) $2"), ("'EnumDef__get_containing_repository'/1", "'EnumDef__get_containing_repository'(${1:Objref}) $2"), ("'EnumDef_describe'/1", "'EnumDef_describe'(${1:Objref}) $2"), ("'EnumDef_move'/4", "'EnumDef_move'(${1:Objref}, ${2:New_container}, ${3:New_name}, ${4:New_version}) $5"), ("'EnumDef__get_type'/1", "'EnumDef__get_type'(${1:Objref}) $2"), ("'EnumDef__get_members'/1", "'EnumDef__get_members'(${1:Objref}) $2"), ("'EnumDef__set_members'/2", "'EnumDef__set_members'(${1:Objref}, ${2:Members}) $3"), ("'AliasDef__get_def_kind'/1", "'AliasDef__get_def_kind'(${1:Objref}) $2"), ("'AliasDef_destroy'/1", "'AliasDef_destroy'(${1:Objref}) $2"), ("'AliasDef__get_id'/1", "'AliasDef__get_id'(${1:Objref}) $2"), ("'AliasDef__set_id'/2", "'AliasDef__set_id'(${1:Objref}, ${2:Id}) $3"), ("'AliasDef__get_name'/1", "'AliasDef__get_name'(${1:Objref}) $2"), ("'AliasDef__set_name'/2", "'AliasDef__set_name'(${1:Objref}, ${2:Name}) $3"), ("'AliasDef__get_version'/1", "'AliasDef__get_version'(${1:Objref}) $2"), ("'AliasDef__set_version'/2", "'AliasDef__set_version'(${1:Objref}, ${2:Version}) $3"), ("'AliasDef__get_defined_in'/1", "'AliasDef__get_defined_in'(${1:Objref}) $2"), ("'AliasDef__get_absolute_name'/1", "'AliasDef__get_absolute_name'(${1:Objref}) $2"), ("'AliasDef__get_containing_repository'/1", "'AliasDef__get_containing_repository'(${1:Objref}) $2"), ("'AliasDef_describe'/1", "'AliasDef_describe'(${1:Objref}) $2"), ("'AliasDef_move'/4", "'AliasDef_move'(${1:Objref}, ${2:New_container}, ${3:New_name}, ${4:New_version}) $5"), ("'AliasDef__get_type'/1", "'AliasDef__get_type'(${1:Objref}) $2"), ("'AliasDef__get_original_type_def'/1", "'AliasDef__get_original_type_def'(${1:Objref}) $2"), ("'AliasDef__set_original_type_def'/2", "'AliasDef__set_original_type_def'(${1:Objref}, ${2:TypeDef}) $3"), ("'PrimitiveDef__get_def_kind'/1", "'PrimitiveDef__get_def_kind'(${1:Objref}) $2"), ("'PrimitiveDef_destroy'/1", "'PrimitiveDef_destroy'(${1:Objref}) $2"), ("'PrimitiveDef__get_type'/1", "'PrimitiveDef__get_type'(${1:Objref}) $2"), ("'PrimitiveDef__get_kind'/1", "'PrimitiveDef__get_kind'(${1:Objref}) $2"), ("'StringDef__get_def_kind'/1", "'StringDef__get_def_kind'(${1:Objref}) $2"), ("'StringDef_destroy'/1", "'StringDef_destroy'(${1:Objref}) $2"), ("'StringDef__get_type'/1", "'StringDef__get_type'(${1:Objref}) $2"), ("'StringDef__get_bound'/1", "'StringDef__get_bound'(${1:Objref}) $2"), ("'StringDef__set_bound'/2", "'StringDef__set_bound'(${1:Objref}, ${2:Bound}) $3"), ("'WstringDef__get_def_kind'/1", "'WstringDef__get_def_kind'(${1:Objref}) $2"), ("'WstringDef_destroy'/1", "'WstringDef_destroy'(${1:Objref}) $2"), ("'WstringDef__get_type'/1", "'WstringDef__get_type'(${1:Objref}) $2"), ("'WstringDef__get_bound'/1", "'WstringDef__get_bound'(${1:Objref}) $2"), ("'WstringDef__set_bound'/2", "'WstringDef__set_bound'(${1:Objref}, ${2:Bound}) $3"), ("'FixedDef__get_def_kind'/1", "'FixedDef__get_def_kind'(${1:Objref}) $2"), ("'FixedDef_destroy'/1", "'FixedDef_destroy'(${1:Objref}) $2"), ("'FixedDef__get_type'/1", "'FixedDef__get_type'(${1:Objref}) $2"), ("'FixedDef__get_digits'/1", "'FixedDef__get_digits'(${1:Objref}) $2"), ("'FixedDef__set_digits'/2", "'FixedDef__set_digits'(${1:Objref}, ${2:Digits}) $3"), ("'FixedDef__get_scale'/1", "'FixedDef__get_scale'(${1:Objref}) $2"), ("'FixedDef__set_scale'/2", "'FixedDef__set_scale'(${1:Objref}, ${2:Scale}) $3"), ("'SequenceDef__get_def_kind'/1", "'SequenceDef__get_def_kind'(${1:Objref}) $2"), ("'SequenceDef_destroy'/1", "'SequenceDef_destroy'(${1:Objref}) $2"), ("'SequenceDef__get_type'/1", "'SequenceDef__get_type'(${1:Objref}) $2"), ("'SequenceDef__get_bound'/1", "'SequenceDef__get_bound'(${1:Objref}) $2"), ("'SequenceDef__set_bound'/2", "'SequenceDef__set_bound'(${1:Objref}, ${2:Bound}) $3"), ("'SequenceDef__get_element_type'/1", "'SequenceDef__get_element_type'(${1:Objref}) $2"), ("'SequenceDef__get_element_type_def'/1", "'SequenceDef__get_element_type_def'(${1:Objref}) $2"), ("'SequenceDef__set_element_type_def'/2", "'SequenceDef__set_element_type_def'(${1:Objref}, ${2:TypeDef}) $3"), ("'ArrayDef__get_def_kind'/1", "'ArrayDef__get_def_kind'(${1:Objref}) $2"), ("'ArrayDef_destroy'/1", "'ArrayDef_destroy'(${1:Objref}) $2"), ("'ArrayDef__get_type'/1", "'ArrayDef__get_type'(${1:Objref}) $2"), ("'ArrayDef__get_length'/1", "'ArrayDef__get_length'(${1:Objref}) $2"), ("'ArrayDef__set_length'/2", "'ArrayDef__set_length'(${1:Objref}, ${2:Length}) $3"), ("'ArrayDef__get_element_type'/1", "'ArrayDef__get_element_type'(${1:Objref}) $2"), ("'ArrayDef__get_element_type_def'/1", "'ArrayDef__get_element_type_def'(${1:Objref}) $2"), ("'ArrayDef__set_element_type_def'/2", "'ArrayDef__set_element_type_def'(${1:Objref}, ${2:TypeDef}) $3"), ("'ExceptionDef__get_def_kind'/1", "'ExceptionDef__get_def_kind'(${1:Objref}) $2"), ("'ExceptionDef_destroy'/1", "'ExceptionDef_destroy'(${1:Objref}) $2"), ("'ExceptionDef__get_id'/1", "'ExceptionDef__get_id'(${1:Objref}) $2"), ("'ExceptionDef__set_id'/2", "'ExceptionDef__set_id'(${1:Objref}, ${2:Id}) $3"), ("'ExceptionDef__get_name'/1", "'ExceptionDef__get_name'(${1:Objref}) $2"), ("'ExceptionDef__set_name'/2", "'ExceptionDef__set_name'(${1:Objref}, ${2:Name}) $3"), ("'ExceptionDef__get_version'/1", "'ExceptionDef__get_version'(${1:Objref}) $2"), ("'ExceptionDef__set_version'/2", "'ExceptionDef__set_version'(${1:Objref}, ${2:Version}) $3"), ("'ExceptionDef__get_defined_in'/1", "'ExceptionDef__get_defined_in'(${1:Objref}) $2"), ("'ExceptionDef__get_absolute_name'/1", "'ExceptionDef__get_absolute_name'(${1:Objref}) $2"), ("'ExceptionDef__get_containing_repository'/1", "'ExceptionDef__get_containing_repository'(${1:Objref}) $2"), ("'ExceptionDef_describe'/1", "'ExceptionDef_describe'(${1:Objref}) $2"), ("'ExceptionDef_move'/4", "'ExceptionDef_move'(${1:Objref}, ${2:New_container}, ${3:New_name}, ${4:New_version}) $5"), ("'ExceptionDef__get_type'/1", "'ExceptionDef__get_type'(${1:Objref}) $2"), ("'ExceptionDef__get_members'/1", "'ExceptionDef__get_members'(${1:Objref}) $2"), ("'ExceptionDef__set_members'/2", "'ExceptionDef__set_members'(${1:Objref}, ${2:Members}) $3"), ("'AttributeDef__get_def_kind'/1", "'AttributeDef__get_def_kind'(${1:Objref}) $2"), ("'AttributeDef_destroy'/1", "'AttributeDef_destroy'(${1:Objref}) $2"), ("'AttributeDef__get_id'/1", "'AttributeDef__get_id'(${1:Objref}) $2"), ("'AttributeDef__set_id'/2", "'AttributeDef__set_id'(${1:Objref}, ${2:Id}) $3"), ("'AttributeDef__get_name'/1", "'AttributeDef__get_name'(${1:Objref}) $2"), ("'AttributeDef__set_name'/2", "'AttributeDef__set_name'(${1:Objref}, ${2:Name}) $3"), ("'AttributeDef__get_version'/1", "'AttributeDef__get_version'(${1:Objref}) $2"), ("'AttributeDef__set_version'/2", "'AttributeDef__set_version'(${1:Objref}, ${2:Version}) $3"), ("'AttributeDef__get_defined_in'/1", "'AttributeDef__get_defined_in'(${1:Objref}) $2"), ("'AttributeDef__get_absolute_name'/1", "'AttributeDef__get_absolute_name'(${1:Objref}) $2"), ("'AttributeDef__get_containing_repository'/1", "'AttributeDef__get_containing_repository'(${1:Objref}) $2"), ("'AttributeDef_describe'/1", "'AttributeDef_describe'(${1:Objref}) $2"), ("'AttributeDef_move'/4", "'AttributeDef_move'(${1:Objref}, ${2:New_container}, ${3:New_name}, ${4:New_version}) $5"), ("'AttributeDef__get_type'/1", "'AttributeDef__get_type'(${1:Objref}) $2"), ("'AttributeDef__get_type_def'/1", "'AttributeDef__get_type_def'(${1:Objref}) $2"), ("'AttributeDef__set_type_def'/2", "'AttributeDef__set_type_def'(${1:Objref}, ${2:TypeDef}) $3"), ("'AttributeDef__get_mode'/1", "'AttributeDef__get_mode'(${1:Objref}) $2"), ("'AttributeDef__set_mode'/2", "'AttributeDef__set_mode'(${1:Objref}, ${2:Mode}) $3"), ("'OperationDef__get_def_kind'/1", "'OperationDef__get_def_kind'(${1:Objref}) $2"), ("'OperationDef_destroy'/1", "'OperationDef_destroy'(${1:Objref}) $2"), ("'OperationDef__get_id'/1", "'OperationDef__get_id'(${1:Objref}) $2"), ("'OperationDef__set_id'/2", "'OperationDef__set_id'(${1:Objref}, ${2:Id}) $3"), ("'OperationDef__get_name'/1", "'OperationDef__get_name'(${1:Objref}) $2"), ("'OperationDef__set_name'/2", "'OperationDef__set_name'(${1:Objref}, ${2:Name}) $3"), ("'OperationDef__get_version'/1", "'OperationDef__get_version'(${1:Objref}) $2"), ("'OperationDef__set_version'/2", "'OperationDef__set_version'(${1:Objref}, ${2:Version}) $3"), ("'OperationDef__get_defined_in'/1", "'OperationDef__get_defined_in'(${1:Objref}) $2"), ("'OperationDef__get_absolute_name'/1", "'OperationDef__get_absolute_name'(${1:Objref}) $2"), ("'OperationDef__get_containing_repository'/1", "'OperationDef__get_containing_repository'(${1:Objref}) $2"), ("'OperationDef_describe'/1", "'OperationDef_describe'(${1:Objref}) $2"), ("'OperationDef_move'/4", "'OperationDef_move'(${1:Objref}, ${2:New_container}, ${3:New_name}, ${4:New_version}) $5"), ("'OperationDef__get_result'/1", "'OperationDef__get_result'(${1:Objref}) $2"), ("'OperationDef__get_result_def'/1", "'OperationDef__get_result_def'(${1:Objref}) $2"), ("'OperationDef__set_result_def'/2", "'OperationDef__set_result_def'(${1:Objref}, ${2:ResultDef}) $3"), ("'OperationDef__get_params'/1", "'OperationDef__get_params'(${1:Objref}) $2"), ("'OperationDef__set_params'/2", "'OperationDef__set_params'(${1:Objref}, ${2:Params}) $3"), ("'OperationDef__get_mode'/1", "'OperationDef__get_mode'(${1:Objref}) $2"), ("'OperationDef__set_mode'/2", "'OperationDef__set_mode'(${1:Objref}, ${2:Mode}) $3"), ("'OperationDef__get_contexts'/1", "'OperationDef__get_contexts'(${1:Objref}) $2"), ("'OperationDef__set_contexts'/2", "'OperationDef__set_contexts'(${1:Objref}, ${2:Contexts}) $3"), ("'OperationDef__get_exceptions'/1", "'OperationDef__get_exceptions'(${1:Objref}) $2"), ("'OperationDef__set_exceptions'/2", "'OperationDef__set_exceptions'(${1:Objref}, ${2:Exceptions}) $3"), ("'InterfaceDef__get_def_kind'/1", "'InterfaceDef__get_def_kind'(${1:Objref}) $2"), ("'InterfaceDef_destroy'/1", "'InterfaceDef_destroy'(${1:Objref}) $2"), ("'InterfaceDef_lookup'/2", "'InterfaceDef_lookup'(${1:Objref}, ${2:Search_name}) $3"), ("'InterfaceDef_contents'/3", "'InterfaceDef_contents'(${1:Objref}, ${2:Limit_type}, ${3:Exclude_inherited}) $4"), ("'InterfaceDef_lookup_name'/5", "'InterfaceDef_lookup_name'(${1:Objref}, ${2:Search_name}, ${3:Levels_to_search}, ${4:Limit_type}, ${5:Exclude_inherited}) $6"), ("'InterfaceDef_describe_contents'/4", "'InterfaceDef_describe_contents'(${1:Objref}, ${2:Limit_type}, ${3:Exclude_inherited}, ${4:Max_returned_objs}) $5"), ("'InterfaceDef_create_module'/4", "'InterfaceDef_create_module'(${1:Objref}, ${2:Id}, ${3:Name}, ${4:Version}) $5"), ("'InterfaceDef_create_constant'/6", "'InterfaceDef_create_constant'(${1:Objref}, ${2:Id}, ${3:Name}, ${4:Version}, ${5:Type}, ${6:Value}) $7"), ("'InterfaceDef_create_struct'/5", "'InterfaceDef_create_struct'(${1:Objref}, ${2:Id}, ${3:Name}, ${4:Version}, ${5:Members}) $6"), ("'InterfaceDef_create_union'/6", "'InterfaceDef_create_union'(${1:Objref}, ${2:Id}, ${3:Name}, ${4:Version}, ${5:Discriminator_type}, ${6:Members}) $7"), ("'InterfaceDef_create_enum'/5", "'InterfaceDef_create_enum'(${1:Objref}, ${2:Id}, ${3:Name}, ${4:Version}, ${5:Members}) $6"), ("'InterfaceDef_create_alias'/5", "'InterfaceDef_create_alias'(${1:Objref}, ${2:Id}, ${3:Name}, ${4:Version}, ${5:Original_type}) $6"), ("'InterfaceDef_create_interface'/5", "'InterfaceDef_create_interface'(${1:Objref}, ${2:Id}, ${3:Name}, ${4:Version}, ${5:Base_interfaces}) $6"), ("'InterfaceDef_create_exception'/5", "'InterfaceDef_create_exception'(${1:Objref}, ${2:Id}, ${3:Name}, ${4:Version}, ${5:Members}) $6"), ("'InterfaceDef__get_id'/1", "'InterfaceDef__get_id'(${1:Objref}) $2"), ("'InterfaceDef__set_id'/2", "'InterfaceDef__set_id'(${1:Objref}, ${2:Id}) $3"), ("'InterfaceDef__get_name'/1", "'InterfaceDef__get_name'(${1:Objref}) $2"), ("'InterfaceDef__set_name'/2", "'InterfaceDef__set_name'(${1:Objref}, ${2:Name}) $3"), ("'InterfaceDef__get_version'/1", "'InterfaceDef__get_version'(${1:Objref}) $2"), ("'InterfaceDef__set_version'/2", "'InterfaceDef__set_version'(${1:Objref}, ${2:Version}) $3"), ("'InterfaceDef__get_defined_in'/1", "'InterfaceDef__get_defined_in'(${1:Objref}) $2"), ("'InterfaceDef__get_absolute_name'/1", "'InterfaceDef__get_absolute_name'(${1:Objref}) $2"), ("'InterfaceDef__get_containing_repository'/1", "'InterfaceDef__get_containing_repository'(${1:Objref}) $2"), ("'InterfaceDef_describe'/1", "'InterfaceDef_describe'(${1:Objref}) $2"), ("'InterfaceDef_move'/4", "'InterfaceDef_move'(${1:Objref}, ${2:New_container}, ${3:New_name}, ${4:New_version}) $5"), ("'InterfaceDef__get_type'/1", "'InterfaceDef__get_type'(${1:Objref}) $2"), ("'InterfaceDef__get_base_interfaces'/1", "'InterfaceDef__get_base_interfaces'(${1:Objref}) $2"), ("'InterfaceDef__set_base_interfaces'/2", "'InterfaceDef__set_base_interfaces'(${1:Objref}, ${2:BaseInterfaces}) $3"), ("'InterfaceDef_is_a'/2", "'InterfaceDef_is_a'(${1:Objref}, ${2:Interface_id}) $3"), ("'InterfaceDef_describe_interface'/1", "'InterfaceDef_describe_interface'(${1:Objref}) $2"), ("'InterfaceDef_create_attribute'/6", "'InterfaceDef_create_attribute'(${1:Objref}, ${2:Id}, ${3:Name}, ${4:Version}, ${5:Type}, ${6:Mode}) $7"), ("'InterfaceDef_create_operation'/9", "'InterfaceDef_create_operation'(${1:Objref}, ${2:Id}, ${3:Name}, ${4:Version}, ${5:Result}, ${6:Mode}, ${7:Params}, ${8:Exceptions}, ${9:Contexts}) $10"), ("'ORB_create_struct_tc'/3", "'ORB_create_struct_tc'(${1:Id}, ${2:Name}, ${3:Members}) $4"), ("'ORB_create_union_tc'/4", "'ORB_create_union_tc'(${1:Id}, ${2:Name}, ${3:Discriminator_type}, ${4:Members}) $5"), ("'ORB_create_enum_tc'/3", "'ORB_create_enum_tc'(${1:Id}, ${2:Name}, ${3:Members}) $4"), ("'ORB_create_alias_tc'/3", "'ORB_create_alias_tc'(${1:Id}, ${2:Name}, ${3:Original_type}) $4"), ("'ORB_create_exception_tc'/3", "'ORB_create_exception_tc'(${1:Id}, ${2:Name}, ${3:Members}) $4"), ("'ORB_create_interface_tc'/2", "'ORB_create_interface_tc'(${1:Id}, ${2:Name}) $3"), ("'ORB_create_string_tc'/1", "'ORB_create_string_tc'(${1:Bound}) $2"), ("'ORB_create_wstring_tc'/1", "'ORB_create_wstring_tc'(${1:Bound}) $2"), ("'ORB_create_sequence_tc'/2", "'ORB_create_sequence_tc'(${1:Bound}, ${2:Element_type}) $3"), ("'ORB_create_recursive_sequence_tc'/2", "'ORB_create_recursive_sequence_tc'(${1:Bound}, ${2:Offset}) $3"), ("'ORB_create_array_tc'/2", "'ORB_create_array_tc'(${1:Length}, ${2:Element_type}) $3"), ('get_def_kind/1', 'get_def_kind(${1:Objref}) $2'), ('destroy/1', 'destroy(${1:Objref}) $2'), ('get_id/1', 'get_id(${1:Objref}) $2'), ('set_id/2', 'set_id(${1:Objref}, ${2:Id}) $3'), ('get_name/1', 'get_name(${1:Objref}) $2'), ('set_name/2', 'set_name(${1:Objref}, ${2:Name}) $3'), ('get_version/1', 'get_version(${1:Objref}) $2'), ('set_version/2', 'set_version(${1:Objref}, ${2:Version}) $3'), ('get_defined_in/1', 'get_defined_in(${1:Objref}) $2'), ('get_absolute_name/1', 'get_absolute_name(${1:Objref}) $2'), ('get_containing_repository/1', 'get_containing_repository(${1:Objref}) $2'), ('describe/1', 'describe(${1:Objref}) $2'), ('move/4', 'move(${1:Objref}, ${2:New_container}, ${3:New_name}, ${4:New_version}) $5'), ('lookup/2', 'lookup(${1:Objref}, ${2:Search_name}) $3'), ('contents/3', 'contents(${1:Objref}, ${2:Limit_type}, ${3:Exclude_inherited}) $4'), ('lookup_name/5', 'lookup_name(${1:Objref}, ${2:Search_name}, ${3:Levels_to_search}, ${4:Limit_type}, ${5:Exclude_inherited}) $6'), ('describe_contents/4', 'describe_contents(${1:Objref}, ${2:Limit_type}, ${3:Exclude_inherited}, ${4:Max_returned_objs}) $5'), ('create_module/4', 'create_module(${1:Objref}, ${2:Id}, ${3:Name}, ${4:Version}) $5'), ('create_constant/6', 'create_constant(${1:Objref}, ${2:Id}, ${3:Name}, ${4:Version}, ${5:Type}, ${6:Value}) $7'), ('create_struct/5', 'create_struct(${1:Objref}, ${2:Id}, ${3:Name}, ${4:Version}, ${5:Members}) $6'), ('create_union/6', 'create_union(${1:Objref}, ${2:Id}, ${3:Name}, ${4:Version}, ${5:Discriminator_type}, ${6:Members}) $7'), ('create_enum/5', 'create_enum(${1:Objref}, ${2:Id}, ${3:Name}, ${4:Version}, ${5:Members}) $6'), ('create_alias/5', 'create_alias(${1:Objref}, ${2:Id}, ${3:Name}, ${4:Version}, ${5:Original_type}) $6'), ('create_interface/5', 'create_interface(${1:Objref}, ${2:Id}, ${3:Name}, ${4:Version}, ${5:Base_interfaces}) $6'), ('create_exception/5', 'create_exception(${1:Objref}, ${2:Id}, ${3:Name}, ${4:Version}, ${5:Members}) $6'), ('get_type/1', 'get_type(${1:Objref}) $2'), ('lookup_id/2', 'lookup_id(${1:Param1}, ${2:Id}) $3'), ('get_primitive/2', 'get_primitive(${1:Objref}, ${2:Kind}) $3'), ('create_string/2', 'create_string(${1:Objref}, ${2:Bound}) $3'), ('create_wstring/2', 'create_wstring(${1:Objref}, ${2:Bound}) $3'), ('create_sequence/3', 'create_sequence(${1:Objref}, ${2:Bound}, ${3:Element_type}) $4'), ('create_array/3', 'create_array(${1:Objref}, ${2:Length}, ${3:Element_type}) $4'), ('create_idltype/2', 'create_idltype(${1:Objref}, ${2:Typecode}) $3'), ('create_fixed/3', 'create_fixed(${1:Objref}, ${2:Digits}, ${3:Scale}) $4'), ('get_type_def/1', 'get_type_def(${1:Objref}) $2'), ('set_type_def/2', 'set_type_def(${1:Objref}, ${2:TypeDef}) $3'), ('get_value/1', 'get_value(${1:Objref}) $2'), ('set_value/2', 'set_value(${1:Objref}, ${2:Value}) $3'), ('get_members/1', 'get_members(${1:Objref}) $2'), ('set_members/2', 'set_members(${1:Objref}, ${2:Members}) $3'), ('get_discriminator_type/1', 'get_discriminator_type(${1:Objref}) $2'), ('get_discriminator_type_def/1', 'get_discriminator_type_def(${1:Objref}) $2'), ('set_discriminator_type_def/2', 'set_discriminator_type_def(${1:Objref}, ${2:TypeDef}) $3'), ('get_original_type_def/1', 'get_original_type_def(${1:Objref}) $2'), ('set_original_type_def/2', 'set_original_type_def(${1:Objref}, ${2:TypeDef}) $3'), ('get_kind/1', 'get_kind(${1:Objref}) $2'), ('get_bound/1', 'get_bound(${1:Objref}) $2'), ('set_bound/2', 'set_bound(${1:Objref}, ${2:Bound}) $3'), ('get_element_type/1', 'get_element_type(${1:Objref}) $2'), ('get_element_type_def/1', 'get_element_type_def(${1:Objref}) $2'), ('set_element_type_def/2', 'set_element_type_def(${1:Objref}, ${2:TypeDef}) $3'), ('get_length/1', 'get_length(${1:Objref}) $2'), ('set_length/2', 'set_length(${1:Objref}, ${2:Length}) $3'), ('get_mode/1', 'get_mode(${1:Objref}) $2'), ('set_mode/2', 'set_mode(${1:Objref}, ${2:Mode}) $3'), ('get_result/1', 'get_result(${1:Objref}) $2'), ('get_result_def/1', 'get_result_def(${1:Objref}) $2'), ('set_result_def/2', 'set_result_def(${1:Objref}, ${2:ResultDef}) $3'), ('get_params/1', 'get_params(${1:Objref}) $2'), ('set_params/2', 'set_params(${1:Objref}, ${2:Params}) $3'), ('get_contexts/1', 'get_contexts(${1:Objref}) $2'), ('set_contexts/2', 'set_contexts(${1:Objref}, ${2:Contexts}) $3'), ('get_exceptions/1', 'get_exceptions(${1:Objref}) $2'), ('set_exceptions/2', 'set_exceptions(${1:Objref}, ${2:Exceptions}) $3'), ('get_base_interfaces/1', 'get_base_interfaces(${1:Objref}) $2'), ('set_base_interfaces/2', 'set_base_interfaces(${1:Objref}, ${2:BaseInterfaces}) $3'), ('is_a/2', 'is_a(${1:Objref}, ${2:Interface_id}) $3'), ('describe_interface/1', 'describe_interface(${1:Objref}) $2'), ('create_attribute/6', 'create_attribute(${1:Objref}, ${2:Id}, ${3:Name}, ${4:Version}, ${5:Type}, ${6:Mode}) $7'), ('create_operation/9', 'create_operation(${1:Objref}, ${2:Id}, ${3:Name}, ${4:Version}, ${5:Result}, ${6:Mode}, ${7:Params}, ${8:Exceptions}, ${9:Contexts}) $10')],
'orber_ifr_aliasdef': [("'_get_def_kind'/1", "'_get_def_kind'(${1:Param1}) $2"), ('destroy/1', 'destroy(${1:Param1}) $2'), ('cleanup_for_destroy/1', 'cleanup_for_destroy(${1:Param1}) $2'), ("'_get_id'/1", "'_get_id'(${1:Param1}) $2"), ("'_set_id'/2", "'_set_id'(${1:Param1}, ${2:ObjType}) $3"), ("'_get_name'/1", "'_get_name'(${1:Param1}) $2"), ("'_set_name'/2", "'_set_name'(${1:Param1}, ${2:ObjType}) $3"), ("'_get_version'/1", "'_get_version'(${1:Param1}) $2"), ("'_set_version'/2", "'_set_version'(${1:Param1}, ${2:ObjType}) $3"), ("'_get_defined_in'/1", "'_get_defined_in'(${1:Param1}) $2"), ("'_get_absolute_name'/1", "'_get_absolute_name'(${1:Param1}) $2"), ("'_get_containing_repository'/1", "'_get_containing_repository'(${1:Param1}) $2"), ('describe/1', 'describe(${1:Param1}) $2'), ('move/4', 'move() $1'), ("'_get_type'/1", "'_get_type'(${1:Param1}) $2"), ("'_get_original_type_def'/1", "'_get_original_type_def'() $1"), ("'_set_original_type_def'/2", "'_set_original_type_def'() $1")],
'orber_ifr_arraydef': [("'_get_def_kind'/1", "'_get_def_kind'(${1:Param1}) $2"), ('destroy/1', 'destroy(${1:Param1}) $2'), ('cleanup_for_destroy/1', 'cleanup_for_destroy(${1:Param1}) $2'), ("'_get_type'/1", "'_get_type'(${1:Param1}) $2"), ("'_get_length'/1", "'_get_length'(${1:Param1}) $2"), ("'_set_length'/2", "'_set_length'(${1:Param1}, ${2:ObjType}) $3"), ("'_get_element_type'/1", "'_get_element_type'(${1:Param1}) $2"), ("'_get_element_type_def'/1", "'_get_element_type_def'(${1:Param1}) $2"), ("'_set_element_type_def'/2", "'_set_element_type_def'() $1")],
'orber_ifr_attributedef': [("'_get_def_kind'/1", "'_get_def_kind'(${1:Param1}) $2"), ('destroy/1', 'destroy(${1:Param1}) $2'), ('cleanup_for_destroy/1', 'cleanup_for_destroy(${1:Param1}) $2'), ("'_get_id'/1", "'_get_id'(${1:Param1}) $2"), ("'_set_id'/2", "'_set_id'(${1:Param1}, ${2:ObjType}) $3"), ("'_get_name'/1", "'_get_name'(${1:Param1}) $2"), ("'_set_name'/2", "'_set_name'(${1:Param1}, ${2:ObjType}) $3"), ("'_get_version'/1", "'_get_version'(${1:Param1}) $2"), ("'_set_version'/2", "'_set_version'(${1:Param1}, ${2:ObjType}) $3"), ("'_get_defined_in'/1", "'_get_defined_in'(${1:Param1}) $2"), ("'_get_absolute_name'/1", "'_get_absolute_name'(${1:Param1}) $2"), ("'_get_containing_repository'/1", "'_get_containing_repository'() $1"), ('describe/1', 'describe(${1:Param1}) $2'), ('move/4', 'move() $1'), ("'_get_type'/1", "'_get_type'(${1:Param1}) $2"), ("'_get_type_def'/1", "'_get_type_def'(${1:Param1}) $2"), ("'_set_type_def'/2", "'_set_type_def'(${1:Param1}, ${2:ObjType}) $3"), ("'_get_mode'/1", "'_get_mode'(${1:Param1}) $2"), ("'_set_mode'/2", "'_set_mode'(${1:Param1}, ${2:ObjType}) $3")],
'orber_ifr_constantdef': [("'_get_def_kind'/1", "'_get_def_kind'(${1:Param1}) $2"), ('destroy/1', 'destroy(${1:Param1}) $2'), ('cleanup_for_destroy/1', 'cleanup_for_destroy(${1:Param1}) $2'), ("'_get_id'/1", "'_get_id'(${1:Param1}) $2"), ("'_set_id'/2", "'_set_id'(${1:Param1}, ${2:ObjType}) $3"), ("'_get_name'/1", "'_get_name'(${1:Param1}) $2"), ("'_set_name'/2", "'_set_name'(${1:Param1}, ${2:ObjType}) $3"), ("'_get_version'/1", "'_get_version'(${1:Param1}) $2"), ("'_set_version'/2", "'_set_version'(${1:Param1}, ${2:ObjType}) $3"), ("'_get_defined_in'/1", "'_get_defined_in'(${1:Param1}) $2"), ("'_get_absolute_name'/1", "'_get_absolute_name'(${1:Param1}) $2"), ("'_get_containing_repository'/1", "'_get_containing_repository'() $1"), ('describe/1', 'describe(${1:Param1}) $2'), ('move/4', 'move() $1'), ("'_get_type'/1", "'_get_type'(${1:Param1}) $2"), ("'_get_type_def'/1", "'_get_type_def'(${1:Param1}) $2"), ("'_set_type_def'/2", "'_set_type_def'(${1:Param1}, ${2:ObjType}) $3"), ("'_get_value'/1", "'_get_value'(${1:Param1}) $2"), ("'_set_value'/2", "'_set_value'(${1:Param1}, ${2:ObjType}) $3")],
'orber_ifr_contained': [("'_get_def_kind'/1", "'_get_def_kind'(${1:Param1}) $2"), ('destroy/1', 'destroy(${1:Contained_objref}) $2'), ('cleanup_for_destroy/1', 'cleanup_for_destroy(${1:Contained_objref}) $2'), ("'_get_id'/1", "'_get_id'(${1:Param1}) $2"), ("'_set_id'/2", "'_set_id'(${1:Param1}, ${2:EO_Value}) $3"), ("'_get_name'/1", "'_get_name'(${1:Param1}) $2"), ("'_set_name'/2", "'_set_name'(${1:Param1}, ${2:EO_Value}) $3"), ("'_get_version'/1", "'_get_version'(${1:Param1}) $2"), ("'_set_version'/2", "'_set_version'(${1:Param1}, ${2:EO_Value}) $3"), ("'_get_defined_in'/1", "'_get_defined_in'(${1:Param1}) $2"), ("'_get_absolute_name'/1", "'_get_absolute_name'(${1:Param1}) $2"), ("'_get_containing_repository'/1", "'_get_containing_repository'(${1:Param1}) $2"), ('describe/1', 'describe(${1:ObjRef}) $2'), ('describe/2', 'describe(${1:Object}, ${2:Def_kind}) $3'), ('move/4', 'move(${1:Param1}, ${2:New_container}, ${3:New_name}, ${4:New_version}) $5')],
'orber_ifr_container': [("'_get_def_kind'/1", "'_get_def_kind'(${1:ObjRef}) $2"), ('destroy/1', 'destroy(${1:Container_objref}) $2'), ('cleanup_for_destroy/1', 'cleanup_for_destroy(${1:Container_objref}) $2'), ('lookup/2', 'lookup(${1:ObjRef}, ${2:Search_name}) $3'), ('contents/3', 'contents(${1:ObjRef}, ${2:Limit_type}, ${3:Exclude_inherited}) $4'), ('lookup_name/5', 'lookup_name(${1:ObjRef}, ${2:Search_name}, ${3:Levels_to_search}, ${4:Limit_type}, ${5:Exclude_inherited}) $6'), ('describe_contents/4', 'describe_contents(${1:ObjRef}, ${2:Limit_type}, ${3:Exclude_inherited}, ${4:Max_returned_objs}) $5'), ('make_absolute_name/2', 'make_absolute_name(${1:Param1}, ${2:Name}) $3'), ('make_containing_repository/1', 'make_containing_repository(${1:Param1}) $2'), ('add_to_container/5', 'add_to_container(${1:ContainerRef}, ${2:Object}, ${3:Id}, ${4:Table}, ${5:Index}) $6'), ('create_module/4', 'create_module(${1:ObjRef}, ${2:Id}, ${3:Name}, ${4:Version}) $5'), ('create_constant/6', 'create_constant(${1:ObjRef}, ${2:Id}, ${3:Name}, ${4:Version}, ${5:Type}, ${6:Value}) $7'), ('create_struct/5', 'create_struct(${1:ObjRef}, ${2:Id}, ${3:Name}, ${4:Version}, ${5:Members}) $6'), ('create_union/6', 'create_union(${1:ObjRef}, ${2:Id}, ${3:Name}, ${4:Version}, ${5:Discriminator_type}, ${6:Members}) $7'), ('create_enum/5', 'create_enum(${1:ObjRef}, ${2:Id}, ${3:Name}, ${4:Version}, ${5:Members}) $6'), ('create_alias/5', 'create_alias(${1:ObjRef}, ${2:Id}, ${3:Name}, ${4:Version}, ${5:Original_type}) $6'), ('create_interface/5', 'create_interface(${1:ObjRef}, ${2:Id}, ${3:Name}, ${4:Version}, ${5:Base_interfaces}) $6'), ('create_exception/5', 'create_exception(${1:ObjRef}, ${2:Id}, ${3:Name}, ${4:Version}, ${5:Members}) $6')],
'orber_ifr_enumdef': [("'_get_def_kind'/1", "'_get_def_kind'(${1:Param1}) $2"), ('destroy/1', 'destroy(${1:Param1}) $2'), ('cleanup_for_destroy/1', 'cleanup_for_destroy(${1:Param1}) $2'), ("'_get_id'/1", "'_get_id'(${1:Param1}) $2"), ("'_set_id'/2", "'_set_id'(${1:Param1}, ${2:ObjType}) $3"), ("'_get_name'/1", "'_get_name'(${1:Param1}) $2"), ("'_set_name'/2", "'_set_name'(${1:Param1}, ${2:ObjType}) $3"), ("'_get_version'/1", "'_get_version'(${1:Param1}) $2"), ("'_set_version'/2", "'_set_version'(${1:Param1}, ${2:ObjType}) $3"), ("'_get_defined_in'/1", "'_get_defined_in'(${1:Param1}) $2"), ("'_get_absolute_name'/1", "'_get_absolute_name'(${1:Param1}) $2"), ("'_get_containing_repository'/1", "'_get_containing_repository'(${1:Param1}) $2"), ('describe/1', 'describe(${1:Param1}) $2'), ('move/4', 'move() $1'), ("'_get_type'/1", "'_get_type'(${1:Param1}) $2"), ("'_get_members'/1", "'_get_members'(${1:Param1}) $2"), ("'_set_members'/2", "'_set_members'(${1:Param1}, ${2:ObjType}) $3")],
'orber_ifr_exceptiondef': [("'_get_def_kind'/1", "'_get_def_kind'(${1:Param1}) $2"), ('destroy/1', 'destroy(${1:Param1}) $2'), ('cleanup_for_destroy/1', 'cleanup_for_destroy(${1:Param1}) $2'), ("'_get_id'/1", "'_get_id'(${1:Param1}) $2"), ("'_set_id'/2", "'_set_id'(${1:Param1}, ${2:ObjType}) $3"), ("'_get_name'/1", "'_get_name'(${1:Param1}) $2"), ("'_set_name'/2", "'_set_name'(${1:Param1}, ${2:ObjType}) $3"), ("'_get_version'/1", "'_get_version'(${1:Param1}) $2"), ("'_set_version'/2", "'_set_version'(${1:Param1}, ${2:ObjType}) $3"), ("'_get_defined_in'/1", "'_get_defined_in'(${1:Param1}) $2"), ("'_get_absolute_name'/1", "'_get_absolute_name'(${1:Param1}) $2"), ("'_get_containing_repository'/1", "'_get_containing_repository'() $1"), ('describe/1', 'describe(${1:Param1}) $2'), ('move/4', 'move() $1'), ("'_get_type'/1", "'_get_type'(${1:Param1}) $2"), ("'_get_members'/1", "'_get_members'(${1:Param1}) $2"), ("'_set_members'/2", "'_set_members'(${1:Param1}, ${2:ObjType}) $3")],
'orber_ifr_fixeddef': [("'_get_def_kind'/1", "'_get_def_kind'(${1:Param1}) $2"), ('destroy/1', 'destroy(${1:Param1}) $2'), ('cleanup_for_destroy/1', 'cleanup_for_destroy(${1:Param1}) $2'), ("'_get_type'/1", "'_get_type'(${1:Param1}) $2"), ("'_get_digits'/1", "'_get_digits'(${1:Param1}) $2"), ("'_set_digits'/2", "'_set_digits'() $1"), ("'_get_scale'/1", "'_get_scale'(${1:Param1}) $2"), ("'_set_scale'/2", "'_set_scale'() $1")],
'orber_ifr_idltype': [("'_get_def_kind'/1", "'_get_def_kind'(${1:Param1}) $2"), ('destroy/1', 'destroy(${1:IDLType_objref}) $2'), ('cleanup_for_destroy/1', 'cleanup_for_destroy(${1:IDLType_objref}) $2'), ("'_get_type'/1", "'_get_type'(${1:Param1}) $2"), ("'_get_type_def'/1", "'_get_type_def'(${1:Param1}) $2")],
'orber_ifr_interfacedef': [("'_get_def_kind'/1", "'_get_def_kind'(${1:Param1}) $2"), ('destroy/1', 'destroy(${1:Param1}) $2'), ('cleanup_for_destroy/1', 'cleanup_for_destroy(${1:Param1}) $2'), ('lookup/2', 'lookup(${1:Param1}, ${2:ObjType}) $3'), ('contents/3', 'contents(${1:Param1}, ${2:Param2}, ${3:ObjType}) $4'), ('lookup_name/5', 'lookup_name(${1:Param1}, ${2:Levels_to_search}, ${3:Limit_type}, ${4:Param4}, ${5:ObjType}) $6'), ('describe_contents/4', 'describe_contents(${1:Param1}, ${2:Exclude_inherited}, ${3:Param3}, ${4:ObjType}) $5'), ('create_module/4', 'create_module() $1'), ('create_constant/6', 'create_constant() $1'), ('create_struct/5', 'create_struct() $1'), ('create_union/6', 'create_union() $1'), ('create_enum/5', 'create_enum() $1'), ('create_alias/5', 'create_alias() $1'), ('create_interface/5', 'create_interface() $1'), ('create_exception/5', 'create_exception() $1'), ("'_get_id'/1", "'_get_id'(${1:Param1}) $2"), ("'_set_id'/2", "'_set_id'(${1:Param1}, ${2:ObjType}) $3"), ("'_get_name'/1", "'_get_name'(${1:Param1}) $2"), ("'_set_name'/2", "'_set_name'(${1:Param1}, ${2:ObjType}) $3"), ("'_get_version'/1", "'_get_version'(${1:Param1}) $2"), ("'_set_version'/2", "'_set_version'(${1:Param1}, ${2:ObjType}) $3"), ("'_get_defined_in'/1", "'_get_defined_in'(${1:Param1}) $2"), ("'_get_absolute_name'/1", "'_get_absolute_name'(${1:Param1}) $2"), ("'_get_containing_repository'/1", "'_get_containing_repository'() $1"), ('describe/1', 'describe(${1:Param1}) $2'), ('move/4', 'move() $1'), ("'_get_type'/1", "'_get_type'(${1:Param1}) $2"), ("'_get_base_interfaces'/1", "'_get_base_interfaces'(${1:Param1}) $2"), ("'_set_base_interfaces'/2", "'_set_base_interfaces'() $1"), ('is_a/2', 'is_a(${1:Param1}, ${2:ObjType}) $3'), ('describe_interface/1', 'describe_interface(${1:Param1}) $2'), ('create_attribute/6', 'create_attribute(${1:Param1}, ${2:Param2}, ${3:Param3}, ${4:Param4}, ${5:Param5}, ${6:Param6}) $7'), ('create_operation/9', 'create_operation(${1:Param1}, ${2:Name}, ${3:Version}, ${4:Result}, ${5:Mode}, ${6:Params}, ${7:Exceptions}, ${8:Param8}, ${9:ObjType}) $10')],
'orber_ifr_irobject': [("'_get_def_kind'/1", "'_get_def_kind'(${1:Param1}) $2"), ('destroy/1', 'destroy(${1:Param1}) $2')],
'orber_ifr_moduledef': [("'_get_def_kind'/1", "'_get_def_kind'(${1:Param1}) $2"), ('destroy/1', 'destroy(${1:Param1}) $2'), ('cleanup_for_destroy/1', 'cleanup_for_destroy(${1:Param1}) $2'), ('lookup/2', 'lookup(${1:Param1}, ${2:ObjType}) $3'), ('contents/3', 'contents() $1'), ('lookup_name/5', 'lookup_name() $1'), ('describe_contents/4', 'describe_contents() $1'), ('create_module/4', 'create_module() $1'), ('create_constant/6', 'create_constant() $1'), ('create_struct/5', 'create_struct() $1'), ('create_union/6', 'create_union() $1'), ('create_enum/5', 'create_enum() $1'), ('create_alias/5', 'create_alias() $1'), ('create_interface/5', 'create_interface() $1'), ('create_exception/5', 'create_exception() $1'), ("'_get_id'/1", "'_get_id'(${1:Param1}) $2"), ("'_set_id'/2", "'_set_id'(${1:Param1}, ${2:ObjType}) $3"), ("'_get_name'/1", "'_get_name'(${1:Param1}) $2"), ("'_set_name'/2", "'_set_name'(${1:Param1}, ${2:ObjType}) $3"), ("'_get_version'/1", "'_get_version'(${1:Param1}) $2"), ("'_set_version'/2", "'_set_version'(${1:Param1}, ${2:ObjType}) $3"), ("'_get_defined_in'/1", "'_get_defined_in'(${1:Param1}) $2"), ("'_get_absolute_name'/1", "'_get_absolute_name'(${1:Param1}) $2"), ("'_get_containing_repository'/1", "'_get_containing_repository'(${1:Param1}) $2"), ('describe/1', 'describe(${1:Param1}) $2'), ('move/4', 'move() $1')],
'orber_ifr_operationdef': [("'_get_def_kind'/1", "'_get_def_kind'(${1:Param1}) $2"), ('destroy/1', 'destroy(${1:Param1}) $2'), ('cleanup_for_destroy/1', 'cleanup_for_destroy(${1:Param1}) $2'), ("'_get_id'/1", "'_get_id'(${1:Param1}) $2"), ("'_set_id'/2", "'_set_id'(${1:Param1}, ${2:ObjType}) $3"), ("'_get_name'/1", "'_get_name'(${1:Param1}) $2"), ("'_set_name'/2", "'_set_name'(${1:Param1}, ${2:ObjType}) $3"), ("'_get_version'/1", "'_get_version'(${1:Param1}) $2"), ("'_set_version'/2", "'_set_version'(${1:Param1}, ${2:ObjType}) $3"), ("'_get_defined_in'/1", "'_get_defined_in'(${1:Param1}) $2"), ("'_get_absolute_name'/1", "'_get_absolute_name'(${1:Param1}) $2"), ("'_get_containing_repository'/1", "'_get_containing_repository'(${1:Param1}) $2"), ('describe/1', 'describe(${1:Param1}) $2'), ('move/4', 'move() $1'), ("'_get_result'/1", "'_get_result'() $1"), ("'_get_result_def'/1", "'_get_result_def'() $1"), ("'_set_result_def'/2", "'_set_result_def'() $1"), ("'_get_params'/1", "'_get_params'(${1:Param1}) $2"), ("'_set_params'/2", "'_set_params'() $1"), ("'_get_mode'/1", "'_get_mode'(${1:Param1}) $2"), ("'_set_mode'/2", "'_set_mode'(${1:Param1}, ${2:ObjType}) $3"), ("'_get_contexts'/1", "'_get_contexts'(${1:Param1}) $2"), ("'_set_contexts'/2", "'_set_contexts'() $1"), ("'_get_exceptions'/1", "'_get_exceptions'(${1:Param1}) $2"), ("'_set_exceptions'/2", "'_set_exceptions'() $1")],
'orber_ifr_orb': [('create_struct_tc/3', 'create_struct_tc(${1:Id}, ${2:Name}, ${3:Members}) $4'), ('create_union_tc/4', 'create_union_tc(${1:Id}, ${2:Name}, ${3:Discriminator_type}, ${4:Members}) $5'), ('create_enum_tc/3', 'create_enum_tc(${1:Id}, ${2:Name}, ${3:Members}) $4'), ('create_alias_tc/3', 'create_alias_tc(${1:Id}, ${2:Name}, ${3:Original_type}) $4'), ('create_exception_tc/3', 'create_exception_tc(${1:Id}, ${2:Name}, ${3:Members}) $4'), ('create_interface_tc/2', 'create_interface_tc(${1:Id}, ${2:Name}) $3'), ('create_string_tc/1', 'create_string_tc(${1:Bound}) $2'), ('create_wstring_tc/1', 'create_wstring_tc(${1:Bound}) $2'), ('create_sequence_tc/2', 'create_sequence_tc(${1:Bound}, ${2:Element_type}) $3'), ('create_recursive_sequence_tc/2', 'create_recursive_sequence_tc(${1:Bound}, ${2:Offset}) $3'), ('create_array_tc/2', 'create_array_tc(${1:Length}, ${2:Element_type}) $3')],
'orber_ifr_primitivedef': [("'_get_def_kind'/1", "'_get_def_kind'(${1:Param1}) $2"), ('destroy/1', 'destroy(${1:Param1}) $2'), ('cleanup_for_destroy/1', 'cleanup_for_destroy(${1:Param1}) $2'), ("'_get_type'/1", "'_get_type'(${1:Param1}) $2"), ("'_get_kind'/1", "'_get_kind'(${1:Param1}) $2")],
'orber_ifr_repository': [("'_get_def_kind'/1", "'_get_def_kind'(${1:Param1}) $2"), ('destroy/1', 'destroy(${1:Param1}) $2'), ('lookup/2', 'lookup(${1:Param1}, ${2:ObjType}) $3'), ('contents/3', 'contents(${1:Param1}, ${2:Param2}, ${3:ObjType}) $4'), ('lookup_name/5', 'lookup_name(${1:Param1}, ${2:Levels_to_search}, ${3:Limit_type}, ${4:Param4}, ${5:ObjType}) $6'), ('describe_contents/4', 'describe_contents(${1:Param1}, ${2:Exclude_inherited}, ${3:Param3}, ${4:ObjType}) $5'), ('create_module/4', 'create_module() $1'), ('create_constant/6', 'create_constant() $1'), ('create_struct/5', 'create_struct() $1'), ('create_union/6', 'create_union() $1'), ('create_enum/5', 'create_enum() $1'), ('create_alias/5', 'create_alias() $1'), ('create_interface/5', 'create_interface() $1'), ('create_exception/5', 'create_exception() $1'), ('lookup_id/2', 'lookup_id(${1:Param1}, ${2:ObjType}) $3'), ('get_primitive/2', 'get_primitive(${1:Param1}, ${2:ObjType}) $3'), ('create_string/2', 'create_string(${1:Param1}, ${2:ObjType}) $3'), ('create_wstring/2', 'create_wstring(${1:Param1}, ${2:ObjType}) $3'), ('create_fixed/3', 'create_fixed(${1:Param1}, ${2:Param2}, ${3:ObjType}) $4'), ('create_sequence/3', 'create_sequence() $1'), ('create_array/3', 'create_array() $1'), ('create_idltype/2', 'create_idltype(${1:Param1}, ${2:ObjType}) $3'), ('create_primitivedef/1', 'create_primitivedef(${1:Pkind}) $2'), ('create_primitivedef/2', 'create_primitivedef(${1:Pkind}, ${2:Transaction}) $3')],
'orber_ifr_sequencedef': [("'_get_def_kind'/1", "'_get_def_kind'(${1:Param1}) $2"), ('destroy/1', 'destroy(${1:Param1}) $2'), ('cleanup_for_destroy/1', 'cleanup_for_destroy(${1:Param1}) $2'), ("'_get_type'/1", "'_get_type'(${1:Param1}) $2"), ("'_get_bound'/1", "'_get_bound'(${1:Param1}) $2"), ("'_set_bound'/2", "'_set_bound'(${1:Param1}, ${2:ObjType}) $3"), ("'_get_element_type'/1", "'_get_element_type'(${1:Param1}) $2"), ("'_get_element_type_def'/1", "'_get_element_type_def'(${1:Param1}) $2"), ("'_set_element_type_def'/2", "'_set_element_type_def'() $1")],
'orber_ifr_stringdef': [("'_get_def_kind'/1", "'_get_def_kind'(${1:Param1}) $2"), ('destroy/1', 'destroy(${1:Param1}) $2'), ('cleanup_for_destroy/1', 'cleanup_for_destroy(${1:Param1}) $2'), ("'_get_type'/1", "'_get_type'(${1:Param1}) $2"), ("'_get_bound'/1", "'_get_bound'(${1:Param1}) $2"), ("'_set_bound'/2", "'_set_bound'() $1")],
'orber_ifr_structdef': [("'_get_def_kind'/1", "'_get_def_kind'(${1:Param1}) $2"), ('destroy/1', 'destroy(${1:Param1}) $2'), ('cleanup_for_destroy/1', 'cleanup_for_destroy(${1:Param1}) $2'), ("'_get_id'/1", "'_get_id'(${1:Param1}) $2"), ("'_set_id'/2", "'_set_id'(${1:Param1}, ${2:ObjType}) $3"), ("'_get_name'/1", "'_get_name'(${1:Param1}) $2"), ("'_set_name'/2", "'_set_name'(${1:Param1}, ${2:ObjType}) $3"), ("'_get_version'/1", "'_get_version'(${1:Param1}) $2"), ("'_set_version'/2", "'_set_version'(${1:Param1}, ${2:ObjType}) $3"), ("'_get_defined_in'/1", "'_get_defined_in'(${1:Param1}) $2"), ("'_get_absolute_name'/1", "'_get_absolute_name'(${1:Param1}) $2"), ("'_get_containing_repository'/1", "'_get_containing_repository'(${1:Param1}) $2"), ('describe/1', 'describe(${1:Param1}) $2'), ('move/4', 'move() $1'), ("'_get_type'/1", "'_get_type'(${1:Param1}) $2"), ("'_get_members'/1", "'_get_members'(${1:Param1}) $2"), ("'_set_members'/2", "'_set_members'(${1:Param1}, ${2:ObjType}) $3")],
'orber_ifr_typecode': [('equal/2', 'equal() $1'), ('kind/1', 'kind(${1:Param1}) $2'), ('id/1', 'id(${1:Param1}) $2'), ('name/1', 'name(${1:Param1}) $2'), ('member_count/1', 'member_count(${1:Param1}) $2'), ('member_name/2', 'member_name(${1:Param1}, ${2:Param2}) $3'), ('member_type/2', 'member_type(${1:Param1}, ${2:Param2}) $3'), ('member_label/2', 'member_label(${1:Param1}, ${2:Param2}) $3'), ('discriminator_type/1', 'discriminator_type(${1:Param1}) $2'), ('default_index/1', 'default_index(${1:Param1}) $2'), ("'_length'/1", "'_length'(${1:Param1}) $2"), ('content_type/1', 'content_type(${1:Param1}) $2'), ('param_count/1', 'param_count(${1:Param1}) $2'), ('parameter/2', 'parameter(${1:Param1}, ${2:Param2}) $3')],
'orber_ifr_typedef': [("'_get_def_kind'/1", "'_get_def_kind'(${1:Param1}) $2"), ('destroy/1', 'destroy(${1:TypedefDef_objref}) $2'), ('cleanup_for_destroy/1', 'cleanup_for_destroy(${1:TypedefDef_objref}) $2'), ("'_get_id'/1", "'_get_id'(${1:Param1}) $2"), ("'_set_id'/2", "'_set_id'(${1:Param1}, ${2:EO_Value}) $3"), ("'_get_name'/1", "'_get_name'(${1:Param1}) $2"), ("'_set_name'/2", "'_set_name'(${1:Param1}, ${2:EO_Value}) $3"), ("'_get_version'/1", "'_get_version'(${1:Param1}) $2"), ("'_set_version'/2", "'_set_version'(${1:Param1}, ${2:EO_Value}) $3"), ("'_get_defined_in'/1", "'_get_defined_in'(${1:Param1}) $2"), ("'_get_absolute_name'/1", "'_get_absolute_name'(${1:Param1}) $2"), ("'_get_containing_repository'/1", "'_get_containing_repository'(${1:Param1}) $2"), ('describe/1', 'describe(${1:Param1}) $2'), ('move/4', 'move(${1:Param1}, ${2:New_container}, ${3:New_name}, ${4:New_version}) $5'), ("'_get_type'/1", "'_get_type'(${1:Param1}) $2")],
'orber_ifr_uniondef': [("'_get_def_kind'/1", "'_get_def_kind'(${1:Param1}) $2"), ('destroy/1', 'destroy(${1:Param1}) $2'), ('cleanup_for_destroy/1', 'cleanup_for_destroy(${1:Param1}) $2'), ("'_get_id'/1", "'_get_id'(${1:Param1}) $2"), ("'_set_id'/2", "'_set_id'(${1:Param1}, ${2:ObjType}) $3"), ("'_get_name'/1", "'_get_name'(${1:Param1}) $2"), ("'_set_name'/2", "'_set_name'(${1:Param1}, ${2:ObjType}) $3"), ("'_get_version'/1", "'_get_version'(${1:Param1}) $2"), ("'_set_version'/2", "'_set_version'(${1:Param1}, ${2:ObjType}) $3"), ("'_get_defined_in'/1", "'_get_defined_in'(${1:Param1}) $2"), ("'_get_absolute_name'/1", "'_get_absolute_name'(${1:Param1}) $2"), ("'_get_containing_repository'/1", "'_get_containing_repository'(${1:Param1}) $2"), ('describe/1', 'describe(${1:Param1}) $2'), ('move/4', 'move() $1'), ("'_get_type'/1", "'_get_type'(${1:Param1}) $2"), ("'_get_discriminator_type'/1", "'_get_discriminator_type'(${1:Param1}) $2"), ("'_get_discriminator_type_def'/1", "'_get_discriminator_type_def'(${1:Param1}) $2"), ("'_set_discriminator_type_def'/2", "'_set_discriminator_type_def'() $1"), ("'_get_members'/1", "'_get_members'(${1:Param1}) $2"), ("'_set_members'/2", "'_set_members'(${1:Param1}, ${2:ObjType}) $3")],
'orber_ifr_utils': [('select/2', 'select(${1:Record}, ${2:Field}) $3'), ('index/2', 'index(${1:List}, ${2:Element}) $3'), ('construct/3', 'construct(${1:Record}, ${2:Field}, ${3:Value}) $4'), ('get_object/1', 'get_object(${1:Objref}) $2'), ('set_object/1', 'set_object(${1:Object}) $2'), ('get_field/2', 'get_field(${1:Objref}, ${2:FieldName}) $3'), ('set_field/3', 'set_field(${1:Objref}, ${2:FieldName}, ${3:Value}) $4'), ('write_result/1', 'write_result(${1:Wres}) $2'), ('read_result/1', 'read_result(${1:Qres}) $2'), ('ifr_transaction_read/1', 'ifr_transaction_read(${1:Fun}) $2'), ('ifr_transaction_write/1', 'ifr_transaction_write(${1:Fun}) $2'), ('ifr_transaction_read_write/1', 'ifr_transaction_read_write(${1:Fun}) $2'), ('makeref/1', 'makeref(${1:Obj}) $2'), ('unique/0', 'unique() $1'), ('existence_check/2', 'existence_check(${1:Id}, ${2:Id}) $3'), ('existence_check/3', 'existence_check(${1:Id}, ${2:Tab}, ${3:Id}) $4'), ('create_repository/0', 'create_repository() $1'), ('init_DB/2', 'init_DB(${1:Timeout}, ${2:Options}) $3'), ('init_DB/3', 'init_DB(${1:Timeout}, ${2:Options}, ${3:LightIFR}) $4')],
'orber_ifr_wstringdef': [("'_get_def_kind'/1", "'_get_def_kind'(${1:Param1}) $2"), ('destroy/1', 'destroy(${1:Param1}) $2'), ('cleanup_for_destroy/1', 'cleanup_for_destroy(${1:Param1}) $2'), ("'_get_type'/1", "'_get_type'(${1:Param1}) $2"), ("'_get_bound'/1", "'_get_bound'(${1:Param1}) $2"), ("'_set_bound'/2", "'_set_bound'() $1")],
'orber_iiop': [('start_sup/1', 'start_sup(${1:Opts}) $2'), ('request/8', 'request(${1:Param1}, ${2:Op}, ${3:Parameters}, ${4:TypeCodes}, ${5:ResponseExpected}, ${6:Timeout}, ${7:IOR}, ${8:UserCtx}) $9'), ('locate/4', 'locate(${1:Param1}, ${2:Timeout}, ${3:IOR}, ${4:UserCtx}) $5')],
'orber_iiop_inproxy': [('start/0', 'start() $1'), ('start/1', 'start(${1:Opts}) $2')],
'orber_iiop_inrequest': [('start/5', 'start(${1:GIOPHdr}, ${2:Message}, ${3:Type}, ${4:Socket}, ${5:Env}) $6'), ('start_fragment_collector/8', 'start_fragment_collector(${1:GIOPHdr}, ${2:Message}, ${3:Type}, ${4:Socket}, ${5:ReqId}, ${6:Proxy}, ${7:MaxFrags}, ${8:Env}) $9')],
'orber_iiop_insup': [('start/2', 'start(${1:Param1}, ${2:Opts}) $3'), ('start_connection/4', 'start_connection(${1:Type}, ${2:Socket}, ${3:Ref}, ${4:ProxyOptions}) $5')],
'orber_iiop_net': [('start/1', 'start(${1:Opts}) $2'), ('connect/5', 'connect(${1:Type}, ${2:S}, ${3:AcceptPid}, ${4:Ref}, ${5:ProxyOptions}) $6'), ('connections/0', 'connections() $1'), ('sockname2peername/2', 'sockname2peername(${1:SockHost}, ${2:SockPort}) $3'), ('peername2sockname/2', 'peername2sockname(${1:PeerHost}, ${2:PeerPort}) $3'), ('add_connection/5', 'add_connection(${1:Socket}, ${2:Type}, ${3:PeerData}, ${4:LocalData}, ${5:Ref}) $6'), ('add/3', 'add(${1:IP}, ${2:Param2}, ${3:Options}) $4'), ('remove/1', 'remove(${1:Ref}) $2'), ('reconfigure/1', 'reconfigure(${1:Options}) $2'), ('reconfigure/2', 'reconfigure(${1:Options}, ${2:Ref}) $3')],
'orber_iiop_net_accept': [('start/4', 'start(${1:Type}, ${2:Listen}, ${3:Ref}, ${4:ProxyOptions}) $5')],
'orber_iiop_outproxy': [('start/0', 'start() $1'), ('start/1', 'start(${1:Opts}) $2'), ('request/5', 'request(${1:Pid}, ${2:Param2}, ${3:Timeout}, ${4:Msg}, ${5:RequestId}) $6'), ('cancel/2', 'cancel(${1:Pid}, ${2:RequestId}) $3'), ('cancel/3', 'cancel(${1:Pid}, ${2:RequestId}, ${3:MRef}) $4')],
'orber_iiop_outsup': [('start/2', 'start(${1:Param1}, ${2:Opts}) $3'), ('connect/7', 'connect(${1:Host}, ${2:Port}, ${3:SocketType}, ${4:SocketOptions}, ${5:Parent}, ${6:Key}, ${7:NewKey}) $8')],
'orber_iiop_pm': [('start/0', 'start() $1'), ('start/1', 'start(${1:Opts}) $2')],
'orber_iiop_socketsup': [('start/2', 'start(${1:Param1}, ${2:Opts}) $3'), ('start_accept/3', 'start_accept(${1:Type}, ${2:Listen}, ${3:Ref}) $4'), ('start_accept/4', 'start_accept(${1:Type}, ${2:Listen}, ${3:Ref}, ${4:ProxyOptions}) $5')],
'orber_iiop_tracer': [('new_out_connection/5', 'new_out_connection(${1:Param1}, ${2:PHost}, ${3:PPort}, ${4:SHost}, ${5:SPort}) $6'), ('new_in_connection/5', 'new_in_connection(${1:Param1}, ${2:PHost}, ${3:PPort}, ${4:SHost}, ${5:SPort}) $6'), ('closed_in_connection/1', 'closed_in_connection(${1:Arg}) $2'), ('closed_out_connection/1', 'closed_out_connection(${1:Arg}) $2'), ('in_request_encoded/6', 'in_request_encoded(${1:Ref}, ${2:Param2}, ${3:Ctx}, ${4:Op}, ${5:Bin}, ${6:Args}) $7'), ('in_reply_encoded/6', 'in_reply_encoded(${1:Ref}, ${2:Param2}, ${3:Ctx}, ${4:Op}, ${5:Bin}, ${6:Args}) $7'), ('out_reply_encoded/6', 'out_reply_encoded(${1:Ref}, ${2:ObjKey}, ${3:Ctx}, ${4:Op}, ${5:Bin}, ${6:Args}) $7'), ('out_request_encoded/6', 'out_request_encoded(${1:Ref}, ${2:Param2}, ${3:Ctx}, ${4:Op}, ${5:Bin}, ${6:Args}) $7'), ('in_request/6', 'in_request(${1:Ref}, ${2:ObjKey}, ${3:Ctx}, ${4:Op}, ${5:Params}, ${6:Args}) $7'), ('in_reply/6', 'in_reply(${1:Ref}, ${2:Param2}, ${3:Ctx}, ${4:Op}, ${5:Reply}, ${6:Args}) $7'), ('out_reply/6', 'out_reply(${1:Ref}, ${2:ObjKey}, ${3:Ctx}, ${4:Op}, ${5:Reply}, ${6:Args}) $7'), ('out_request/6', 'out_request(${1:Ref}, ${2:Param2}, ${3:Ctx}, ${4:Op}, ${5:Params}, ${6:Args}) $7')],
'orber_iiop_tracer_silent': [('new_out_connection/5', 'new_out_connection(${1:Param1}, ${2:PHost}, ${3:PPort}, ${4:SHost}, ${5:SPort}) $6'), ('new_in_connection/5', 'new_in_connection(${1:Param1}, ${2:PHost}, ${3:PPort}, ${4:SHost}, ${5:SPort}) $6'), ('closed_in_connection/1', 'closed_in_connection(${1:Arg}) $2'), ('closed_out_connection/1', 'closed_out_connection(${1:Arg}) $2'), ('in_request_encoded/6', 'in_request_encoded(${1:Param1}, ${2:Param2}, ${3:Param3}, ${4:Param4}, ${5:Bin}, ${6:Args}) $7'), ('in_reply_encoded/6', 'in_reply_encoded(${1:Param1}, ${2:Param2}, ${3:Param3}, ${4:Param4}, ${5:Bin}, ${6:Args}) $7'), ('out_reply_encoded/6', 'out_reply_encoded(${1:Param1}, ${2:Param2}, ${3:Param3}, ${4:Param4}, ${5:Bin}, ${6:Args}) $7'), ('out_request_encoded/6', 'out_request_encoded(${1:Param1}, ${2:Param2}, ${3:Param3}, ${4:Param4}, ${5:Bin}, ${6:Args}) $7'), ('in_request/6', 'in_request(${1:Ref}, ${2:Param2}, ${3:Param3}, ${4:Op}, ${5:Params}, ${6:Args}) $7'), ('in_reply/6', 'in_reply(${1:Ref}, ${2:Param2}, ${3:Param3}, ${4:Op}, ${5:Reply}, ${6:Args}) $7'), ('out_reply/6', 'out_reply(${1:Ref}, ${2:Param2}, ${3:Param3}, ${4:Op}, ${5:Reply}, ${6:Args}) $7'), ('out_request/6', 'out_request(${1:Ref}, ${2:Param2}, ${3:Param3}, ${4:Op}, ${5:Params}, ${6:Args}) $7')],
'orber_iiop_tracer_stealth': [('new_out_connection/5', 'new_out_connection(${1:Param1}, ${2:PHost}, ${3:PPort}, ${4:SHost}, ${5:SPort}) $6'), ('new_in_connection/5', 'new_in_connection(${1:Param1}, ${2:PHost}, ${3:PPort}, ${4:SHost}, ${5:SPort}) $6'), ('closed_in_connection/1', 'closed_in_connection(${1:Arg}) $2'), ('closed_out_connection/1', 'closed_out_connection(${1:Arg}) $2'), ('in_request_encoded/6', 'in_request_encoded(${1:Param1}, ${2:Param2}, ${3:Param3}, ${4:Param4}, ${5:Bin}, ${6:Args}) $7'), ('in_reply_encoded/6', 'in_reply_encoded(${1:Param1}, ${2:Param2}, ${3:Param3}, ${4:Param4}, ${5:Bin}, ${6:Args}) $7'), ('out_reply_encoded/6', 'out_reply_encoded(${1:Param1}, ${2:Param2}, ${3:Param3}, ${4:Param4}, ${5:Bin}, ${6:Args}) $7'), ('out_request_encoded/6', 'out_request_encoded(${1:Param1}, ${2:Param2}, ${3:Param3}, ${4:Param4}, ${5:Bin}, ${6:Args}) $7'), ('in_request/6', 'in_request(${1:Ref}, ${2:Param2}, ${3:Param3}, ${4:Op}, ${5:Params}, ${6:Args}) $7'), ('in_reply/6', 'in_reply(${1:Ref}, ${2:Param2}, ${3:Param3}, ${4:Op}, ${5:Reply}, ${6:Args}) $7'), ('out_reply/6', 'out_reply(${1:Ref}, ${2:Param2}, ${3:Param3}, ${4:Op}, ${5:Reply}, ${6:Args}) $7'), ('out_request/6', 'out_request(${1:Ref}, ${2:Param2}, ${3:Param3}, ${4:Op}, ${5:Params}, ${6:Args}) $7')],
'orber_initial_references': [('start/1', 'start(${1:Env}) $2'), ('shutdown/1', 'shutdown(${1:EO_this}) $2'), ('init/1', 'init(${1:Param1}) $2'), ('terminate/2', 'terminate(${1:Param1}, ${2:Param2}) $3'), ('handle_call/3', 'handle_call(${1:Param1}, ${2:Param2}, ${3:State}) $4'), ('code_change/3', 'code_change(${1:Param1}, ${2:State}, ${3:Param3}) $4'), ('get/2', 'get() $1'), ('list/1', 'list(${1:EO_this}) $2'), ('add/3', 'add(${1:EO_this}, ${2:Id}, ${3:ObjRef}) $4'), ('remove/2', 'remove(${1:EO_this}, ${2:Id}) $3'), ('get/1', 'get() $1'), ('list/0', 'list() $1'), ('add/2', 'add(${1:Id}, ${2:ObjRef}) $3'), ('remove/1', 'remove(${1:Id}) $2'), ('typeID/0', 'typeID() $1'), ('install/2', 'install(${1:Timeout}, ${2:Options}) $3'), ('oe_is_a/1', 'oe_is_a(${1:Param1}) $2'), ('oe_tc/1', 'oe_tc(${1:Param1}) $2'), ('oe_get_interface/0', 'oe_get_interface() $1')],
'orber_objectkeys': [('start/1', 'start(${1:Opts}) $2'), ('stop/0', 'stop() $1'), ('stop_all/0', 'stop_all() $1'), ('get_pid/1', 'get_pid(${1:Objkey}) $2'), ('is_persistent/1', 'is_persistent(${1:Objkey}) $2'), ('register/2', 'register(${1:Objkey}, ${2:Pid}) $3'), ('register/3', 'register(${1:Objkey}, ${2:Pid}, ${3:Type}) $4'), ('delete/1', 'delete(${1:Objkey}) $2'), ('create_schema/1', 'create_schema(${1:Nodes}) $2'), ('check/1', 'check(${1:Objkey}) $2'), ('remove_old_keys/0', 'remove_old_keys() $1')],
'orber_pi': [('new_out_connection/5', 'new_out_connection(${1:PIs}, ${2:Host}, ${3:Port}, ${4:SHost}, ${5:SPort}) $6'), ('new_in_connection/5', 'new_in_connection(${1:PIs}, ${2:Host}, ${3:Port}, ${4:SHost}, ${5:SPort}) $6'), ('closed_in_connection/2', 'closed_in_connection(${1:PIs}, ${2:Ref}) $3'), ('closed_out_connection/2', 'closed_out_connection(${1:PIs}, ${2:Ref}) $3'), ('in_request_enc/4', 'in_request_enc(${1:PIs}, ${2:ReqHdr}, ${3:Ref}, ${4:Msg}) $5'), ('out_reply_enc/5', 'out_reply_enc(${1:PIs}, ${2:ReqHdr}, ${3:Ref}, ${4:Msg}, ${5:Ctx}) $6'), ('out_request_enc/6', 'out_request_enc(${1:PIs}, ${2:ObjKey}, ${3:Ctx}, ${4:Op}, ${5:Ref}, ${6:Msg}) $7'), ('in_reply_enc/6', 'in_reply_enc(${1:PIs}, ${2:ObjKey}, ${3:Ctx}, ${4:Op}, ${5:Ref}, ${6:Msg}) $7'), ('in_request/4', 'in_request(${1:PIs}, ${2:ReqHdr}, ${3:Ref}, ${4:Msg}) $5'), ('out_reply/5', 'out_reply(${1:PIs}, ${2:ReqHdr}, ${3:Ref}, ${4:Msg}, ${5:Ctx}) $6'), ('out_request/6', 'out_request(${1:PIs}, ${2:ObjKey}, ${3:Ctx}, ${4:Op}, ${5:Ref}, ${6:Msg}) $7'), ('in_reply/6', 'in_reply(${1:PIs}, ${2:ObjKey}, ${3:Ctx}, ${4:Op}, ${5:Ref}, ${6:Msg}) $7'), ('server_start_receive/7', 'server_start_receive(${1:PIs}, ${2:Version}, ${3:ReqHdr}, ${4:Rest}, ${5:Len}, ${6:ByteOrder}, ${7:Msg}) $8'), ('server_start_send/2', 'server_start_send(${1:PIs}, ${2:SRI}) $3'), ('client_receive/2', 'client_receive(${1:CRI}, ${2:PIs}) $3'), ('client_send/2', 'client_send(${1:CRI}, ${2:PIs}) $3'), ('codefactory_create_codec/1', 'codefactory_create_codec(${1:Param1}) $2'), ('codec_encode/2', 'codec_encode(${1:Version}, ${2:Param2}) $3'), ('codec_encode_value/2', 'codec_encode_value(${1:Version}, ${2:Param2}) $3'), ('codec_decode/2', 'codec_decode(${1:Version}, ${2:Param2}) $3'), ('codec_decode_value/3', 'codec_decode_value(${1:Version}, ${2:Bytes}, ${3:Param3}) $4'), ("'_get_request_id'/1", "'_get_request_id'(${1:Param1}) $2"), ("'_get_operation'/1", "'_get_operation'(${1:Param1}) $2"), ("'_get_arguments'/1", "'_get_arguments'(${1:Param1}) $2"), ("'_get_exceptions'/1", "'_get_exceptions'(${1:Param1}) $2"), ("'_get_contexts'/1", "'_get_contexts'(${1:Param1}) $2"), ("'_get_operation_context'/1", "'_get_operation_context'(${1:Param1}) $2"), ("'_get_result'/1", "'_get_result'(${1:Param1}) $2"), ("'_get_response_expected'/1", "'_get_response_expected'(${1:Param1}) $2"), ("'_get_sync_scope'/1", "'_get_sync_scope'(${1:Param1}) $2"), ("'_get_reply_status'/1", "'_get_reply_status'(${1:Param1}) $2"), ("'_get_forward_reference'/1", "'_get_forward_reference'(${1:Param1}) $2"), ('get_slot/2', 'get_slot(${1:Param1}, ${2:Param2}) $3'), ('get_request_service_context/2', 'get_request_service_context(${1:Param1}, ${2:Param2}) $3'), ('get_reply_service_context/2', 'get_reply_service_context(${1:Param1}, ${2:Param2}) $3'), ("'_get_target'/1", "'_get_target'(${1:Param1}) $2"), ("'_get_effective_target'/1", "'_get_effective_target'(${1:Param1}) $2"), ("'_get_effective_profile'/1", "'_get_effective_profile'(${1:Param1}) $2"), ("'_get_received_exception'/1", "'_get_received_exception'(${1:Param1}) $2"), ("'_get_received_exception_id'/1", "'_get_received_exception_id'(${1:Param1}) $2"), ('get_effective_component/2', 'get_effective_component(${1:Param1}, ${2:Param2}) $3'), ('get_effective_components/2', 'get_effective_components(${1:Param1}, ${2:Param2}) $3'), ('get_request_policy/2', 'get_request_policy(${1:Param1}, ${2:Param2}) $3'), ('add_request_service_policy/3', 'add_request_service_policy(${1:Param1}, ${2:Param2}, ${3:Param3}) $4'), ("'_get_sending_exception'/1", "'_get_sending_exception'(${1:Param1}) $2"), ("'_get_object_id'/1", "'_get_object_id'(${1:Param1}) $2"), ("'_get_adapter_id'/1", "'_get_adapter_id'(${1:Param1}) $2"), ("'_get_target_most_derived_interface'/1", "'_get_target_most_derived_interface'() $1"), ('get_server_policy/2', 'get_server_policy(${1:Param1}, ${2:Param2}) $3'), ('set_slot/3', 'set_slot(${1:Param1}, ${2:Param2}, ${3:Param3}) $4'), ('target_is_a/2', 'target_is_a(${1:Param1}, ${2:IFRId}) $3'), ('add_reply_service_context/3', 'add_reply_service_context(${1:Param1}, ${2:Param2}, ${3:Param3}) $4')],
'orber_request_number': [('start/1', 'start(${1:Opts}) $2'), ('get/0', 'get() $1'), ('reset/0', 'reset() $1')],
'orber_socket': [('start/0', 'start() $1'), ('connect/4', 'connect(${1:Type}, ${2:Host}, ${3:Port}, ${4:Options}) $5'), ('listen/3', 'listen(${1:Type}, ${2:Port}, ${3:Options}) $4'), ('listen/4', 'listen(${1:Param1}, ${2:Port}, ${3:Options}, ${4:Exception}) $5'), ('accept/2', 'accept(${1:Type}, ${2:ListenSocket}) $3'), ('accept/3', 'accept(${1:Param1}, ${2:ListenSocket}, ${3:Timeout}) $4'), ('write/3', 'write(${1:Param1}, ${2:Socket}, ${3:Bytes}) $4'), ('controlling_process/3', 'controlling_process(${1:Param1}, ${2:Socket}, ${3:Pid}) $4'), ('close/2', 'close(${1:Param1}, ${2:Socket}) $3'), ('peername/2', 'peername(${1:Param1}, ${2:Socket}) $3'), ('sockname/2', 'sockname(${1:Param1}, ${2:Socket}) $3'), ('peerdata/2', 'peerdata(${1:Param1}, ${2:Socket}) $3'), ('peercert/2', 'peercert(${1:Type}, ${2:Socket}) $3'), ('sockdata/2', 'sockdata(${1:Param1}, ${2:Socket}) $3'), ('setopts/3', 'setopts(${1:Param1}, ${2:Socket}, ${3:Opts}) $4'), ('clear/2', 'clear(${1:Param1}, ${2:Socket}) $3'), ('shutdown/3', 'shutdown(${1:Param1}, ${2:Socket}, ${3:How}) $4'), ('post_accept/2', 'post_accept(${1:Type}, ${2:Socket}) $3'), ('post_accept/3', 'post_accept(${1:Param1}, ${2:Socket}, ${3:Timeout}) $4')],
'orber_tb': [('wait_for_tables/1', 'wait_for_tables(${1:Tables}) $2'), ('wait_for_tables/2', 'wait_for_tables(${1:Tables}, ${2:Timeout}) $3'), ('wait_for_tables/3', 'wait_for_tables(${1:Tables}, ${2:Timeout}, ${3:Attempts}) $4'), ('is_loaded/0', 'is_loaded() $1'), ('is_loaded/1', 'is_loaded(${1:Appl}) $2'), ('is_running/0', 'is_running() $1'), ('is_running/1', 'is_running(${1:Appl}) $2'), ('info/2', 'info(${1:Format}, ${2:Args}) $3'), ('error/2', 'error(${1:Format}, ${2:Args}) $3'), ('unique/1', 'unique(${1:List}) $2'), ('keysearch/2', 'keysearch(${1:Key}, ${2:KeyValue}) $3'), ('keysearch/3', 'keysearch(${1:Key}, ${2:KeyValue}, ${3:Default}) $4'), ('check_illegal_tcp_options/1', 'check_illegal_tcp_options(${1:Options}) $2')],
'orber_tc': [('null/0', 'null() $1'), ('void/0', 'void() $1'), ('short/0', 'short() $1'), ('unsigned_short/0', 'unsigned_short() $1'), ('long/0', 'long() $1'), ('longdouble/0', 'longdouble() $1'), ('unsigned_long/0', 'unsigned_long() $1'), ('long_long/0', 'long_long() $1'), ('unsigned_long_long/0', 'unsigned_long_long() $1'), ('float/0', 'float() $1'), ('double/0', 'double() $1'), ('boolean/0', 'boolean() $1'), ('char/0', 'char() $1'), ('wchar/0', 'wchar() $1'), ('octet/0', 'octet() $1'), ('any/0', 'any() $1'), ('typecode/0', 'typecode() $1'), ('principal/0', 'principal() $1'), ('object_reference/2', 'object_reference(${1:Id}, ${2:Name}) $3'), ('struct/3', 'struct(${1:Id}, ${2:Name}, ${3:ElementList}) $4'), ('union/5', 'union(${1:Id}, ${2:Name}, ${3:DiscrTC}, ${4:Default}, ${5:ElementList}) $6'), ('enum/3', 'enum(${1:Id}, ${2:Name}, ${3:ElementList}) $4'), ('string/1', 'string(${1:Length}) $2'), ('wstring/1', 'wstring(${1:Length}) $2'), ('sequence/2', 'sequence(${1:ElemTC}, ${2:Length}) $3'), ('array/2', 'array(${1:ElemTC}, ${2:Length}) $3'), ('alias/3', 'alias(${1:Id}, ${2:Name}, ${3:TC}) $4'), ('exception/3', 'exception(${1:Id}, ${2:Name}, ${3:ElementList}) $4'), ('fixed/2', 'fixed(${1:Digits}, ${2:Scale}) $3'), ('value/5', 'value(${1:RepId}, ${2:Name}, ${3:ValueModifier}, ${4:TC}, ${5:ElementList}) $6'), ('value_box/3', 'value_box(${1:RepId}, ${2:Name}, ${3:TC}) $4'), ('native/2', 'native(${1:RepId}, ${2:Name}) $3'), ('abstract_interface/2', 'abstract_interface(${1:RepId}, ${2:Name}) $3'), ('get_tc/1', 'get_tc(${1:Param1}) $2'), ('check_tc/1', 'check_tc(${1:Param1}) $2')],
'orber_typedefs': [('get_op_def/2', 'get_op_def(${1:Objkey}, ${2:Op}) $3')],
'orber_web': [('menu/2', 'menu(${1:Param1}, ${2:Args}) $3'), ('configure/2', 'configure(${1:Param1}, ${2:Param2}) $3'), ('info/2', 'info(${1:Param1}, ${2:Param2}) $3'), ('nameservice/2', 'nameservice(${1:Param1}, ${2:Param2}) $3'), ('ifr_select/2', 'ifr_select(${1:Param1}, ${2:Param2}) $3'), ('ifr_data/2', 'ifr_data(${1:Param1}, ${2:Param2}) $3'), ('create/2', 'create(${1:Param1}, ${2:Param2}) $3'), ('delete_ctx/2', 'delete_ctx(${1:Param1}, ${2:Param2}) $3'), ('add_ctx/2', 'add_ctx(${1:Param1}, ${2:Param2}) $3'), ('delete_obj/2', 'delete_obj(${1:Param1}, ${2:Param2}) $3')],
'orber_web_server': [('init/1', 'init(${1:Param1}) $2'), ('handle_call/3', 'handle_call(${1:What}, ${2:Param2}, ${3:State}) $4'), ('handle_cast/2', 'handle_cast(${1:Param1}, ${2:State}) $3'), ('handle_info/2', 'handle_info(${1:Param1}, ${2:State}) $3')],
'OrberApp_IFR_impl': [('get_absolute_name/3', 'get_absolute_name(${1:Param1}, ${2:State}, ${3:TypeID}) $4'), ('get_user_exception_type/3', 'get_user_exception_type(${1:Param1}, ${2:State}, ${3:TypeId}) $4')],
'cpu_sup': [('start_link/0', 'start_link() $1'), ('start/0', 'start() $1'), ('stop/0', 'stop() $1')],
'disksup': [('start_link/0', 'start_link() $1')],
'memsup': [('start_link/0', 'start_link() $1')],
'nteventlog': [('start_link/2', 'start_link(${1:Ident}, ${2:MFA}) $3'), ('start/2', 'start(${1:Ident}, ${2:MFA}) $3'), ('stop/0', 'stop() $1')],
'os_mon': [('call/2', 'call(${1:Service}, ${2:Request}) $3'), ('call/3', 'call(${1:Service}, ${2:Request}, ${3:Timeout}) $4'), ('get_env/2', 'get_env(${1:Service}, ${2:Param}) $3')],
'os_mon_mib': [('load/1', 'load(${1:Agent}) $2'), ('unload/1', 'unload(${1:Agent}) $2')],
'os_mon_sysinfo': [('start_link/0', 'start_link() $1')],
'os_sup': [('start_link/1', 'start_link(${1:Param1}) $2'), ('start/0', 'start() $1'), ('stop/0', 'stop() $1')],
'otp_mib': [('load/1', 'load(${1:Agent}) $2'), ('unload/1', 'unload(${1:Agent}) $2')],
'leex': [('compile/3', 'compile(${1:Param1}, ${2:Param2}, ${3:Param3}) $4'), ('file/1', 'file(${1:File}) $2'), ('file/2', 'file(${1:File}, ${2:Options}) $3'), ('format_error/1', 'format_error(${1:Param1}) $2')],
'yecc': [('compile/3', 'compile(${1:Param1}, ${2:Param2}, ${3:Param3}) $4'), ('file/1', 'file(${1:File}) $2'), ('file/2', 'file(${1:File}, ${2:Options}) $3'), ('format_error/1', 'format_error(${1:Param1}) $2')],
'yeccparser': [('parse/1', 'parse(${1:Tokens}) $2'), ('parse_and_scan/1', 'parse_and_scan(${1:Param1}) $2'), ('format_error/1', 'format_error(${1:Message}) $2')],
'yeccscan': [('scan/1', 'scan(${1:Inport}) $2'), ('scan/3', 'scan(${1:Inport}, ${2:Prompt}, ${3:Line1}) $4')],
'egd': [('create/2', 'create(${1:Width}, ${2:Height}) $3'), ('destroy/1', 'destroy(${1:Image}) $2'), ('information/1', 'information(${1:Pid}) $2')],
'egd_font': [('load/1', 'load(${1:Filename}) $2'), ('size/1', 'size(${1:Font}) $2'), ('glyph/2', 'glyph(${1:Font}, ${2:Code}) $3')],
'egd_png': [('binary/3', 'binary(${1:W}, ${2:H}, ${3:Param3}) $4')],
'egd_primitives': [('create/2', 'create(${1:W}, ${2:H}) $3'), ('color/1', 'color(${1:C}) $2'), ('pixel/3', 'pixel(${1:I}, ${2:Point}, ${3:Color}) $4'), ('polygon/3', 'polygon(${1:I}, ${2:Points}, ${3:Color}) $4'), ('line/4', 'line(${1:I}, ${2:Sp}, ${3:Ep}, ${4:Color}) $5'), ('line/5', 'line(${1:I}, ${2:Sp}, ${3:Ep}, ${4:Stroke}, ${5:Color}) $6'), ('arc/4', 'arc(${1:I}, ${2:Sp}, ${3:Ep}, ${4:Color}) $5'), ('arc/5', 'arc(${1:I}, ${2:Sp}, ${3:Ep}, ${4:D}, ${5:Color}) $6'), ('rectangle/4', 'rectangle(${1:I}, ${2:Sp}, ${3:Ep}, ${4:Color}) $5'), ('filledRectangle/4', 'filledRectangle(${1:I}, ${2:Sp}, ${3:Ep}, ${4:Color}) $5'), ('filledEllipse/4', 'filledEllipse(${1:I}, ${2:Sp}, ${3:Ep}, ${4:Color}) $5'), ('filledTriangle/5', 'filledTriangle(${1:I}, ${2:P1}, ${3:P2}, ${4:P3}, ${5:Color}) $6'), ('text/5', 'text(${1:I}, ${2:Param2}, ${3:Font}, ${4:Text}, ${5:Color}) $6')],
'egd_render': [('binary/1', 'binary(${1:Image}) $2'), ('binary/2', 'binary(${1:Image}, ${2:Type}) $3')],
'percept': [('profile/1', 'profile(${1:Filename}) $2'), ('profile/2', 'profile(${1:Filename}, ${2:Options}) $3'), ('profile/3', 'profile(${1:Filename}, ${2:MFA}, ${3:Options}) $4'), ('stop_profile/0', 'stop_profile() $1'), ('start_webserver/0', 'start_webserver() $1'), ('start_webserver/1', 'start_webserver(${1:Param1}) $2'), ('stop_webserver/0', 'stop_webserver() $1'), ('stop_webserver/1', 'stop_webserver(${1:Port}) $2'), ('analyze/1', 'analyze(${1:Filename}) $2'), ('start/2', 'start(${1:Type}, ${2:Args}) $3'), ('stop/1', 'stop(${1:State}) $2')],
'percept_analyzer': [('minmax/1', 'minmax(${1:Data}) $2'), ('waiting_activities/1', 'waiting_activities(${1:Activities}) $2'), ('activities2count/2', 'activities2count(${1:Acts}, ${2:Param2}) $3'), ('activities2count/3', 'activities2count(${1:Acts}, ${2:StartTs}, ${3:Param3}) $4'), ('activities2count2/2', 'activities2count2(${1:Acts}, ${2:StartTs}) $3'), ('analyze_activities/2', 'analyze_activities(${1:Threshold}, ${2:Activities}) $3'), ('runnable_count/1', 'runnable_count(${1:Activities}) $2'), ('runnable_count/2', 'runnable_count(${1:Activities}, ${2:StartValue}) $3'), ('seconds2ts/2', 'seconds2ts(${1:Seconds}, ${2:StartTs}) $3'), ('minmax_activities/2', 'minmax_activities(${1:Activities}, ${2:Count}) $3'), ('mean/1', 'mean(${1:List}) $2')],
'percept_db': [('start/0', 'start() $1'), ('stop/0', 'stop() $1'), ('insert/1', 'insert(${1:Trace}) $2'), ('select/2', 'select(${1:Table}, ${2:Options}) $3'), ('select/1', 'select(${1:Query}) $2'), ('consolidate/0', 'consolidate() $1')],
'percept_graph': [('proc_lifetime/3', 'proc_lifetime(${1:SessionID}, ${2:Env}, ${3:Input}) $4'), ('graph/3', 'graph(${1:SessionID}, ${2:Env}, ${3:Input}) $4'), ('scheduler_graph/3', 'scheduler_graph(${1:SessionID}, ${2:Env}, ${3:Input}) $4'), ('activity/3', 'activity(${1:SessionID}, ${2:Env}, ${3:Input}) $4'), ('percentage/3', 'percentage(${1:SessionID}, ${2:Env}, ${3:Input}) $4')],
'percept_html': [('page/3', 'page(${1:SessionID}, ${2:Env}, ${3:Input}) $4'), ('codelocation_page/3', 'codelocation_page(${1:SessionID}, ${2:Env}, ${3:Input}) $4'), ('databases_page/3', 'databases_page(${1:SessionID}, ${2:Param2}, ${3:Param3}) $4'), ('load_database_page/3', 'load_database_page(${1:SessionID}, ${2:Env}, ${3:Input}) $4'), ('processes_page/3', 'processes_page(${1:SessionID}, ${2:Param2}, ${3:Param3}) $4'), ('concurrency_page/3', 'concurrency_page(${1:SessionID}, ${2:Env}, ${3:Input}) $4'), ('process_info_page/3', 'process_info_page(${1:SessionID}, ${2:Env}, ${3:Input}) $4')],
'percept_image': [('proc_lifetime/5', 'proc_lifetime(${1:Width}, ${2:Height}, ${3:Start}, ${4:End}, ${5:ProfileTime}) $6'), ('percentage/3', 'percentage(${1:Width}, ${2:Height}, ${3:Percentage}) $4'), ('graph/3', 'graph(${1:Width}, ${2:Height}, ${3:Data}) $4'), ('graph/4', 'graph(${1:Width}, ${2:Height}, ${3:Param3}, ${4:Data}) $5'), ('activities/3', 'activities(${1:Width}, ${2:Height}, ${3:Activities}) $4'), ('activities/4', 'activities(${1:Width}, ${2:Height}, ${3:Range}, ${4:Activities}) $5')],
'pman': [('start/0', 'start() $1'), ('start_notimeout/0', 'start_notimeout() $1'), ('start/1', 'start(${1:LIModuleExcluded}) $2'), ('start_notimeout/1', 'start_notimeout(${1:LIModuleExcluded}) $2'), ('proc/1', 'proc(${1:Param1}) $2'), ('proc/3', 'proc(${1:X}, ${2:Y}, ${3:Z}) $4')],
'pman_buf': [('start/2', 'start(${1:Editor}, ${2:FileName}) $3'), ('clear/3', 'clear(${1:Buff}, ${2:String}, ${3:FileName}) $4')],
'pman_buf_buffer': [('init/1', 'init(${1:Editor}) $2')],
'pman_buf_converter': [('init/2', 'init(${1:Buffer_Pid}, ${2:FileName}) $3')],
'pman_buf_printer': [('init/2', 'init(${1:Editor}, ${2:Buffer_pid}) $3')],
'pman_buf_utils': [('textformat/1', 'textformat(${1:Other}) $2'), ('split/4', 'split(${1:Rest}, ${2:Size}, ${3:Length}, ${4:Buff}) $5')],
'pman_main': [('init/2', 'init(${1:PidCaller}, ${2:OSModuleExcluded}) $3')],
'pman_module_info': [('start/1', 'start(${1:Module}) $2')],
'pman_options': [('dialog/3', 'dialog(${1:ParentWin}, ${2:Title}, ${3:Options}) $4'), ('read_from_file/1', 'read_from_file(${1:File}) $2'), ('save_to_file/2', 'save_to_file(${1:Options}, ${2:File}) $3')],
'pman_process': [('pinfo/1', 'pinfo(${1:Pid}) $2'), ('pinfo/2', 'pinfo(${1:Pid}, ${2:Item}) $3'), ('r_processes/1', 'r_processes(${1:Node}) $2'), ('function_info/1', 'function_info(${1:Pid}) $2'), ('get_name/1', 'get_name(${1:Pid}) $2'), ('msg/1', 'msg(${1:Pid}) $2'), ('reds/1', 'reds(${1:Pid}) $2'), ('psize/1', 'psize(${1:Pid}) $2'), ('is_running/1', 'is_running(${1:Object}) $2'), ('is_pid_or_shell/1', 'is_pid_or_shell(${1:Object}) $2'), ('get_pid/1', 'get_pid(${1:Param1}) $2'), ('is_system_process/1', 'is_system_process(${1:Pid}) $2'), ('is_hidden_by_module/2', 'is_hidden_by_module(${1:Pid}, ${2:Modules}) $3')],
'pman_relay': [('start/1', 'start(${1:Param1}) $2'), ('ok_to_trace/1', 'ok_to_trace(${1:Pid}) $2'), ('trac/3', 'trac(${1:Pid}, ${2:How}, ${3:Flag}) $4')],
'pman_relay_server': [('init/1', 'init(${1:P}) $2')],
'pman_shell': [('start_list/3', 'start_list(${1:LIPid}, ${2:Father}, ${3:Options}) $4'), ('start/2', 'start(${1:Pid}, ${2:DefaultOptions}) $3'), ('start/1', 'start(${1:Pid}) $2'), ('find_shell/0', 'find_shell() $1')],
'pman_tool': [('select/3', 'select(${1:Win}, ${2:Title}, ${3:Choices}) $4')],
'pman_win': [('pman_window/3', 'pman_window(${1:Size}, ${2:Param2}, ${3:Nodes}) $4'), ('window/1', 'window(${1:Process}) $2'), ('module_data/1', 'module_data(${1:ModuleName}) $2'), ('display/1', 'display(${1:Param1}) $2'), ('format/2', 'format(${1:Pad}, ${2:X}) $3'), ('dialog_window/2', 'dialog_window(${1:GSParent}, ${2:Text}) $3'), ('configeditor/2', 'configeditor(${1:Editor}, ${2:Options}) $3'), ('configwin/3', 'configwin(${1:Object}, ${2:W}, ${3:H}) $4'), ('update/1', 'update(${1:NoOfHidden}) $2'), ('update/3', 'update(${1:Grid}, ${2:ShowInfoR}, ${3:NoOfHidden}) $4'), ('msg_win/1', 'msg_win(${1:Text}) $2'), ('title/1', 'title(${1:Sh}) $2'), ('remove_menu/1', 'remove_menu(${1:Object}) $2'), ('add_menu/3', 'add_menu(${1:Menu}, ${2:Names}, ${3:Tag}) $4'), ('change_colour/3', 'change_colour(${1:Grid}, ${2:Row}, ${3:Row}) $4'), ('links_menus/1', 'links_menus(${1:Links}) $2'), ('calc_columnwidths/1', 'calc_columnwidths(${1:Width}) $2')],
'pubkey_cert': [('init_validation_state/3', 'init_validation_state(${1:Param1}, ${2:DefaultPathLen}, ${3:Options}) $4'), ('prepare_for_next_cert/2', 'prepare_for_next_cert(${1:Param1}, ${2:Param2}) $3'), ('validate_time/3', 'validate_time(${1:OtpCert}, ${2:UserState}, ${3:VerifyFun}) $4'), ('validate_signature/6', 'validate_signature(${1:OtpCert}, ${2:DerCert}, ${3:Key}, ${4:KeyParams}, ${5:UserState}, ${6:VerifyFun}) $7'), ('validate_issuer/4', 'validate_issuer(${1:OtpCert}, ${2:Issuer}, ${3:UserState}, ${4:VerifyFun}) $5'), ('validate_names/6', 'validate_names(${1:OtpCert}, ${2:Permit}, ${3:Exclude}, ${4:Last}, ${5:UserState}, ${6:VerifyFun}) $7'), ('validate_revoked_status/3', 'validate_revoked_status(${1:Param1}, ${2:UserState}, ${3:Param3}) $4'), ('validate_extensions/4', 'validate_extensions(${1:OtpCert}, ${2:ValidationState}, ${3:UserState}, ${4:VerifyFun}) $5'), ('normalize_general_name/1', 'normalize_general_name(${1:Issuer}) $2'), ('digest_type/1', 'digest_type(${1:Param1}) $2'), ('is_self_signed/1', 'is_self_signed(${1:Param1}) $2'), ('is_issuer/2', 'is_issuer(${1:Param1}, ${2:Param2}) $3'), ('issuer_id/2', 'issuer_id(${1:Otpcert}, ${2:Param2}) $3'), ('is_fixed_dh_cert/1', 'is_fixed_dh_cert(${1:Param1}) $2'), ('verify_data/1', 'verify_data(${1:DerCert}) $2'), ('verify_fun/4', 'verify_fun(${1:Otpcert}, ${2:Result}, ${3:UserState0}, ${4:VerifyFun}) $5')],
'pubkey_cert_records': [('decode_cert/1', 'decode_cert(${1:DerCert}) $2'), ('transform/2', 'transform(${1:Other}, ${2:Func}) $3'), ('supportedPublicKeyAlgorithms/1', 'supportedPublicKeyAlgorithms(${1:Param1}) $2')],
'pubkey_pbe': [('encode/4', 'encode(${1:Data}, ${2:Password}, ${3:Param3}, ${4:KeyDevParams}) $5'), ('decode/4', 'decode(${1:Data}, ${2:Password}, ${3:Param3}, ${4:KeyDevParams}) $5'), ('decrypt_parameters/1', 'decrypt_parameters(${1:Param1}) $2')],
'pubkey_pem': [('encode/1', 'encode(${1:PemEntries}) $2'), ('decode/1', 'decode(${1:Bin}) $2'), ('decipher/2', 'decipher(${1:Param1}, ${2:Password}) $3'), ('cipher/3', 'cipher(${1:Der}, ${2:Param2}, ${3:Password}) $4')],
'pubkey_ssh': [('decode/2', 'decode(${1:Bin}, ${2:Type}) $3'), ('encode/2', 'encode(${1:Entries}, ${2:Type}) $3')],
'public_key': [('pem_decode/1', 'pem_decode(${1:Param1}) $2'), ('pem_encode/1', 'pem_encode(${1:Param1}) $2'), ('der_decode/2', 'der_decode(${1:Asn1Type}, ${2:Param2}) $3'), ('der_encode/2', 'der_encode(${1:Asn1Type}, ${2:Param2}) $3'), ('pem_entry_decode/1', 'pem_entry_decode(${1:Param1}) $2'), ('pem_entry_decode/2', 'pem_entry_decode(${1:Param1}, ${2:Password}) $3'), ('pem_entry_encode/2', 'pem_entry_encode(${1:Asn1Type}, ${2:Param2}) $3'), ('pem_entry_encode/3', 'pem_entry_encode(${1:Asn1Type}, ${2:Entity}, ${3:Param3}) $4'), ('pkix_decode_cert/2', 'pkix_decode_cert(${1:DerCert}, ${2:Param2}) $3'), ('pkix_encode/3', 'pkix_encode(${1:Asn1Type}, ${2:Term}, ${3:Param3}) $4'), ('encrypt_private/2', 'encrypt_private(${1:PlainText}, ${2:Key}) $3'), ('encrypt_private/3', 'encrypt_private(${1:Param1}, ${2:Param2}, ${3:Param3}) $4'), ('decrypt_private/2', 'decrypt_private(${1:CipherText}, ${2:Key}) $3'), ('decrypt_private/3', 'decrypt_private(${1:Param1}, ${2:Param2}, ${3:Param3}) $4'), ('encrypt_public/2', 'encrypt_public(${1:PlainText}, ${2:Key}) $3'), ('encrypt_public/3', 'encrypt_public(${1:PlainText}, ${2:N}, ${3:Param3}) $4'), ('decrypt_public/2', 'decrypt_public(${1:CipherText}, ${2:Key}) $3'), ('decrypt_public/3', 'decrypt_public(${1:CipherText}, ${2:N}, ${3:Param3}) $4'), ('sign/3', 'sign() $1'), ('verify/4', 'verify() $1'), ('pkix_sign/2', 'pkix_sign(${1:Param1}, ${2:Param2}) $3'), ('pkix_verify/2', 'pkix_verify() $1'), ('pkix_is_self_signed/1', 'pkix_is_self_signed(${1:Param1}) $2'), ('pkix_is_fixed_dh_cert/1', 'pkix_is_fixed_dh_cert(${1:Param1}) $2'), ('pkix_is_issuer/2', 'pkix_is_issuer(${1:Cert}, ${2:Param2}) $3'), ('pkix_issuer_id/2', 'pkix_issuer_id(${1:Cert}, ${2:Param2}) $3'), ('pkix_normalize_name/1', 'pkix_normalize_name(${1:Issuer}) $2'), ('pkix_path_validation/3', 'pkix_path_validation(${1:PathErr}, ${2:Param2}, ${3:Param3}) $4'), ('ssh_decode/2', 'ssh_decode(${1:Param1}, ${2:Param2}) $3'), ('ssh_encode/2', 'ssh_encode(${1:Param1}, ${2:Param2}) $3')],
'reltool': [('start/0', 'start() $1'), ('start/1', 'start(${1:Param1}) $2'), ('start_link/1', 'start_link(${1:Param1}) $2'), ('debug/0', 'debug() $1'), ('start_server/1', 'start_server(${1:Options}) $2'), ('get_server/1', 'get_server(${1:WinPid}) $2'), ('get_status/1', 'get_status(${1:Param1}) $2'), ('stop/1', 'stop(${1:Param1}) $2'), ('get_config/1', 'get_config(${1:PidOrOption}) $2'), ('get_config/3', 'get_config(${1:Param1}, ${2:Param2}, ${3:Param3}) $4'), ('get_rel/2', 'get_rel(${1:Param1}, ${2:Param2}) $3'), ('get_script/2', 'get_script(${1:Param1}, ${2:Param2}) $3'), ('create_target/2', 'create_target(${1:Param1}, ${2:Param2}) $3'), ('get_target_spec/1', 'get_target_spec(${1:Param1}) $2'), ('eval_target_spec/3', 'eval_target_spec(${1:Param1}, ${2:Param2}, ${3:Param3}) $4'), ('install/2', 'install(${1:RelName}, ${2:TargetDir}) $3')],
'reltool_app_win': [('start_link/4', 'start_link(${1:WxEnv}, ${2:Xref}, ${3:Common}, ${4:AppName}) $5'), ('raise/1', 'raise(${1:Pid}) $2'), ('refresh/1', 'refresh(${1:Pid}) $2'), ('open_mod/2', 'open_mod(${1:Pid}, ${2:ModName}) $3')],
'reltool_fgraph': [('step/2', 'step(${1:Vs}, ${2:Es}) $3'), ('step/3', 'step(${1:Vs}, ${2:Es}, ${3:Pa}) $4')],
'reltool_fgraph_win': [('new/2', 'new(${1:Parent}, ${2:Options}) $3'), ('add_node/2', 'add_node(${1:Pid}, ${2:Key}) $3'), ('add_node/3', 'add_node(${1:Pid}, ${2:Key}, ${3:Color}) $4'), ('del_node/2', 'del_node(${1:Pid}, ${2:Key}) $3'), ('change_node/3', 'change_node(${1:Pid}, ${2:Key}, ${3:Color}) $4'), ('add_link/2', 'add_link(${1:Pid}, ${2:Param2}) $3'), ('del_link/2', 'del_link(${1:Pid}, ${2:Param2}) $3'), ('set_dbl_click/2', 'set_dbl_click(${1:Pid}, ${2:Fun}) $3'), ('stop/2', 'stop(${1:Pid}, ${2:Reason}) $3')],
'reltool_mod_win': [('start_link/5', 'start_link(${1:WxEnv}, ${2:Xref}, ${3:RelPid}, ${4:Common}, ${5:ModName}) $6'), ('raise/1', 'raise(${1:Pid}) $2'), ('refresh/1', 'refresh(${1:Pid}) $2')],
'reltool_server': [('start_link/0', 'start_link() $1'), ('start_link/1', 'start_link(${1:Options}) $2'), ('get_config/3', 'get_config(${1:Pid}, ${2:InclDef}, ${3:InclDeriv}) $4'), ('load_config/2', 'load_config(${1:Pid}, ${2:FilenameOrConfig}) $3'), ('save_config/4', 'save_config(${1:Pid}, ${2:Filename}, ${3:InclDef}, ${4:InclDeriv}) $5'), ('get_rel/2', 'get_rel(${1:Pid}, ${2:RelName}) $3'), ('get_script/2', 'get_script(${1:Pid}, ${2:RelName}) $3'), ('reset_config/1', 'reset_config(${1:Pid}) $2'), ('undo_config/1', 'undo_config(${1:Pid}) $2'), ('get_mod/2', 'get_mod(${1:Pid}, ${2:ModName}) $3'), ('get_app/2', 'get_app(${1:Pid}, ${2:AppName}) $3'), ('set_app/2', 'set_app(${1:Pid}, ${2:App}) $3'), ('get_apps/2', 'get_apps(${1:Pid}, ${2:Kind}) $3'), ('set_apps/2', 'set_apps(${1:Pid}, ${2:Apps}) $3'), ('get_sys/1', 'get_sys(${1:Pid}) $2'), ('set_sys/2', 'set_sys(${1:Pid}, ${2:Sys}) $3'), ('get_status/1', 'get_status(${1:Pid}) $2'), ('gen_rel_files/2', 'gen_rel_files(${1:Pid}, ${2:Dir}) $3'), ('gen_target/2', 'gen_target(${1:Pid}, ${2:Dir}) $3'), ('gen_spec/1', 'gen_spec(${1:Pid}) $2')],
'reltool_sys_win': [('start_link/1', 'start_link(${1:Opts}) $2'), ('get_server/1', 'get_server(${1:Pid}) $2'), ('set_app/2', 'set_app(${1:Pid}, ${2:App}) $3'), ('open_app/2', 'open_app(${1:Pid}, ${2:AppName}) $3')],
'reltool_target': [('gen_config/2', 'gen_config(${1:Sys}, ${2:InclDefs}) $3'), ('gen_app/1', 'gen_app() $1'), ('gen_rel/2', 'gen_rel(${1:Rel}, ${2:Sys}) $3'), ('gen_rel_files/2', 'gen_rel_files(${1:Sys}, ${2:TargetDir}) $3'), ('gen_boot/1', 'gen_boot(${1:Param1}) $2'), ('gen_script/4', 'gen_script(${1:Rel}, ${2:Sys}, ${3:PathFlag}, ${4:Variables}) $5'), ('gen_spec/1', 'gen_spec(${1:Sys}) $2'), ('eval_spec/3', 'eval_spec(${1:Spec}, ${2:SourceDir}, ${3:TargetDir}) $4'), ('gen_target/2', 'gen_target(${1:Sys}, ${2:TargetDir}) $3'), ('install/2', 'install(${1:RelName}, ${2:TargetDir}) $3')],
'reltool_utils': [('root_dir/0', 'root_dir() $1'), ('erl_libs/0', 'erl_libs() $1'), ('lib_dirs/1', 'lib_dirs(${1:Dir}) $2'), ('split_app_name/1', 'split_app_name(${1:Name}) $2'), ('prim_consult/1', 'prim_consult(${1:Param1}) $2'), ('default_rels/0', 'default_rels() $1'), ('choose_default/3', 'choose_default(${1:Tag}, ${2:Param2}, ${3:Param3}) $4'), ('assign_image_list/1', 'assign_image_list(${1:ListCtrl}) $2'), ('get_latest_resize/1', 'get_latest_resize(${1:Param1}) $2'), ('mod_conds/0', 'mod_conds() $1'), ('list_to_mod_cond/1', 'list_to_mod_cond(${1:List}) $2'), ('mod_cond_to_index/1', 'mod_cond_to_index(${1:ModCond}) $2'), ('incl_conds/0', 'incl_conds() $1'), ('list_to_incl_cond/1', 'list_to_incl_cond(${1:List}) $2'), ('incl_cond_to_index/1', 'incl_cond_to_index(${1:ModCond}) $2'), ('elem_to_index/2', 'elem_to_index(${1:Elem}, ${2:List}) $3'), ('app_dir_test/2', 'app_dir_test(${1:Dir1}, ${2:Dir2}) $3'), ('split_app_dir/1', 'split_app_dir(${1:Dir}) $2'), ('get_item/1', 'get_item(${1:ListCtrl}) $2'), ('get_items/1', 'get_items(${1:ListCtrl}) $2'), ('get_selected_items/3', 'get_selected_items(${1:ListCtrl}, ${2:PrevItem}, ${3:Acc}) $4'), ('select_items/3', 'select_items(${1:ListCtrl}, ${2:OldItems}, ${3:Items}) $4'), ('select_item/2', 'select_item(${1:ListCtrl}, ${2:Param2}) $3'), ('safe_keysearch/5', 'safe_keysearch(${1:Key}, ${2:Pos}, ${3:List}, ${4:Mod}, ${5:Line}) $6'), ('print/4', 'print(${1:X}, ${2:X}, ${3:Format}, ${4:Args}) $5'), ('return_first_error/2', 'return_first_error(${1:Status}, ${2:Param2}) $3'), ('add_warning/2', 'add_warning(${1:Status}, ${2:Warning}) $3'), ('create_dir/1', 'create_dir(${1:Dir}) $2'), ('list_dir/1', 'list_dir(${1:Dir}) $2'), ('read_file_info/1', 'read_file_info(${1:File}) $2'), ('write_file_info/2', 'write_file_info(${1:File}, ${2:Info}) $3'), ('read_file/1', 'read_file(${1:File}) $2'), ('write_file/2', 'write_file(${1:File}, ${2:IoList}) $3'), ('recursive_delete/1', 'recursive_delete(${1:Dir}) $2'), ('delete/2', 'delete(${1:File}, ${2:Type}) $3'), ('recursive_copy_file/2', 'recursive_copy_file(${1:From}, ${2:To}) $3'), ('copy_file/2', 'copy_file(${1:From}, ${2:To}) $3'), ('throw_error/2', 'throw_error(${1:Format}, ${2:Args}) $3'), ('decode_regexps/3', 'decode_regexps(${1:Key}, ${2:Regexps}, ${3:Acc}) $4'), ('default_val/2', 'default_val(${1:Val}, ${2:Default}) $3'), ('escript_foldl/3', 'escript_foldl(${1:Fun}, ${2:Acc}, ${3:File}) $4'), ('call/2', 'call(${1:Name}, ${2:Param2}) $3'), ('cast/2', 'cast(${1:Pid}, ${2:Msg}) $3'), ('reply/3', 'reply(${1:Pid}, ${2:Ref}, ${3:Msg}) $4')],
'dbg': [('p/1', 'p(${1:FileName}) $2'), ('p/2', 'p(${1:Module}, ${2:Pattern}) $3'), ('c/3', 'c(${1:M}, ${2:F}, ${3:A}) $4'), ('c/4', 'c(${1:M}, ${2:F}, ${3:A}, ${4:Flags}) $5'), ('i/0', 'i() $1'), ('start/0', 'start() $1'), ('stop/0', 'stop() $1'), ('stop_clear/0', 'stop_clear() $1'), ('tracer/0', 'tracer() $1'), ('tracer/2', 'tracer(${1:Node}, ${2:Data}) $3'), ('tracer/3', 'tracer(${1:Node}, ${2:Type}, ${3:Data}) $4'), ('get_tracer/0', 'get_tracer() $1'), ('get_tracer/1', 'get_tracer(${1:Node}) $2'), ('tp/2', 'tp(${1:Module}, ${2:Pattern}) $3'), ('tp/3', 'tp(${1:Module}, ${2:Function}, ${3:Pattern}) $4'), ('tp/4', 'tp(${1:Module}, ${2:Function}, ${3:Arity}, ${4:Pattern}) $5'), ('ctp/0', 'ctp() $1'), ('ctp/1', 'ctp(${1:Param1}) $2'), ('ctp/2', 'ctp(${1:Module}, ${2:Function}) $3'), ('ctp/3', 'ctp(${1:Module}, ${2:Function}, ${3:Arity}) $4'), ('tpl/2', 'tpl(${1:Module}, ${2:Pattern}) $3'), ('tpl/3', 'tpl(${1:Module}, ${2:Function}, ${3:Pattern}) $4'), ('tpl/4', 'tpl(${1:Module}, ${2:Function}, ${3:Arity}, ${4:Pattern}) $5'), ('ctpl/0', 'ctpl() $1'), ('ctpl/1', 'ctpl(${1:Param1}) $2'), ('ctpl/2', 'ctpl(${1:Module}, ${2:Function}) $3'), ('ctpl/3', 'ctpl(${1:Module}, ${2:Function}, ${3:Arity}) $4'), ('ctpg/0', 'ctpg() $1'), ('ctpg/1', 'ctpg(${1:Param1}) $2'), ('ctpg/2', 'ctpg(${1:Module}, ${2:Function}) $3'), ('ctpg/3', 'ctpg(${1:Module}, ${2:Function}, ${3:Arity}) $4'), ('ltp/0', 'ltp() $1'), ('wtp/1', 'wtp(${1:FileName}) $2'), ('rtp/1', 'rtp(${1:FileName}) $2'), ('dtp/0', 'dtp() $1'), ('dtp/1', 'dtp(${1:N}) $2'), ('n/1', 'n(${1:ShellFun}) $2'), ('cn/1', 'cn(${1:Node}) $2'), ('ln/0', 'ln() $1'), ('h/0', 'h() $1'), ('h/1', 'h(${1:Port}) $2')],
'erts_alloc_config': [('save_scenario/0', 'save_scenario() $1'), ('make_config/0', 'make_config() $1'), ('make_config/1', 'make_config(${1:IODev}) $2'), ('stop/0', 'stop() $1')],
'inviso_as_lib': [('setup_autostart/7', 'setup_autostart(${1:Node}, ${2:Repeat}, ${3:Options}, ${4:TracerData}, ${5:CmdFiles}, ${6:Bindings}, ${7:Translations}) $8'), ('setup_autostart/8', 'setup_autostart(${1:Node}, ${2:Repeat}, ${3:Options}, ${4:TracerData}, ${5:CmdFiles}, ${6:Bindings}, ${7:Translations}, ${8:RTtag}) $9'), ('setup_autostart/9', 'setup_autostart(${1:Node}, ${2:Repeat}, ${3:Options}, ${4:TracerData}, ${5:CmdFiles}, ${6:Bindings}, ${7:Translations}, ${8:RTtag}, ${9:Dbg}) $10'), ('inhibit_autostart/1', 'inhibit_autostart(${1:Node}) $2'), ('set_repeat/2', 'set_repeat(${1:Node}, ${2:N}) $3'), ('set_repeat_2/2', 'set_repeat_2(${1:FileName}, ${2:NewTerms}) $3')],
'inviso_autostart': [('autostart/1', 'autostart(${1:Param1}) $2'), ('which_config_file/0', 'which_config_file() $1')],
'inviso_autostart_server': [('init/1', 'init(${1:ArgsFromConfig}) $2')],
'inviso_rt': [('start_link_man/3', 'start_link_man(${1:Ctrl}, ${2:Options}, ${3:Tag}) $4'), ('start_link_auto/1', 'start_link_auto(${1:AutoModArgs}) $2')],
'inviso_rt_lib': [('expand_regexp/2', 'expand_regexp(${1:RegExpMod}, ${2:Opts}) $3'), ('expand_regexp/3', 'expand_regexp(${1:RegExpMod}, ${2:RegExpMod}, ${3:Opts}) $4'), ('expand_regexp/4', 'expand_regexp(${1:Nodes}, ${2:RegExpDir}, ${3:RegExpMod}, ${4:Opts}) $5')],
'inviso_rt_meta': [('start/2', 'start(${1:TiData}, ${2:Tracer}) $3'), ('start/5', 'start(${1:TiData}, ${2:Tracer}, ${3:InitPublLDmfa}, ${4:RemovePublLDmf}, ${5:CleanPublLDmf}) $6')],
'observer_backend': [('vsn/0', 'vsn() $1')],
'percept_profile': [('start/1', 'start(${1:Filename}) $2'), ('start/2', 'start(${1:Filename}, ${2:Options}) $3'), ('start/3', 'start(${1:Filename}, ${2:Param2}, ${3:Options}) $4'), ('stop/0', 'stop() $1')],
'runtime_tools': [('start/2', 'start(${1:Param1}, ${2:AutoModArgs}) $3'), ('stop/1', 'stop(${1:Param1}) $2')],
'runtime_tools_sup': [('init/1', 'init(${1:AutoModArgs}) $2')],
'ttb_autostart': [('start_link/0', 'start_link() $1'), ('read_config/0', 'read_config() $1'), ('write_config/1', 'write_config(${1:Data}) $2'), ('delete_config/0', 'delete_config() $1')],
'target_system': [('create/1', 'create(${1:RelFileName}) $2'), ('create/2', 'create(${1:RelFileName}, ${2:SystoolsOpts}) $3'), ('install/2', 'install(${1:RelFileName}, ${2:RootDir}) $3')],
'alarm_handler': [('start_link/0', 'start_link() $1'), ('set_alarm/1', 'set_alarm(${1:Alarm}) $2'), ('clear_alarm/1', 'clear_alarm(${1:AlarmId}) $2'), ('get_alarms/0', 'get_alarms() $1'), ('add_alarm_handler/1', 'add_alarm_handler(${1:Param1}) $2'), ('add_alarm_handler/2', 'add_alarm_handler(${1:Module}, ${2:Param2}) $3'), ('delete_alarm_handler/1', 'delete_alarm_handler(${1:Param1}) $2')],
'erlsrv': [('get_all_services/0', 'get_all_services() $1'), ('get_service/1', 'get_service(${1:ServiceName}) $2'), ('get_service/2', 'get_service(${1:EVer}, ${2:ServiceName}) $3'), ('store_service/1', 'store_service(${1:Service}) $2'), ('store_service/2', 'store_service(${1:EmulatorVersion}, ${2:Service}) $3'), ('new_service/3', 'new_service(${1:NewServiceName}, ${2:OldService}, ${3:Data}) $4'), ('new_service/4', 'new_service(${1:NewServiceName}, ${2:OldService}, ${3:Data}, ${4:RestartName}) $5'), ('disable_service/2', 'disable_service(${1:EVer}, ${2:ServiceName}) $3'), ('enable_service/2', 'enable_service(${1:EVer}, ${2:ServiceName}) $3'), ('disable_service/1', 'disable_service(${1:ServiceName}) $2'), ('enable_service/1', 'enable_service(${1:ServiceName}) $2'), ('remove_service/1', 'remove_service(${1:ServiceName}) $2'), ('erlsrv/1', 'erlsrv(${1:EVer}) $2'), ('rename_service/2', 'rename_service(${1:FromName}, ${2:ToName}) $3'), ('rename_service/3', 'rename_service(${1:EVer}, ${2:FromName}, ${3:ToName}) $4')],
'format_lib_supp': [('print_info/2', 'print_info(${1:Device}, ${2:Format}) $3'), ('print_info/3', 'print_info(${1:Device}, ${2:Line}, ${3:Format}) $4')],
'misc_supp': [('format_pdict/3', 'format_pdict(${1:Param1}, ${2:PDict}, ${3:Exclude}) $4'), ('format_tuples/2', 'format_tuples(${1:KeyValues}, ${2:Exclude}) $3'), ('assq/2', 'assq(${1:Key}, ${2:List}) $3'), ('passq/2', 'passq(${1:Key}, ${2:List}) $3'), ('is_string/1', 'is_string(${1:X}) $2'), ('multi_map/2', 'multi_map(${1:Func}, ${2:ListOfLists}) $3')],
'overload': [('start_link/0', 'start_link() $1'), ('request/0', 'request() $1'), ('set_config_data/2', 'set_config_data(${1:MaxIntensity}, ${2:Weight}) $3'), ('get_overload_info/0', 'get_overload_info() $1')],
'rb': [('start/0', 'start() $1'), ('start/1', 'start(${1:Options}) $2'), ('stop/0', 'stop() $1'), ('rescan/0', 'rescan() $1'), ('rescan/1', 'rescan(${1:Options}) $2')],
'rb_format_supp': [('print/3', 'print(${1:Date}, ${2:Report}, ${3:Device}) $4')],
'release_handler': [('start_link/0', 'start_link() $1'), ('create_RELEASES/1', 'create_RELEASES(${1:Param1}) $2'), ('create_RELEASES/2', 'create_RELEASES(${1:Root}, ${2:RelFile}) $3'), ('create_RELEASES/4', 'create_RELEASES(${1:Root}, ${2:RelDir}, ${3:RelFile}, ${4:LibDirs}) $5'), ('unpack_release/1', 'unpack_release(${1:ReleaseName}) $2'), ('check_install_release/1', 'check_install_release(${1:Vsn}) $2'), ('check_install_release/2', 'check_install_release(${1:Vsn}, ${2:Opts}) $3'), ('install_release/1', 'install_release(${1:Vsn}) $2'), ('install_release/2', 'install_release(${1:Vsn}, ${2:Opts}) $3'), ('new_emulator_upgrade/2', 'new_emulator_upgrade(${1:Vsn}, ${2:Opts}) $3'), ('remove_release/1', 'remove_release(${1:Vsn}) $2'), ('which_releases/0', 'which_releases() $1'), ('which_releases/1', 'which_releases(${1:Status}) $2'), ('make_permanent/1', 'make_permanent(${1:Vsn}) $2'), ('reboot_old_release/1', 'reboot_old_release(${1:Vsn}) $2'), ('set_unpacked/2', 'set_unpacked(${1:RelFile}, ${2:LibDirs}) $3'), ('set_removed/1', 'set_removed(${1:Vsn}) $2'), ('install_file/2', 'install_file(${1:Vsn}, ${2:Param2}) $3')],
'release_handler_1': [('eval_script/1', 'eval_script(${1:Script}) $2'), ('eval_script/5', 'eval_script(${1:Script}, ${2:Apps}, ${3:LibDirs}, ${4:NewLibs}, ${5:Opts}) $6'), ('check_script/2', 'check_script(${1:Script}, ${2:LibDirs}) $3'), ('check_old_processes/2', 'check_old_processes(${1:Script}, ${2:PrePurgeMethod}) $3')],
'sasl': [('start/2', 'start(${1:Param1}, ${2:Param2}) $3'), ('stop/1', 'stop(${1:State}) $2')],
'sasl_report': [('write_report/3', 'write_report(${1:Fd}, ${2:What}, ${3:Report}) $4'), ('format_report/3', 'format_report(${1:Fd}, ${2:What}, ${3:Report}) $4')],
'sasl_report_file_h': [('init/1', 'init(${1:Param1}) $2'), ('handle_event/2', 'handle_event(${1:Event}, ${2:State}) $3'), ('handle_call/2', 'handle_call(${1:Param1}, ${2:Param2}) $3'), ('handle_info/2', 'handle_info(${1:Param1}, ${2:State}) $3'), ('terminate/2', 'terminate(${1:Param1}, ${2:Param2}) $3')],
'sasl_report_tty_h': [('init/1', 'init(${1:Type}) $2'), ('handle_event/2', 'handle_event(${1:Event}, ${2:Type}) $3'), ('handle_call/2', 'handle_call(${1:Param1}, ${2:Param2}) $3'), ('handle_info/2', 'handle_info(${1:Param1}, ${2:Type}) $3'), ('terminate/2', 'terminate(${1:Param1}, ${2:Param2}) $3')],
'si': [('h/0', 'h() $1'), ('help/0', 'help() $1'), ('start/0', 'start() $1'), ('start/1', 'start(${1:Options}) $2'), ('start_log/1', 'start_log(${1:FileName}) $2'), ('stop_log/0', 'stop_log() $1'), ('abbrevs/0', 'abbrevs() $1'), ('pi/1', 'pi(${1:XPid}) $2'), ('pi/2', 'pi(${1:Opt}, ${2:XPid}) $3'), ('pi/3', 'pi(${1:A}, ${2:B}, ${3:C}) $4'), ('pi/4', 'pi(${1:A}, ${2:B}, ${3:B}, ${4:Param4}) $5'), ('ppi/1', 'ppi(${1:XPid}) $2'), ('ppi/3', 'ppi(${1:A}, ${2:B}, ${3:C}) $4'), ('stop/0', 'stop() $1')],
'si_sasl_supp': [('h/0', 'h() $1'), ('help/0', 'help() $1'), ('start_log/1', 'start_log(${1:FileName}) $2'), ('stop_log/0', 'stop_log() $1'), ('abbrevs/0', 'abbrevs() $1'), ('pi/1', 'pi(${1:XPid}) $2'), ('pi/2', 'pi(${1:Opt}, ${2:XPid}) $3'), ('pi/3', 'pi(${1:A}, ${2:B}, ${3:C}) $4'), ('pi/4', 'pi(${1:A}, ${2:B}, ${3:B}, ${4:Param4}) $5'), ('ppi/1', 'ppi(${1:XPid}) $2'), ('ppi/3', 'ppi(${1:A}, ${2:B}, ${3:C}) $4'), ('start/0', 'start() $1'), ('start/1', 'start(${1:Options}) $2'), ('stop/0', 'stop() $1'), ('start_link/1', 'start_link(${1:Param1}) $2')],
'systools': [('script2boot/1', 'script2boot(${1:File}) $2'), ('script2boot/3', 'script2boot(${1:File}, ${2:Output0}, ${3:Param3}) $4'), ('compile_rel/3', 'compile_rel(${1:Input}, ${2:Output}, ${3:Options}) $4'), ('make_script/1', 'make_script(${1:RelName}) $2'), ('make_script/2', 'make_script(${1:RelName}, ${2:Opt}) $3'), ('make_tar/1', 'make_tar(${1:RelName}) $2'), ('make_tar/2', 'make_tar(${1:RelName}, ${2:Opt}) $3'), ('make_relup/3', 'make_relup(${1:ReleaseName}, ${2:UpNameList}, ${3:DownNameList}) $4'), ('make_relup/4', 'make_relup(${1:ReleaseName}, ${2:UpNameList}, ${3:DownNameList}, ${4:Opts}) $5')],
'systools_lib': [('file_term2binary/2', 'file_term2binary(${1:FileIn}, ${2:FileOut}) $3'), ('read_term/1', 'read_term(${1:File}) $2'), ('read_term_from_stream/2', 'read_term_from_stream(${1:Stream}, ${2:File}) $3'), ('get_dirs/1', 'get_dirs(${1:Param1}) $2'), ('get_path/1', 'get_path(${1:Param1}) $2'), ('werror/2', 'werror(${1:Options}, ${2:Warnings}) $3')],
'systools_make': [('make_script/1', 'make_script(${1:RelName}) $2'), ('make_script/2', 'make_script(${1:RelName}, ${2:Param2}) $3'), ('make_script/3', 'make_script(${1:RelName}, ${2:Param2}, ${3:Flags}) $4'), ('make_tar/1', 'make_tar(${1:RelName}) $2'), ('make_tar/2', 'make_tar(${1:RelName}, ${2:Flags}) $3')],
'systools_rc': [('translate_scripts/3', 'translate_scripts(${1:Scripts}, ${2:Appls}, ${3:PreAppls}) $4'), ('translate_scripts/4', 'translate_scripts(${1:Mode}, ${2:Scripts}, ${3:Appls}, ${4:PreAppls}) $5'), ('format_error/1', 'format_error(${1:E}) $2')],
'systools_relup': [('mk_relup/3', 'mk_relup(${1:TopRelFile}, ${2:BaseUpRelDcs}, ${3:BaseDnRelDcs}) $4'), ('mk_relup/4', 'mk_relup(${1:TopRelFile}, ${2:BaseUpRelDcs}, ${3:BaseDnRelDcs}, ${4:Opts}) $5'), ('format_error/1', 'format_error(${1:Error}) $2'), ('format_warning/1', 'format_warning(${1:W}) $2')],
'DSS': [('dec_DSAPrivateKey/2', 'dec_DSAPrivateKey(${1:Tlv}, ${2:TagIn}) $3'), ('decode/2', 'decode(${1:Type}, ${2:Data}) $3'), ('decode_disp/2', 'decode_disp(${1:Type}, ${2:Data}) $3'), ('enc_DSAPrivateKey/2', 'enc_DSAPrivateKey(${1:Val}, ${2:TagIn}) $3'), ('encode/2', 'encode(${1:Type}, ${2:Data}) $3'), ('encode_disp/2', 'encode_disp(${1:Type}, ${2:Data}) $3'), ('encoding_rule/0', 'encoding_rule() $1'), ('info/0', 'info() $1')],
'PKCS-1': [('dec_Algorithm/2', 'dec_Algorithm(${1:Tlv}, ${2:TagIn}) $3'), ('dec_AlgorithmNull/2', 'dec_AlgorithmNull(${1:Tlv}, ${2:TagIn}) $3'), ('dec_DigestInfo/2', 'dec_DigestInfo(${1:Tlv}, ${2:TagIn}) $3'), ('dec_DigestInfoNull/2', 'dec_DigestInfoNull(${1:Tlv}, ${2:TagIn}) $3'), ('dec_OtherPrimeInfo/2', 'dec_OtherPrimeInfo(${1:Tlv}, ${2:TagIn}) $3'), ('dec_OtherPrimeInfos/2', 'dec_OtherPrimeInfos(${1:Tlv}, ${2:TagIn}) $3'), ('dec_RSAPrivateKey/2', 'dec_RSAPrivateKey(${1:Tlv}, ${2:TagIn}) $3'), ('dec_RSAPublicKey/2', 'dec_RSAPublicKey(${1:Tlv}, ${2:TagIn}) $3'), ("'dec_RSASSA-PSS-params'/2", "'dec_RSASSA-PSS-params'(${1:Tlv}, ${2:TagIn}) $3"), ('dec_TrailerField/2', 'dec_TrailerField(${1:Tlv}, ${2:TagIn}) $3'), ('dec_Version/2', 'dec_Version(${1:Tlv}, ${2:TagIn}) $3'), ('decode/2', 'decode(${1:Type}, ${2:Data}) $3'), ('decode_disp/2', 'decode_disp(${1:Type}, ${2:Data}) $3'), ('enc_Algorithm/2', 'enc_Algorithm(${1:Val}, ${2:TagIn}) $3'), ('enc_AlgorithmNull/2', 'enc_AlgorithmNull(${1:Val}, ${2:TagIn}) $3'), ('enc_DigestInfo/2', 'enc_DigestInfo(${1:Val}, ${2:TagIn}) $3'), ('enc_DigestInfoNull/2', 'enc_DigestInfoNull(${1:Val}, ${2:TagIn}) $3'), ('enc_OtherPrimeInfo/2', 'enc_OtherPrimeInfo(${1:Val}, ${2:TagIn}) $3'), ('enc_OtherPrimeInfos/2', 'enc_OtherPrimeInfos(${1:Val}, ${2:TagIn}) $3'), ('enc_RSAPrivateKey/2', 'enc_RSAPrivateKey(${1:Val}, ${2:TagIn}) $3'), ('enc_RSAPublicKey/2', 'enc_RSAPublicKey(${1:Val}, ${2:TagIn}) $3'), ("'enc_RSASSA-PSS-params'/2", "'enc_RSASSA-PSS-params'(${1:Val}, ${2:TagIn}) $3"), ('enc_TrailerField/2', 'enc_TrailerField(${1:Val}, ${2:TagIn}) $3'), ('enc_Version/2', 'enc_Version(${1:Val}, ${2:TagIn}) $3'), ('encode/2', 'encode(${1:Type}, ${2:Data}) $3'), ('encode_disp/2', 'encode_disp(${1:Type}, ${2:Data}) $3'), ('encoding_rule/0', 'encoding_rule() $1'), ("'id-RSAES-OAEP'/0", "'id-RSAES-OAEP'() $1"), ("'id-RSASSA-PSS'/0", "'id-RSASSA-PSS'() $1"), ("'id-md2'/0", "'id-md2'() $1"), ("'id-md5'/0", "'id-md5'() $1"), ("'id-mgf1'/0", "'id-mgf1'() $1"), ("'id-pSpecified'/0", "'id-pSpecified'() $1"), ("'id-sha1'/0", "'id-sha1'() $1"), ('info/0', 'info() $1'), ('md2WithRSAEncryption/0', 'md2WithRSAEncryption() $1'), ('md5WithRSAEncryption/0', 'md5WithRSAEncryption() $1'), ("'pkcs-1'/0", "'pkcs-1'() $1"), ('rsaEncryption/0', 'rsaEncryption() $1'), ('sha1WithRSAEncryption/0', 'sha1WithRSAEncryption() $1'), ('sha256WithRSAEncryption/0', 'sha256WithRSAEncryption() $1'), ('sha384WithRSAEncryption/0', 'sha384WithRSAEncryption() $1'), ('sha512WithRSAEncryption/0', 'sha512WithRSAEncryption() $1')],
'ssh': [('start/0', 'start() $1'), ('start/1', 'start(${1:Type}) $2'), ('stop/0', 'stop() $1'), ('connect/3', 'connect(${1:Host}, ${2:Port}, ${3:Options}) $4'), ('connect/4', 'connect(${1:Host}, ${2:Port}, ${3:Options}, ${4:Timeout}) $5'), ('close/1', 'close(${1:ConnectionRef}) $2'), ('connection_info/2', 'connection_info(${1:ConnectionRef}, ${2:Options}) $3'), ('channel_info/3', 'channel_info(${1:ConnectionRef}, ${2:ChannelId}, ${3:Options}) $4'), ('daemon/1', 'daemon(${1:Port}) $2'), ('daemon/2', 'daemon(${1:Port}, ${2:Options}) $3'), ('daemon/3', 'daemon(${1:Address}, ${2:Port}, ${3:Options}) $4'), ('stop_listener/1', 'stop_listener(${1:SysRef}) $2'), ('stop_listener/2', 'stop_listener(${1:Address}, ${2:Port}) $3'), ('stop_daemon/1', 'stop_daemon(${1:SysRef}) $2'), ('stop_daemon/2', 'stop_daemon(${1:Address}, ${2:Port}) $3'), ('shell/1', 'shell(${1:Host}) $2'), ('shell/2', 'shell(${1:Host}, ${2:Options}) $3'), ('shell/3', 'shell(${1:Host}, ${2:Port}, ${3:Options}) $4')],
'ssh_acceptor': [('start_link/5', 'start_link(${1:Port}, ${2:Address}, ${3:SockOpts}, ${4:Opts}, ${5:AcceptTimeout}) $6')],
'ssh_acceptor_sup': [('start_link/1', 'start_link(${1:Servers}) $2'), ('start_child/2', 'start_child(${1:AccSup}, ${2:ServerOpts}) $3'), ('stop_child/2', 'stop_child(${1:Address}, ${2:Port}) $3')],
'ssh_app': [('start/2', 'start(${1:Param1}, ${2:Param2}) $3'), ('stop/1', 'stop(${1:Param1}) $2')],
'ssh_auth': [('publickey_msg/1', 'publickey_msg() $1'), ('password_msg/1', 'password_msg() $1'), ('keyboard_interactive_msg/1', 'keyboard_interactive_msg() $1'), ('service_request_msg/1', 'service_request_msg(${1:Ssh}) $2'), ('init_userauth_request_msg/1', 'init_userauth_request_msg(${1:Param1}) $2'), ('userauth_request_msg/1', 'userauth_request_msg(${1:Param1}) $2'), ('handle_userauth_request/3', 'handle_userauth_request() $1'), ('handle_userauth_info_request/3', 'handle_userauth_info_request() $1'), ('handle_userauth_info_response/2', 'handle_userauth_info_response(${1:Param1}, ${2:Param2}) $3'), ('userauth_messages/0', 'userauth_messages() $1')],
'ssh_bits': [('encode/1', 'encode(${1:Record}) $2'), ('encode/2', 'encode(${1:List}, ${2:Types}) $3')],
'ssh_channel': [('start/4', 'start(${1:ConnectionManager}, ${2:ChannelId}, ${3:CallBack}, ${4:CbInitArgs}) $5'), ('start/5', 'start(${1:ConnectionManager}, ${2:ChannelId}, ${3:CallBack}, ${4:CbInitArgs}, ${5:Exec}) $6'), ('start_link/4', 'start_link(${1:ConnectionManager}, ${2:ChannelId}, ${3:CallBack}, ${4:CbInitArgs}) $5'), ('start_link/5', 'start_link(${1:ConnectionManager}, ${2:ChannelId}, ${3:CallBack}, ${4:CbInitArgs}, ${5:Exec}) $6'), ('call/2', 'call(${1:ChannelPid}, ${2:Msg}) $3'), ('call/3', 'call(${1:ChannelPid}, ${2:Msg}, ${3:TimeOute}) $4'), ('cast/2', 'cast(${1:ChannelPid}, ${2:Msg}) $3'), ('reply/2', 'reply(${1:From}, ${2:Msg}) $3'), ('enter_loop/1', 'enter_loop(${1:State}) $2')],
'ssh_channel_sup': [('start_link/1', 'start_link(${1:Args}) $2'), ('start_child/2', 'start_child(${1:Sup}, ${2:ChildSpec}) $3')],
'ssh_cli': [('init/1', 'init(${1:Args}) $2'), ('handle_ssh_msg/2', 'handle_ssh_msg(${1:Param1}, ${2:State}) $3'), ('handle_msg/2', 'handle_msg(${1:Param1}, ${2:State}) $3'), ('terminate/2', 'terminate(${1:Reason}, ${2:State}) $3')],
'ssh_connection': [('session_channel/2', 'session_channel(${1:ConnectionManager}, ${2:Timeout}) $3'), ('session_channel/4', 'session_channel(${1:ConnectionManager}, ${2:InitialWindowSize}, ${3:MaxPacketSize}, ${4:Timeout}) $5'), ('exec/4', 'exec(${1:ConnectionManager}, ${2:ChannelId}, ${3:Command}, ${4:Timeout}) $5'), ('shell/2', 'shell(${1:ConnectionManager}, ${2:ChannelId}) $3'), ('subsystem/4', 'subsystem(${1:ConnectionManager}, ${2:ChannelId}, ${3:SubSystem}, ${4:TimeOut}) $5'), ('send/3', 'send(${1:ConnectionManager}, ${2:ChannelId}, ${3:Data}) $4'), ('send/4', 'send(${1:ConnectionManager}, ${2:ChannelId}, ${3:Type}, ${4:Data}) $5'), ('send/5', 'send(${1:ConnectionManager}, ${2:ChannelId}, ${3:Type}, ${4:Data}, ${5:TimeOut}) $6'), ('send_eof/2', 'send_eof(${1:ConnectionManager}, ${2:ChannelId}) $3'), ('adjust_window/3', 'adjust_window(${1:ConnectionManager}, ${2:Channel}, ${3:Bytes}) $4'), ('open_pty/3', 'open_pty(${1:ConnectionManager}, ${2:Channel}, ${3:TimeOut}) $4'), ('open_pty/7', 'open_pty(${1:ConnectionManager}, ${2:Channel}, ${3:Term}, ${4:Width}, ${5:Height}, ${6:PtyOpts}, ${7:TimeOut}) $8'), ('open_pty/9', 'open_pty(${1:ConnectionManager}, ${2:Channel}, ${3:Term}, ${4:Width}, ${5:Height}, ${6:PixWidth}, ${7:PixHeight}, ${8:PtyOpts}, ${9:TimeOut}) $10'), ('setenv/5', 'setenv(${1:ConnectionManager}, ${2:ChannelId}, ${3:Var}, ${4:Value}, ${5:TimeOut}) $6'), ('window_change/4', 'window_change(${1:ConnectionManager}, ${2:Channel}, ${3:Width}, ${4:Height}) $5'), ('window_change/6', 'window_change(${1:ConnectionManager}, ${2:Channel}, ${3:Width}, ${4:Height}, ${5:PixWidth}, ${6:PixHeight}) $7'), ('direct_tcpip/6', 'direct_tcpip(${1:ConnectionManager}, ${2:RemoteHost}, ${3:RemotePort}, ${4:OrigIP}, ${5:OrigPort}, ${6:Timeout}) $7'), ('direct_tcpip/8', 'direct_tcpip(${1:ConnectionManager}, ${2:RemoteIP}, ${3:RemotePort}, ${4:OrigIP}, ${5:OrigPort}, ${6:InitialWindowSize}, ${7:MaxPacketSize}, ${8:Timeout}) $9'), ('tcpip_forward/3', 'tcpip_forward(${1:ConnectionManager}, ${2:BindIP}, ${3:BindPort}) $4'), ('cancel_tcpip_forward/3', 'cancel_tcpip_forward(${1:ConnectionManager}, ${2:BindIP}, ${3:Port}) $4'), ('signal/3', 'signal(${1:ConnectionManager}, ${2:Channel}, ${3:Sig}) $4'), ('exit_status/3', 'exit_status(${1:ConnectionManager}, ${2:Channel}, ${3:Status}) $4'), ('encode_ip/1', 'encode_ip(${1:Param1}) $2'), ('close/2', 'close(${1:ConnectionManager}, ${2:ChannelId}) $3'), ('reply_request/4', 'reply_request(${1:ConnectionManager}, ${2:WantReply}, ${3:Status}, ${4:CannelId}) $5')],
'ssh_connection_controler': [('start_link/1', 'start_link(${1:Args}) $2'), ('start_handler_child/2', 'start_handler_child(${1:ServerRef}, ${2:Args}) $3'), ('start_manager_child/2', 'start_manager_child(${1:ServerRef}, ${2:Args}) $3'), ('connection_manager/1', 'connection_manager(${1:ServerRef}) $2')],
'ssh_connection_handler': [('start_link/4', 'start_link(${1:Role}, ${2:Manager}, ${3:Socket}, ${4:Options}) $5'), ('send/2', 'send(${1:ConnectionHandler}, ${2:Data}) $3'), ('renegotiate/1', 'renegotiate(${1:ConnectionHandler}) $2'), ('send_event/2', 'send_event(${1:FsmPid}, ${2:Event}) $3'), ('connection_info/3', 'connection_info(${1:ConnectionHandler}, ${2:From}, ${3:Options}) $4'), ('peer_address/1', 'peer_address(${1:ConnectionHandler}) $2')],
'ssh_connection_manager': [('start_link/1', 'start_link(${1:Opts}) $2')],
'ssh_dsa': [('verify/3', 'verify(${1:Public}, ${2:Mb}, ${3:Sb}) $4')],
'ssh_file': [('public_host_dsa_key/2', 'public_host_dsa_key(${1:Type}, ${2:Opts}) $3'), ('private_host_dsa_key/2', 'private_host_dsa_key(${1:Type}, ${2:Opts}) $3'), ('public_host_rsa_key/2', 'public_host_rsa_key(${1:Type}, ${2:Opts}) $3'), ('private_host_rsa_key/2', 'private_host_rsa_key(${1:Type}, ${2:Opts}) $3'), ('public_host_key/2', 'public_host_key(${1:Type}, ${2:Opts}) $3'), ('private_host_key/2', 'private_host_key(${1:Type}, ${2:Opts}) $3'), ('lookup_host_key/3', 'lookup_host_key(${1:Host}, ${2:Alg}, ${3:Opts}) $4'), ('add_host_key/3', 'add_host_key(${1:Host}, ${2:Key}, ${3:Opts}) $4'), ('lookup_user_key/3', 'lookup_user_key(${1:User}, ${2:Alg}, ${3:Opts}) $4'), ('ssh_dir/2', 'ssh_dir(${1:Param1}, ${2:Opts}) $3'), ('file_name/3', 'file_name(${1:Type}, ${2:Name}, ${3:Opts}) $4')],
'ssh_io': [('yes_no/1', 'yes_no(${1:Prompt}) $2'), ('read_password/1', 'read_password(${1:Prompt}) $2'), ('read_line/1', 'read_line(${1:Param1}) $2'), ('format/2', 'format(${1:Fmt}, ${2:Args}) $3')],
'ssh_math': [('ilog2/1', 'ilog2(${1:N}) $2'), ('ipow/3', 'ipow() $1'), ('invert/2', 'invert() $1'), ('ipow2/3', 'ipow2(${1:A}, ${2:B}, ${3:Prod}) $4')],
'ssh_no_io': [('yes_no/1', 'yes_no(${1:Param1}) $2'), ('read_password/1', 'read_password(${1:Param1}) $2'), ('read_line/1', 'read_line(${1:Param1}) $2'), ('format/2', 'format(${1:Param1}, ${2:Param2}) $3')],
'ssh_rsa': [('verify/3', 'verify(${1:Public}, ${2:Mb}, ${3:Sb}) $4'), ('sign/2', 'sign(${1:Private}, ${2:Mb}) $3')],
'ssh_sftp': [('start_channel/1', 'start_channel(${1:Param1}) $2'), ('start_channel/2', 'start_channel(${1:Cm}, ${2:Opts}) $3'), ('start_channel/3', 'start_channel(${1:Host}, ${2:Port}, ${3:Opts}) $4'), ('stop_channel/1', 'stop_channel(${1:Pid}) $2')],
'ssh_sftpd': [('subsystem_spec/1', 'subsystem_spec(${1:Options}) $2'), ('listen/1', 'listen(${1:Port}) $2'), ('listen/2', 'listen(${1:Port}, ${2:Options}) $3'), ('listen/3', 'listen(${1:Addr}, ${2:Port}, ${3:Options}) $4'), ('stop/1', 'stop(${1:Pid}) $2')],
'ssh_sftpd_file': [('close/2', 'close(${1:IoDevice}, ${2:State}) $3'), ('delete/2', 'delete(${1:Path}, ${2:State}) $3'), ('del_dir/2', 'del_dir(${1:Path}, ${2:State}) $3'), ('get_cwd/1', 'get_cwd(${1:State}) $2'), ('is_dir/2', 'is_dir(${1:AbsPath}, ${2:State}) $3'), ('list_dir/2', 'list_dir(${1:AbsPath}, ${2:State}) $3'), ('make_dir/2', 'make_dir(${1:Dir}, ${2:State}) $3'), ('make_symlink/3', 'make_symlink(${1:Path2}, ${2:Path}, ${3:State}) $4'), ('open/3', 'open(${1:Path}, ${2:Flags}, ${3:State}) $4'), ('position/3', 'position(${1:IoDevice}, ${2:Offs}, ${3:State}) $4'), ('read/3', 'read(${1:IoDevice}, ${2:Len}, ${3:State}) $4'), ('read_file_info/2', 'read_file_info(${1:Path}, ${2:State}) $3'), ('read_link/2', 'read_link(${1:Path}, ${2:State}) $3'), ('read_link_info/2', 'read_link_info(${1:Path}, ${2:State}) $3'), ('rename/3', 'rename(${1:Path}, ${2:Path2}, ${3:State}) $4'), ('write/3', 'write(${1:IoDevice}, ${2:Data}, ${3:State}) $4'), ('write_file_info/3', 'write_file_info(${1:Path}, ${2:Info}, ${3:State}) $4')],
'ssh_shell': [('init/1', 'init(${1:Args}) $2'), ('handle_msg/2', 'handle_msg(${1:Param1}, ${2:Param2}) $3'), ('handle_ssh_msg/2', 'handle_ssh_msg(${1:Param1}, ${2:State}) $3'), ('terminate/2', 'terminate(${1:Reasons}, ${2:State}) $3')],
'ssh_subsystem_sup': [('start_link/1', 'start_link(${1:Opts}) $2'), ('connection_supervisor/1', 'connection_supervisor(${1:SupPid}) $2'), ('channel_supervisor/1', 'channel_supervisor(${1:SupPid}) $2')],
'ssh_sup': [('init/1', 'init(${1:Param1}) $2')],
'ssh_system_sup': [('start_link/1', 'start_link(${1:ServerOpts}) $2'), ('stop_listener/1', 'stop_listener(${1:SysSup}) $2'), ('stop_listener/2', 'stop_listener(${1:Address}, ${2:Port}) $3'), ('stop_system/1', 'stop_system(${1:SysSup}) $2'), ('stop_system/2', 'stop_system(${1:Address}, ${2:Port}) $3'), ('system_supervisor/2', 'system_supervisor(${1:Address}, ${2:Port}) $3'), ('subsystem_supervisor/1', 'subsystem_supervisor(${1:SystemSup}) $2'), ('channel_supervisor/1', 'channel_supervisor(${1:SystemSup}) $2'), ('connection_supervisor/1', 'connection_supervisor(${1:SystemSup}) $2'), ('acceptor_supervisor/1', 'acceptor_supervisor(${1:SystemSup}) $2'), ('start_subsystem/2', 'start_subsystem(${1:SystemSup}, ${2:Options}) $3'), ('restart_subsystem/2', 'restart_subsystem(${1:Address}, ${2:Port}) $3'), ('restart_acceptor/2', 'restart_acceptor(${1:Address}, ${2:Port}) $3'), ('stop_subsystem/2', 'stop_subsystem(${1:SystemSup}, ${2:SubSys}) $3')],
'ssh_transport': [('connect/5', 'connect(${1:ConnectionSup}, ${2:Address}, ${3:Port}, ${4:SocketOpts}, ${5:Opts}) $6'), ('accept/4', 'accept(${1:Address}, ${2:Port}, ${3:Socket}, ${4:Options}) $5')],
'ssh_userreg': [('start_link/0', 'start_link() $1'), ('register_user/2', 'register_user(${1:User}, ${2:Cm}) $3'), ('lookup_user/1', 'lookup_user(${1:Cm}) $2'), ('delete_user/1', 'delete_user(${1:Cm}) $2')],
'ssh_xfer': [('attach/2', 'attach(${1:CM}, ${2:Opts}) $3'), ('connect/3', 'connect(${1:Host}, ${2:Port}, ${3:Opts}) $4')],
'sshc_sup': [('start_link/1', 'start_link(${1:Args}) $2'), ('start_child/1', 'start_child(${1:Args}) $2')],
'sshd_sup': [('start_link/1', 'start_link(${1:Servers}) $2'), ('start_child/1', 'start_child(${1:ServerOpts}) $2'), ('stop_child/1', 'stop_child(${1:Name}) $2'), ('stop_child/2', 'stop_child(${1:Address}, ${2:Port}) $3'), ('system_name/1', 'system_name(${1:SysSup}) $2')],
'client_server': [('start/0', 'start() $1'), ('start/1', 'start(${1:CertOpts}) $2'), ('init_connect/1', 'init_connect(${1:Param1}) $2')],
'inet_tls_dist': [('childspecs/0', 'childspecs() $1'), ('listen/1', 'listen(${1:Name}) $2'), ('accept/1', 'accept(${1:Listen}) $2'), ('accept_connection/5', 'accept_connection(${1:AcceptPid}, ${2:Socket}, ${3:MyNode}, ${4:Allowed}, ${5:SetupTime}) $6'), ('setup/5', 'setup(${1:Node}, ${2:Type}, ${3:MyNode}, ${4:LongOrShortNames}, ${5:SetupTime}) $6'), ('close/1', 'close(${1:Socket}) $2'), ('select/1', 'select(${1:Node}) $2'), ('is_node_name/1', 'is_node_name(${1:Param1}) $2')],
'ssl': [('start/0', 'start() $1'), ('start/1', 'start(${1:Type}) $2'), ('stop/0', 'stop() $1'), ('transport_accept/1', 'transport_accept(${1:ListenSocket}) $2'), ('transport_accept/2', 'transport_accept(${1:Param1}, ${2:Timeout}) $3'), ('ssl_accept/1', 'ssl_accept(${1:ListenSocket}) $2'), ('ssl_accept/2', 'ssl_accept(${1:ListenSocket}, ${2:Timeout}) $3'), ('ssl_accept/3', 'ssl_accept(${1:Socket}, ${2:SslOptions}, ${3:Param3}) $4'), ('cipher_suites/0', 'cipher_suites() $1'), ('cipher_suites/1', 'cipher_suites(${1:Param1}) $2'), ('close/1', 'close(${1:Param1}) $2'), ('shutdown/2', 'shutdown(${1:Param1}, ${2:How}) $3'), ('connect/3', 'connect(${1:Socket}, ${2:SslOptions0}, ${3:Options}) $4'), ('connect/2', 'connect(${1:Socket}, ${2:Param2}) $3'), ('connect/4', 'connect(${1:Host}, ${2:Port}, ${3:Options}, ${4:Timeout}) $5'), ('connection_info/1', 'connection_info(${1:Param1}) $2'), ('controlling_process/2', 'controlling_process(${1:Param1}, ${2:Param2}) $3'), ('listen/2', 'listen(${1:Port}, ${2:Options0}) $3'), ('pid/1', 'pid(${1:Pid}) $2'), ('peername/1', 'peername(${1:Param1}) $2'), ('peercert/1', 'peercert(${1:Param1}) $2'), ('recv/2', 'recv(${1:Socket}, ${2:Length}) $3'), ('recv/3', 'recv(${1:Param1}, ${2:Length}, ${3:Timeout}) $4'), ('send/2', 'send(${1:Param1}, ${2:Data}) $3'), ('getopts/2', 'getopts(${1:Param1}, ${2:OptionTags}) $3'), ('setopts/2', 'setopts(${1:Param1}, ${2:Options}) $3'), ('sockname/1', 'sockname(${1:Param1}) $2'), ('versions/0', 'versions() $1'), ('session_info/1', 'session_info(${1:Param1}) $2'), ('format_error/1', 'format_error(${1:Error}) $2'), ('renegotiate/1', 'renegotiate(${1:Param1}) $2')],
'ssl_alert': [('alert_txt/1', 'alert_txt(${1:Param1}) $2'), ('reason_code/2', 'reason_code(${1:Param1}, ${2:Param2}) $3')],
'ssl_app': [('start/2', 'start(${1:Param1}, ${2:Param2}) $3'), ('stop/1', 'stop(${1:Param1}) $2')],
'ssl_certificate': [('trusted_cert_and_path/3', 'trusted_cert_and_path(${1:CertChain}, ${2:CertDbHandle}, ${3:CertDbRef}) $4'), ('certificate_chain/3', 'certificate_chain(${1:OwnCert}, ${2:CertDbHandle}, ${3:CertsDbRef}) $4'), ('file_to_certificats/2', 'file_to_certificats(${1:File}, ${2:DbHandle}) $3'), ('validate_extension/3', 'validate_extension(${1:Param1}, ${2:Param2}, ${3:Role}) $4'), ('is_valid_extkey_usage/2', 'is_valid_extkey_usage(${1:KeyUse}, ${2:Param2}) $3'), ('is_valid_key_usage/2', 'is_valid_key_usage(${1:KeyUse}, ${2:Use}) $3'), ('select_extension/2', 'select_extension(${1:Id}, ${2:Param2}) $3'), ('extensions_list/1', 'extensions_list(${1:Extensions}) $2'), ('signature_type/1', 'signature_type(${1:Param1}) $2')],
'ssl_certificate_db': [('create/0', 'create() $1'), ('remove/1', 'remove(${1:Dbs}) $2'), ('add_trusted_certs/3', 'add_trusted_certs(${1:Pid}, ${2:File}, ${3:Param3}) $4'), ('remove_trusted_certs/2', 'remove_trusted_certs(${1:Pid}, ${2:Param2}) $3'), ('lookup_trusted_cert/4', 'lookup_trusted_cert(${1:DbHandle}, ${2:Ref}, ${3:SerialNumber}, ${4:Issuer}) $5'), ('foldl/3', 'foldl(${1:Fun}, ${2:Acc0}, ${3:Cache}) $4'), ('lookup_cached_certs/2', 'lookup_cached_certs(${1:DbHandle}, ${2:File}) $3'), ('cache_pem_file/4', 'cache_pem_file(${1:Pid}, ${2:File}, ${3:Time}, ${4:Param4}) $5'), ('uncache_pem_file/2', 'uncache_pem_file(${1:File}, ${2:Param2}) $3'), ('lookup/2', 'lookup(${1:Key}, ${2:Db}) $3')],
'ssl_cipher': [('security_parameters/2', 'security_parameters(${1:CipherSuite}, ${2:SecParams}) $3'), ('suite_definition/1', 'suite_definition(${1:Param1}) $2'), ('decipher/5', 'decipher(${1:Fun}, ${2:HashSz}, ${3:CipherState}, ${4:Fragment}, ${5:Version}) $6'), ('cipher/4', 'cipher(${1:Fun}, ${2:CipherState}, ${3:Mac}, ${4:Fragment}) $5'), ('suite/1', 'suite(${1:Param1}) $2'), ('suites/1', 'suites(${1:Param1}) $2'), ('anonymous_suites/0', 'anonymous_suites() $1'), ('openssl_suite/1', 'openssl_suite(${1:Param1}) $2'), ('openssl_suite_name/1', 'openssl_suite_name(${1:Cipher}) $2'), ('filter/2', 'filter(${1:DerCert}, ${2:Ciphers}) $3')],
'ssl_connection': [('send/2', 'send(${1:Pid}, ${2:Data}) $3'), ('recv/3', 'recv(${1:Pid}, ${2:Length}, ${3:Timeout}) $4'), ('connect/7', 'connect(${1:Host}, ${2:Port}, ${3:Socket}, ${4:Options}, ${5:User}, ${6:CbInfo}, ${7:Timeout}) $8'), ('ssl_accept/6', 'ssl_accept(${1:Port}, ${2:Socket}, ${3:Opts}, ${4:User}, ${5:CbInfo}, ${6:Timeout}) $7'), ('handshake/2', 'handshake(${1:State}, ${2:Timeout}) $3'), ('socket_control/3', 'socket_control(${1:Socket}, ${2:Pid}, ${3:CbModule}) $4'), ('close/1', 'close(${1:ConnectionPid}) $2'), ('shutdown/2', 'shutdown(${1:ConnectionPid}, ${2:How}) $3'), ('new_user/2', 'new_user(${1:ConnectionPid}, ${2:User}) $3'), ('get_opts/2', 'get_opts(${1:ConnectionPid}, ${2:OptTags}) $3'), ('set_opts/2', 'set_opts(${1:ConnectionPid}, ${2:Options}) $3'), ('info/1', 'info(${1:ConnectionPid}) $2'), ('session_info/1', 'session_info(${1:ConnectionPid}) $2'), ('peer_certificate/1', 'peer_certificate(${1:ConnectionPid}) $2'), ('sockname/1', 'sockname(${1:ConnectionPid}) $2'), ('peername/1', 'peername(${1:ConnectionPid}) $2'), ('renegotiation/1', 'renegotiation(${1:ConnectionPid}) $2')],
'ssl_connection_sup': [('start_link/0', 'start_link() $1'), ('start_link_dist/0', 'start_link_dist() $1')],
'ssl_debug': [('unhex/1', 'unhex(${1:S}) $2'), ('hexd/1', 'hexd(${1:B}) $2'), ('hex_data/2', 'hex_data(${1:Name}, ${2:Data}) $3'), ('term_data/2', 'term_data(${1:Name}, ${2:Term}) $3'), ('hex_data/4', 'hex_data(${1:Name}, ${2:Data}, ${3:Mod}, ${4:Line}) $5'), ('term_data/4', 'term_data(${1:Name}, ${2:Term}, ${3:Mod}, ${4:Line}) $5'), ('make_binary/1', 'make_binary(${1:Size}) $2')],
'ssl_dist_sup': [('start_link/0', 'start_link() $1')],
'ssl_handshake': [('master_secret/4', 'master_secret(${1:Version}, ${2:PremasterSecret}, ${3:ConnectionStates}, ${4:Role}) $5'), ('client_hello/6', 'client_hello(${1:Param1}, ${2:Param2}, ${3:Param3}, ${4:Param4}, ${5:Param5}, ${6:Param6}) $7'), ('server_hello/4', 'server_hello(${1:SessionId}, ${2:Version}, ${3:ConnectionStates}, ${4:Renegotiation}) $5'), ('hello/4', 'hello(${1:SessionId}, ${2:Version}, ${3:ConnectionStates}, ${4:Renegotiation}) $5'), ('hello_request/0', 'hello_request() $1'), ('certify/7', 'certify(${1:Param1}, ${2:CertDbHandle}, ${3:CertDbRef}, ${4:MaxPathLen}, ${5:Param5}, ${6:VerifyFunAndState}, ${7:Role}) $8'), ('certificate/4', 'certificate(${1:OwnCert}, ${2:CertDbHandle}, ${3:CertDbRef}, ${4:Param4}) $5'), ('client_certificate_verify/5', 'client_certificate_verify(${1:OwnCert}, ${2:MasterSecret}, ${3:Version}, ${4:PrivateKey}, ${5:Param5}) $6'), ('certificate_verify/5', 'certificate_verify(${1:OwnCert}, ${2:MasterSecret}, ${3:Version}, ${4:PrivateKey}, ${5:Hashes}) $6'), ('certificate_request/3', 'certificate_request(${1:ConnectionStates}, ${2:CertDbHandle}, ${3:CertDbRef}) $4'), ('key_exchange/2', 'key_exchange(${1:Param1}, ${2:Param2}) $3'), ('server_key_exchange_hash/2', 'server_key_exchange_hash(${1:Param1}, ${2:Value}) $3'), ('finished/4', 'finished(${1:Version}, ${2:Role}, ${3:MasterSecret}, ${4:Hashes}) $5'), ('verify_connection/5', 'verify_connection(${1:Version}, ${2:Param2}, ${3:Role}, ${4:MasterSecret}, ${5:Param5}) $6'), ('get_tls_handshake/2', 'get_tls_handshake(${1:Data}, ${2:Buffer}) $3'), ('decode_client_key/3', 'decode_client_key(${1:ClientKey}, ${2:Type}, ${3:Version}) $4'), ('server_hello_done/0', 'server_hello_done() $1'), ('encode_handshake/2', 'encode_handshake(${1:Package}, ${2:Version}) $3'), ('init_hashes/0', 'init_hashes() $1'), ('update_hashes/2', 'update_hashes(${1:Param1}, ${2:Data}) $3'), ('decrypt_premaster_secret/2', 'decrypt_premaster_secret(${1:Secret}, ${2:RSAPrivateKey}) $3')],
'ssl_manager': [('start_link/1', 'start_link(${1:Opts}) $2'), ('start_link_dist/1', 'start_link_dist(${1:Opts}) $2'), ('connection_init/2', 'connection_init(${1:Trustedcerts}, ${2:Role}) $3'), ('cache_pem_file/2', 'cache_pem_file(${1:File}, ${2:DbHandle}) $3'), ('lookup_trusted_cert/4', 'lookup_trusted_cert(${1:DbHandle}, ${2:Ref}, ${3:SerialNumber}, ${4:Issuer}) $5'), ('client_session_id/4', 'client_session_id(${1:Host}, ${2:Port}, ${3:SslOpts}, ${4:OwnCert}) $5'), ('server_session_id/4', 'server_session_id(${1:Port}, ${2:SuggestedSessionId}, ${3:SslOpts}, ${4:OwnCert}) $5'), ('register_session/2', 'register_session(${1:Host}, ${2:Session}) $3'), ('register_session/3', 'register_session(${1:Host}, ${2:Port}, ${3:Session}) $4'), ('invalidate_session/2', 'invalidate_session(${1:Host}, ${2:Session}) $3'), ('invalidate_session/3', 'invalidate_session(${1:Host}, ${2:Port}, ${3:Session}) $4')],
'ssl_record': [('init_connection_states/1', 'init_connection_states(${1:Role}) $2'), ('current_connection_state/2', 'current_connection_state(${1:Param1}, ${2:Param2}) $3'), ('pending_connection_state/2', 'pending_connection_state(${1:Param1}, ${2:Param2}) $3'), ('update_security_params/3', 'update_security_params(${1:Param1}, ${2:Param2}, ${3:Param3}) $4'), ('set_mac_secret/4', 'set_mac_secret(${1:ClientWriteMacSecret}, ${2:ServerWriteMacSecret}, ${3:Param3}, ${4:States}) $5'), ('set_master_secret/2', 'set_master_secret(${1:Param1}, ${2:Param2}) $3'), ('activate_pending_connection_state/2', 'activate_pending_connection_state(${1:Param1}, ${2:Param2}) $3'), ('set_pending_cipher_state/4', 'set_pending_cipher_state(${1:Param1}, ${2:Param2}, ${3:ClientState}, ${4:Param4}) $5'), ('set_renegotiation_flag/2', 'set_renegotiation_flag(${1:Param1}, ${2:Param2}) $3'), ('set_client_verify_data/3', 'set_client_verify_data(${1:Param1}, ${2:Param2}, ${3:Param3}) $4'), ('set_server_verify_data/3', 'set_server_verify_data(${1:Param1}, ${2:Param2}, ${3:Param3}) $4')],
'ssl_session': [('is_new/2', 'is_new(${1:SessionId}, ${2:SessionId}) $3'), ('id/4', 'id(${1:ClientInfo}, ${2:Cache}, ${3:CacheCb}, ${4:OwnCert}) $5'), ('id/7', 'id(${1:Port}, ${2:SuggestedSessionId}, ${3:Param3}, ${4:Cache}, ${5:CacheCb}, ${6:CacheCb}, ${7:Param7}) $8'), ('valid_session/2', 'valid_session(${1:Param1}, ${2:LifeTime}) $3')],
'ssl_session_cache': [('init/1', 'init(${1:Param1}) $2'), ('terminate/1', 'terminate(${1:Cache}) $2'), ('lookup/2', 'lookup(${1:Cache}, ${2:Key}) $3'), ('update/3', 'update(${1:Cache}, ${2:Key}, ${3:Session}) $4'), ('delete/2', 'delete(${1:Cache}, ${2:Key}) $3'), ('foldl/3', 'foldl(${1:Fun}, ${2:Acc0}, ${3:Cache}) $4'), ('select_session/2', 'select_session(${1:Cache}, ${2:PartialKey}) $3')],
'ssl_ssl2': [('client_random/2', 'client_random(${1:ChallengeData}, ${2:N}) $3')],
'ssl_ssl3': [('master_secret/3', 'master_secret(${1:PremasterSecret}, ${2:ClientRandom}, ${3:ServerRandom}) $4'), ('finished/3', 'finished(${1:Role}, ${2:MasterSecret}, ${3:Param3}) $4'), ('certificate_verify/3', 'certificate_verify(${1:Param1}, ${2:Param2}, ${3:Param3}) $4'), ('mac_hash/6', 'mac_hash(${1:Method}, ${2:Mac_write_secret}, ${3:Seq_num}, ${4:Type}, ${5:Length}, ${6:Fragment}) $7'), ('setup_keys/7', 'setup_keys(${1:MasterSecret}, ${2:ServerRandom}, ${3:ClientRandom}, ${4:HS}, ${5:KML}, ${6:Param6}, ${7:IVS}) $8'), ('suites/0', 'suites() $1')],
'ssl_sup': [('start_link/0', 'start_link() $1'), ('manager_opts/0', 'manager_opts() $1')],
'ssl_tls1': [('master_secret/3', 'master_secret(${1:PreMasterSecret}, ${2:ClientRandom}, ${3:ServerRandom}) $4'), ('finished/3', 'finished(${1:Role}, ${2:MasterSecret}, ${3:Param3}) $4'), ('certificate_verify/2', 'certificate_verify(${1:Param1}, ${2:Param2}) $3'), ('mac_hash/7', 'mac_hash(${1:Method}, ${2:Mac_write_secret}, ${3:Seq_num}, ${4:Type}, ${5:Param5}, ${6:Length}, ${7:Fragment}) $8'), ('setup_keys/6', 'setup_keys(${1:MasterSecret}, ${2:ServerRandom}, ${3:ClientRandom}, ${4:HashSize}, ${5:KeyMatLen}, ${6:IVSize}) $7'), ('suites/0', 'suites() $1')],
'ssl_tls_dist_proxy': [('listen/1', 'listen(${1:Name}) $2'), ('accept/1', 'accept(${1:Listen}) $2'), ('connect/2', 'connect(${1:Ip}, ${2:Port}) $3'), ('get_remote_id/2', 'get_remote_id(${1:Socket}, ${2:Node}) $3')],
'array': [('new/0', 'new() $1'), ('new/1', 'new(${1:Options}) $2'), ('new/2', 'new(${1:Size}, ${2:Param2}) $3'), ('is_array/1', 'is_array(${1:Param1}) $2'), ('set/3', 'set(${1:Param1}, ${2:Param2}, ${3:Param3}) $4'), ('get/2', 'get(${1:Param1}, ${2:Param2}) $3'), ('size/1', 'size(${1:Array}) $2'), ('sparse_size/1', 'sparse_size(${1:A}) $2'), ('default/1', 'default(${1:Param1}) $2'), ('reset/2', 'reset(${1:Param1}, ${2:Param2}) $3'), ('to_list/1', 'to_list(${1:Param1}) $2'), ('sparse_to_list/1', 'sparse_to_list(${1:Param1}) $2'), ('from_list/1', 'from_list(${1:List}) $2'), ('from_list/2', 'from_list(${1:List}, ${2:Default}) $3'), ('to_orddict/1', 'to_orddict(${1:Param1}) $2'), ('sparse_to_orddict/1', 'sparse_to_orddict(${1:Param1}) $2'), ('from_orddict/1', 'from_orddict(${1:Orddict}) $2'), ('from_orddict/2', 'from_orddict(${1:List}, ${2:Default}) $3'), ('map/2', 'map(${1:Function}, ${2:Param2}) $3'), ('sparse_map/2', 'sparse_map(${1:Function}, ${2:Param2}) $3'), ('foldl/3', 'foldl(${1:Function}, ${2:Param2}, ${3:Param3}) $4'), ('foldr/3', 'foldr(${1:Function}, ${2:Param2}, ${3:Param3}) $4'), ('sparse_foldl/3', 'sparse_foldl(${1:Function}, ${2:Param2}, ${3:Param3}) $4'), ('sparse_foldr/3', 'sparse_foldr(${1:Function}, ${2:Param2}, ${3:Param3}) $4'), ('fix/1', 'fix(${1:Param1}) $2'), ('relax/1', 'relax(${1:Param1}) $2'), ('is_fix/1', 'is_fix(${1:Param1}) $2'), ('resize/1', 'resize(${1:Array}) $2'), ('resize/2', 'resize(${1:Param1}, ${2:Param2}) $3')],
'base64': [('encode/1', 'encode(${1:ASCII}) $2'), ('decode/1', 'decode(${1:Base64}) $2'), ('mime_decode/1', 'mime_decode(${1:Base64}) $2'), ('encode_to_string/1', 'encode_to_string(${1:ASCII}) $2'), ('decode_to_string/1', 'decode_to_string(${1:Base64}) $2'), ('mime_decode_to_string/1', 'mime_decode_to_string(${1:Base64}) $2')],
'beam_lib': [('info/1', 'info(${1:Beam}) $2'), ('cmp/2', 'cmp(${1:Beam1}, ${2:Beam2}) $3'), ('cmp_dirs/2', 'cmp_dirs(${1:Dir1}, ${2:Dir2}) $3'), ('chunks/2', 'chunks(${1:Beam}, ${2:ChunkRefs}) $3'), ('chunks/3', 'chunks(${1:Beam}, ${2:ChunkRefs}, ${3:Options}) $4'), ('all_chunks/1', 'all_chunks(${1:File}) $2'), ('diff_dirs/2', 'diff_dirs(${1:Dir1}, ${2:Dir2}) $3'), ('strip/1', 'strip(${1:Beam1}) $2'), ('strip_files/1', 'strip_files(${1:Files}) $2'), ('strip_release/1', 'strip_release(${1:Dir}) $2'), ('build_module/1', 'build_module(${1:Chunks0}) $2'), ('version/1', 'version(${1:Beam}) $2'), ('md5/1', 'md5(${1:Beam}) $2'), ('format_error/1', 'format_error(${1:Reason}) $2')],
'binary': [('split/2', 'split(${1:Subject}, ${2:Pattern}) $3'), ('split/3', 'split(${1:Subject}, ${2:Pattern}, ${3:Options}) $4'), ('replace/3', 'replace(${1:Subject}, ${2:Pattern}, ${3:Replacement}) $4'), ('replace/4', 'replace(${1:Subject}, ${2:Pattern}, ${3:Replacement}, ${4:Options}) $5')],
'c': [('help/0', 'help() $1'), ('lc/1', 'lc(${1:Files}) $2'), ('c/1', 'c(${1:File}) $2'), ('c/2', 'c(${1:File}, ${2:Options}) $3'), ('nc/1', 'nc(${1:File}) $2'), ('nc/2', 'nc(${1:File}, ${2:Options}) $3'), ('nl/1', 'nl(${1:Module}) $2'), ('l/1', 'l(${1:Module}) $2'), ('i/0', 'i() $1'), ('i/1', 'i(${1:Ps}) $2'), ('ni/0', 'ni() $1'), ('y/1', 'y(${1:X}) $2'), ('y/2', 'y(${1:File}, ${2:Opts}) $3'), ('lc_batch/0', 'lc_batch() $1'), ('lc_batch/1', 'lc_batch(${1:Args}) $2'), ('i/3', 'i(${1:Ps}, ${2:Acc}, ${3:Z}) $4'), ('pid/3', 'pid(${1:X}, ${2:Y}, ${3:Z}) $4'), ('m/0', 'm() $1'), ('m/1', 'm(${1:Str}) $2'), ('bt/1', 'bt(${1:Pid}) $2'), ('q/0', 'q() $1'), ('erlangrc/0', 'erlangrc() $1'), ('erlangrc/1', 'erlangrc(${1:Param1}) $2'), ('bi/1', 'bi(${1:I}) $2'), ('flush/0', 'flush() $1'), ('regs/0', 'regs() $1'), ('nregs/0', 'nregs() $1'), ('pwd/0', 'pwd() $1'), ('ls/0', 'ls() $1'), ('ls/1', 'ls(${1:Dir}) $2'), ('cd/1', 'cd(${1:Dir}) $2'), ('memory/1', 'memory(${1:Type}) $2'), ('memory/0', 'memory() $1'), ('xm/1', 'xm(${1:M}) $2')],
'calendar': [('date_to_gregorian_days/1', 'date_to_gregorian_days(${1:Date}) $2'), ('date_to_gregorian_days/3', 'date_to_gregorian_days(${1:Year}, ${2:Month}, ${3:Day}) $4'), ('datetime_to_gregorian_seconds/1', 'datetime_to_gregorian_seconds(${1:DateTime}) $2'), ('day_of_the_week/1', 'day_of_the_week(${1:Date}) $2'), ('day_of_the_week/3', 'day_of_the_week(${1:Year}, ${2:Month}, ${3:Day}) $4'), ('gregorian_days_to_date/1', 'gregorian_days_to_date(${1:Days}) $2'), ('gregorian_seconds_to_datetime/1', 'gregorian_seconds_to_datetime(${1:Seconds}) $2'), ('is_leap_year/1', 'is_leap_year(${1:Year}) $2'), ('iso_week_number/0', 'iso_week_number() $1'), ('iso_week_number/1', 'iso_week_number(${1:Date}) $2'), ('last_day_of_the_month/2', 'last_day_of_the_month(${1:Year}, ${2:Month}) $3'), ('local_time/0', 'local_time() $1'), ('local_time_to_universal_time/1', 'local_time_to_universal_time(${1:DateTime1}) $2'), ('local_time_to_universal_time/2', 'local_time_to_universal_time(${1:DateTime}, ${2:IsDst}) $3'), ('local_time_to_universal_time_dst/1', 'local_time_to_universal_time_dst(${1:DateTime1}) $2'), ('now_to_datetime/1', 'now_to_datetime(${1:Now}) $2'), ('now_to_local_time/1', 'now_to_local_time(${1:Now}) $2'), ('now_to_universal_time/1', 'now_to_universal_time(${1:Now}) $2'), ('seconds_to_daystime/1', 'seconds_to_daystime(${1:Seconds}) $2'), ('seconds_to_time/1', 'seconds_to_time(${1:Seconds}) $2'), ('time_difference/2', 'time_difference(${1:T1}, ${2:T2}) $3'), ('time_to_seconds/1', 'time_to_seconds(${1:Time}) $2'), ('universal_time/0', 'universal_time() $1'), ('universal_time_to_local_time/1', 'universal_time_to_local_time(${1:DateTime}) $2'), ('valid_date/1', 'valid_date(${1:Date}) $2'), ('valid_date/3', 'valid_date(${1:Year}, ${2:Month}, ${3:Day}) $4')],
'dets': [('all/0', 'all() $1'), ('bchunk/2', 'bchunk(${1:Name}, ${2:Continuation}) $3'), ('close/1', 'close(${1:Name}) $2'), ('delete/2', 'delete(${1:Name}, ${2:Key}) $3'), ('delete_all_objects/1', 'delete_all_objects(${1:Name}) $2'), ('delete_object/2', 'delete_object(${1:Name}, ${2:Object}) $3'), ('first/1', 'first(${1:Name}) $2'), ('foldl/3', 'foldl(${1:Function}, ${2:Acc0}, ${3:Name}) $4'), ('foldr/3', 'foldr(${1:Function}, ${2:Acc0}, ${3:Name}) $4'), ('from_ets/2', 'from_ets(${1:Name}, ${2:EtsTab}) $3'), ('info/1', 'info(${1:Name}) $2'), ('info/2', 'info(${1:Name}, ${2:Item}) $3'), ('init_table/2', 'init_table(${1:Name}, ${2:InitFun}) $3'), ('init_table/3', 'init_table(${1:Name}, ${2:InitFun}, ${3:Options}) $4'), ('insert/2', 'insert(${1:Name}, ${2:Objects}) $3'), ('insert_new/2', 'insert_new(${1:Name}, ${2:Objects}) $3'), ('is_compatible_bchunk_format/2', 'is_compatible_bchunk_format(${1:Name}, ${2:BchunkFormat}) $3'), ('is_dets_file/1', 'is_dets_file(${1:Filename}) $2'), ('lookup/2', 'lookup(${1:Name}, ${2:Key}) $3'), ('match/1', 'match(${1:Continuation}) $2'), ('match/2', 'match(${1:Name}, ${2:Pattern}) $3'), ('match/3', 'match(${1:Name}, ${2:Pattern}, ${3:N}) $4'), ('match_delete/2', 'match_delete(${1:Name}, ${2:Pattern}) $3'), ('match_object/1', 'match_object(${1:Continuation}) $2'), ('match_object/2', 'match_object(${1:Name}, ${2:Pattern}) $3'), ('match_object/3', 'match_object(${1:Name}, ${2:Pattern}, ${3:N}) $4'), ('member/2', 'member(${1:Name}, ${2:Key}) $3'), ('next/2', 'next(${1:Name}, ${2:Key1}) $3'), ('open_file/1', 'open_file(${1:Filename}) $2'), ('open_file/2', 'open_file(${1:Name}, ${2:Args}) $3'), ('pid2name/1', 'pid2name(${1:Pid}) $2'), ('repair_continuation/2', 'repair_continuation(${1:Continuation}, ${2:MatchSpec}) $3'), ('safe_fixtable/2', 'safe_fixtable(${1:Name}, ${2:Fix}) $3'), ('select/1', 'select(${1:Continuation}) $2'), ('select/2', 'select(${1:Name}, ${2:MatchSpec}) $3'), ('select/3', 'select(${1:Name}, ${2:MatchSpec}, ${3:N}) $4'), ('select_delete/2', 'select_delete(${1:Name}, ${2:MatchSpec}) $3'), ('slot/2', 'slot(${1:Name}, ${2:I}) $3'), ('sync/1', 'sync(${1:Name}) $2'), ('table/1', 'table(${1:Name}) $2'), ('table/2', 'table(${1:Name}, ${2:InitFun}) $3'), ('to_ets/2', 'to_ets(${1:Name}, ${2:EtsTab}) $3'), ('traverse/2', 'traverse(${1:Name}, ${2:Fun}) $3'), ('update_counter/3', 'update_counter(${1:Name}, ${2:Key}, ${3:Increment}) $4')],
'dets_server': [('all/0', 'all() $1'), ('close/1', 'close(${1:Tab}) $2'), ('get_pid/1', 'get_pid(${1:Tab}) $2'), ('open_file/1', 'open_file(${1:File}) $2'), ('open_file/2', 'open_file(${1:Tab}, ${2:OpenArgs}) $3'), ('pid2name/1', 'pid2name(${1:Pid}) $2'), ('users/1', 'users(${1:Tab}) $2'), ('verbose/1', 'verbose(${1:What}) $2')],
'dets_sup': [('start_link/0', 'start_link() $1'), ('init/1', 'init(${1:Param1}) $2')],
'dets_utils': [('cmp/2', 'cmp(${1:T}, ${2:T}) $3'), ('msort/1', 'msort(${1:L}) $2'), ('mkeysort/2', 'mkeysort(${1:I}, ${2:L}) $3'), ('mkeysearch/3', 'mkeysearch(${1:Key}, ${2:I}, ${3:L}) $4'), ('family/1', 'family(${1:L}) $2')],
'dets_v8': [('mark_dirty/1', 'mark_dirty(${1:Head}) $2'), ('read_file_header/2', 'read_file_header(${1:Fd}, ${2:FileName}) $3'), ('check_file_header/2', 'check_file_header(${1:FH}, ${2:Fd}) $3'), ('do_perform_save/1', 'do_perform_save(${1:H}) $2'), ('initiate_file/11', 'initiate_file(${1:Fd}, ${2:Tab}, ${3:Fname}, ${4:Type}, ${5:Kp}, ${6:MinSlots}, ${7:MaxSlots}, ${8:Ram}, ${9:CacheSz}, ${10:Auto}, ${11:Param11}) $12'), ('init_freelist/2', 'init_freelist(${1:Head}, ${2:Param2}) $3'), ('fsck_input/4', 'fsck_input(${1:Head}, ${2:Fd}, ${3:Cntrs}, ${4:Param4}) $5'), ('bulk_input/3', 'bulk_input(${1:Head}, ${2:InitFun}, ${3:Cntrs}) $4'), ('output_objs/4', 'output_objs(${1:OldVersion}, ${2:Head}, ${3:SlotNumbers}, ${4:Cntrs}) $5'), ('write_cache/1', 'write_cache(${1:Head}) $2'), ('may_grow/3', 'may_grow(${1:Head}, ${2:N}, ${3:How}) $4'), ('find_object/2', 'find_object(${1:Head}, ${2:Object}) $3'), ('re_hash/2', 're_hash(${1:Head}, ${2:SlotStart}) $3'), ('slot_objs/2', 'slot_objs(${1:H}, ${2:Slot}) $3'), ('scan_objs/8', 'scan_objs(${1:Param1}, ${2:Bin}, ${3:From}, ${4:To}, ${5:L}, ${6:Ts}, ${7:R}, ${8:R}) $9'), ('db_hash/2', 'db_hash(${1:Key}, ${2:Head}) $3'), ('no_slots/1', 'no_slots(${1:Param1}) $2'), ('table_parameters/1', 'table_parameters(${1:Param1}) $2')],
'dets_v9': [('mark_dirty/1', 'mark_dirty(${1:Head}) $2'), ('read_file_header/2', 'read_file_header(${1:Fd}, ${2:FileName}) $3'), ('check_file_header/2', 'check_file_header(${1:FH}, ${2:Fd}) $3'), ('do_perform_save/1', 'do_perform_save(${1:H}) $2'), ('initiate_file/11', 'initiate_file(${1:Fd}, ${2:Tab}, ${3:Fname}, ${4:Type}, ${5:Kp}, ${6:MinSlots0}, ${7:MaxSlots0}, ${8:Ram}, ${9:CacheSz}, ${10:Auto}, ${11:DoInitSegments}) $12'), ('prep_table_copy/9', 'prep_table_copy(${1:Fd}, ${2:Tab}, ${3:Fname}, ${4:Type}, ${5:Kp}, ${6:Ram}, ${7:CacheSz}, ${8:Auto}, ${9:Parms}) $10'), ('init_freelist/2', 'init_freelist(${1:Head}, ${2:Param2}) $3'), ('fsck_input/4', 'fsck_input(${1:Head}, ${2:Fd}, ${3:Cntrs}, ${4:FileHeader}) $5'), ('bulk_input/3', 'bulk_input(${1:Head}, ${2:InitFun}, ${3:Param3}) $4'), ('output_objs/4', 'output_objs() $1'), ('bchunk_init/2', 'bchunk_init(${1:Head}, ${2:InitFun}) $3'), ('try_bchunk_header/2', 'try_bchunk_header(${1:ParmsBin}, ${2:Head}) $3'), ('compact_init/3', 'compact_init(${1:ReadHead}, ${2:WriteHead}, ${3:TableParameters}) $4'), ('read_bchunks/2', 'read_bchunks(${1:Head}, ${2:L}) $3'), ('write_cache/1', 'write_cache(${1:Head}) $2'), ('may_grow/3', 'may_grow(${1:Head}, ${2:N}, ${3:How}) $4'), ('find_object/2', 'find_object(${1:Head}, ${2:Object}) $3'), ('slot_objs/2', 'slot_objs(${1:H}, ${2:Slot}) $3'), ('scan_objs/8', 'scan_objs(${1:Head}, ${2:Bin}, ${3:From}, ${4:To}, ${5:L}, ${6:Ts}, ${7:R}, ${8:Type}) $9'), ('db_hash/2', 'db_hash(${1:Key}, ${2:Head}) $3'), ('no_slots/1', 'no_slots(${1:Head}) $2'), ('table_parameters/1', 'table_parameters(${1:Head}) $2')],
'dict': [('new/0', 'new() $1'), ('is_key/2', 'is_key(${1:Key}, ${2:Dict}) $3'), ('to_list/1', 'to_list(${1:Dict}) $2'), ('from_list/1', 'from_list(${1:List}) $2'), ('size/1', 'size(${1:Dict}) $2')],
'digraph': [('new/0', 'new() $1'), ('new/1', 'new(${1:Type}) $2'), ('delete/1', 'delete(${1:G}) $2'), ('info/1', 'info(${1:G}) $2')],
'digraph_utils': [('components/1', 'components(${1:Digraph}) $2'), ('strong_components/1', 'strong_components(${1:Digraph}) $2'), ('cyclic_strong_components/1', 'cyclic_strong_components(${1:Digraph}) $2'), ('reachable/2', 'reachable(${1:Vertices}, ${2:Digraph}) $3'), ('reachable_neighbours/2', 'reachable_neighbours(${1:Vertices}, ${2:Digraph}) $3'), ('reaching/2', 'reaching(${1:Vertices}, ${2:Digraph}) $3'), ('reaching_neighbours/2', 'reaching_neighbours(${1:Vertices}, ${2:Digraph}) $3'), ('topsort/1', 'topsort(${1:Digraph}) $2'), ('is_acyclic/1', 'is_acyclic(${1:Digraph}) $2'), ('arborescence_root/1', 'arborescence_root(${1:Digraph}) $2'), ('is_arborescence/1', 'is_arborescence(${1:Digraph}) $2'), ('is_tree/1', 'is_tree(${1:Digraph}) $2'), ('loop_vertices/1', 'loop_vertices(${1:Digraph}) $2'), ('subgraph/2', 'subgraph(${1:Digraph}, ${2:Vertices}) $3'), ('subgraph/3', 'subgraph(${1:Digraph}, ${2:Vertices}, ${3:Options}) $4'), ('condensation/1', 'condensation(${1:Digraph}) $2'), ('preorder/1', 'preorder(${1:Digraph}) $2'), ('postorder/1', 'postorder(${1:Digraph}) $2')],
'edlin': [('init/0', 'init() $1'), ('start/1', 'start(${1:Pbs}) $2'), ('edit_line/2', 'edit_line(${1:Cs}, ${2:Param2}) $3'), ('prefix_arg/1', 'prefix_arg(${1:N}) $2')],
'edlin_expand': [('expand/1', 'expand(${1:CurrentBefore}) $2'), ('format_matches/1', 'format_matches(${1:L}) $2')],
'epp': [('open/2', 'open(${1:FileName}, ${2:IncludePath}) $3'), ('open/3', 'open(${1:FileName}, ${2:IncludePath}, ${3:PredefMacros}) $4'), ('open/5', 'open(${1:Name}, ${2:File}, ${3:StartLocation}, ${4:Path}, ${5:Pdm}) $6'), ('close/1', 'close(${1:Epp}) $2'), ('format_error/1', 'format_error(${1:ErrorDescriptor}) $2')],
'erl_bits': [('system_bittypes/0', 'system_bittypes() $1'), ('system_bitdefault/0', 'system_bitdefault() $1'), ('set_bit_type/2', 'set_bit_type(${1:Size}, ${2:TypeList}) $3'), ('as_list/1', 'as_list(${1:Bt}) $2')],
'erl_compile': [('compile_cmdline/1', 'compile_cmdline(${1:List}) $2')],
'erl_eval': [('exprs/2', 'exprs(${1:Expressions}, ${2:Bindings}) $3'), ('exprs/3', 'exprs(${1:Expressions}, ${2:Bindings}, ${3:LocalFunctionHandler}) $4'), ('exprs/4', 'exprs(${1:Expressions}, ${2:Bindings}, ${3:LocalFunctionHandler}, ${4:NonLocalFunctionHandler}) $5'), ('expr/2', 'expr(${1:Expression}, ${2:Bindings}) $3'), ('expr/3', 'expr(${1:Expression}, ${2:Bindings}, ${3:LocalFunctionHandler}) $4'), ('expr/4', 'expr(${1:Expression}, ${2:Bindings}, ${3:LocalFunctionHandler}, ${4:NonLocalFunctionHandler}) $5'), ('expr/5', 'expr(${1:Expression}, ${2:Bindings}, ${3:LocalFunctionHandler}, ${4:NonLocalFunctionHandler}, ${5:ReturnFormat}) $6'), ('expr_list/2', 'expr_list(${1:ExpressionList}, ${2:Bindings}) $3'), ('expr_list/3', 'expr_list(${1:ExpressionList}, ${2:Bindings}, ${3:LocalFunctionHandler}) $4'), ('expr_list/4', 'expr_list(${1:ExpressionList}, ${2:Bindings}, ${3:LocalFunctionHandler}, ${4:NonLocalFunctionHandler}) $5')],
'erl_expand_records': [('module/2', 'module(${1:AbsForms}, ${2:CompileOptions}) $3')],
'erl_internal': [('bif/2', 'bif(${1:Name}, ${2:Arity}) $3'), ('bif/3', 'bif(${1:Name}, ${2:Name}, ${3:Arity}) $4'), ('guard_bif/2', 'guard_bif(${1:Name}, ${2:Arity}) $3'), ('type_test/2', 'type_test(${1:Name}, ${2:Arity}) $3'), ('new_type_test/2', 'new_type_test(${1:Name}, ${2:Param2}) $3'), ('old_type_test/2', 'old_type_test(${1:Name}, ${2:Param2}) $3'), ('old_bif/2', 'old_bif(${1:Name}, ${2:Param2}) $3')],
'erl_lint': [('module/1', 'module(${1:AbsForms}) $2'), ('module/2', 'module(${1:AbsForms}, ${2:FileName}) $3'), ('module/3', 'module(${1:AbsForms}, ${2:FileName}, ${3:CompileOptions}) $4'), ('format_error/1', 'format_error(${1:ErrorDescriptor}) $2')],
'erl_parse': [('parse/1', 'parse(${1:Tokens}) $2'), ('parse_and_scan/1', 'parse_and_scan(${1:Param1}) $2'), ('format_error/1', 'format_error(${1:Message}) $2')],
'erl_posix_msg': [('message/1', 'message(${1:T}) $2')],
'erl_pp': [('form/1', 'form(${1:Form}) $2'), ('form/2', 'form(${1:Form}, ${2:HookFunction}) $3'), ('attribute/1', 'attribute(${1:Attribute}) $2'), ('attribute/2', 'attribute(${1:Attribute}, ${2:HookFunction}) $3'), ('function/1', 'function(${1:Function}) $2'), ('function/2', 'function(${1:Function}, ${2:HookFunction}) $3'), ('rule/1', 'rule(${1:R}) $2'), ('rule/2', 'rule(${1:R}, ${2:Hook}) $3'), ('guard/1', 'guard(${1:Guard}) $2'), ('guard/2', 'guard(${1:Guard}, ${2:HookFunction}) $3'), ('exprs/1', 'exprs(${1:Expressions}) $2'), ('exprs/2', 'exprs(${1:Expressions}, ${2:HookFunction}) $3'), ('exprs/3', 'exprs(${1:Expressions}, ${2:Indent}, ${3:HookFunction}) $4'), ('expr/1', 'expr(${1:Expression}) $2'), ('expr/2', 'expr(${1:Expression}, ${2:HookFunction}) $3'), ('expr/3', 'expr(${1:Expression}, ${2:Indent}, ${3:HookFunction}) $4'), ('expr/4', 'expr(${1:Expression}, ${2:Indent}, ${3:Precedence}, ${4:HookFunction}) $5')],
'erl_scan': [('string/1', 'string(${1:String}) $2'), ('string/2', 'string(${1:String}, ${2:StartLocation}) $3'), ('string/3', 'string(${1:String}, ${2:StartLocation}, ${3:Options}) $4'), ('tokens/3', 'tokens(${1:Continuation}, ${2:CharSpec}, ${3:StartLocation}) $4'), ('tokens/4', 'tokens(${1:Continuation}, ${2:CharSpec}, ${3:StartLocation}, ${4:Options}) $5'), ('format_error/1', 'format_error(${1:ErrorDescriptor}) $2'), ('reserved_word/1', 'reserved_word(${1:Param1}) $2'), ('token_info/1', 'token_info(${1:Token}) $2'), ('token_info/2', 'token_info(${1:Token}, ${2:TokenItem}) $3'), ('attributes_info/1', 'attributes_info(${1:Attributes}) $2'), ('attributes_info/2', 'attributes_info(${1:Attributes}, ${2:AttributeItem}) $3'), ('set_attribute/3', 'set_attribute(${1:AttributeItem}, ${2:Attributes}, ${3:SetAttributeFun}) $4')],
'erl_tar': [('create/2', 'create(${1:Name}, ${2:Filenames}) $3'), ('create/3', 'create(${1:Name}, ${2:FileList}, ${3:Options}) $4'), ('extract/1', 'extract(${1:Name}) $2'), ('extract/2', 'extract(${1:Name}, ${2:Opts}) $3'), ('table/1', 'table(${1:Name}) $2'), ('table/2', 'table(${1:Name}, ${2:Opts}) $3'), ('open/2', 'open(${1:Name}, ${2:Mode}) $3'), ('close/1', 'close(${1:Param1}) $2'), ('add/3', 'add(${1:File}, ${2:Name}, ${3:Options}) $4'), ('add/4', 'add(${1:Param1}, ${2:Name}, ${3:NameInArchive}, ${4:Options}) $5'), ('t/1', 't(${1:Name}) $2'), ('tt/1', 'tt(${1:Name}) $2'), ('format_error/1', 'format_error(${1:Term}) $2')],
'error_logger_file_h': [('init/1', 'init(${1:File}) $2'), ('handle_event/2', 'handle_event(${1:Event}, ${2:State}) $3'), ('handle_call/2', 'handle_call(${1:Param1}, ${2:State}) $3'), ('handle_info/2', 'handle_info(${1:Param1}, ${2:State}) $3'), ('terminate/2', 'terminate(${1:Param1}, ${2:State}) $3'), ('code_change/3', 'code_change(${1:Param1}, ${2:State}, ${3:Param3}) $4')],
'error_logger_tty_h': [('init/1', 'init(${1:Param1}) $2'), ('handle_event/2', 'handle_event(${1:Event}, ${2:State}) $3'), ('handle_call/2', 'handle_call(${1:Param1}, ${2:State}) $3'), ('handle_info/2', 'handle_info(${1:Param1}, ${2:State}) $3'), ('terminate/2', 'terminate(${1:Param1}, ${2:Param2}) $3'), ('code_change/3', 'code_change(${1:Param1}, ${2:State}, ${3:Param3}) $4')],
'escript': [('script_name/0', 'script_name() $1'), ('create/2', 'create(${1:File}, ${2:Param2}) $3'), ('extract/2', 'extract(${1:File}, ${2:Param2}) $3')],
'ets': [('file2tab/1', 'file2tab(${1:Filename}) $2'), ('file2tab/2', 'file2tab(${1:Filename}, ${2:Options}) $3'), ('filter/3', 'filter(${1:Tn}, ${2:F}, ${3:Ack}) $4'), ('foldl/3', 'foldl(${1:Function}, ${2:Acc0}, ${3:Tab}) $4'), ('foldr/3', 'foldr(${1:Function}, ${2:Acc0}, ${3:Tab}) $4'), ('match_delete/2', 'match_delete(${1:Tab}, ${2:Pattern}) $3'), ('tab2file/2', 'tab2file(${1:Tab}, ${2:Filename}) $3'), ('tab2file/3', 'tab2file(${1:Tab}, ${2:Filename}, ${3:Options}) $4'), ('tabfile_info/1', 'tabfile_info(${1:Filename}) $2'), ('from_dets/2', 'from_dets(${1:Tab}, ${2:DetsTab}) $3'), ('to_dets/2', 'to_dets(${1:Tab}, ${2:DetsTab}) $3'), ('init_table/2', 'init_table(${1:Tab}, ${2:InitFun}) $3'), ('test_ms/2', 'test_ms(${1:Tuple}, ${2:MatchSpec}) $3'), ('tab2list/1', 'tab2list(${1:Tab}) $2'), ('table/1', 'table(${1:Tab}) $2'), ('table/2', 'table(${1:Tab}, ${2:InitFun}) $3'), ('fun2ms/1', 'fun2ms(${1:LiteralFun}) $2'), ('match_spec_run/2', 'match_spec_run(${1:List}, ${2:CompiledMS}) $3'), ('repair_continuation/2', 'repair_continuation(${1:Continuation}, ${2:MatchSpec}) $3')],
'eval_bits': [('expr_grp/3', 'expr_grp(${1:Fields}, ${2:Bindings}, ${3:EvalFun}) $4'), ('expr_grp/5', 'expr_grp(${1:Fields}, ${2:Bindings}, ${3:EvalFun}, ${4:ListOfBits}, ${5:Param5}) $6'), ('match_bits/6', 'match_bits(${1:Fs}, ${2:Bin}, ${3:Bs0}, ${4:BBs}, ${5:Mfun}, ${6:Param6}) $7'), ('match_bits/7', 'match_bits(${1:Fs}, ${2:Bin}, ${3:Bs0}, ${4:BBs}, ${5:Mfun}, ${6:Efun}, ${7:Param7}) $8'), ('bin_gen/6', 'bin_gen(${1:Param1}, ${2:Bin}, ${3:Bs0}, ${4:BBs0}, ${5:Mfun}, ${6:Efun}) $7')],
'file_sorter': [('sort/1', 'sort(${1:FileName}) $2'), ('sort/2', 'sort(${1:Input}, ${2:Output}) $3'), ('sort/3', 'sort(${1:Input}, ${2:Output}, ${3:Options}) $4'), ('keysort/2', 'keysort(${1:KeyPos}, ${2:FileName}) $3'), ('keysort/3', 'keysort(${1:KeyPos}, ${2:Input}, ${3:Output}) $4'), ('keysort/4', 'keysort(${1:KeyPos}, ${2:Input}, ${3:Output}, ${4:Options}) $5'), ('merge/2', 'merge(${1:FileNames}, ${2:Output}) $3'), ('merge/3', 'merge(${1:FileNames}, ${2:Output}, ${3:Options}) $4'), ('keymerge/3', 'keymerge(${1:KeyPos}, ${2:FileNames}, ${3:Output}) $4'), ('keymerge/4', 'keymerge(${1:KeyPos}, ${2:FileNames}, ${3:Output}, ${4:Options}) $5'), ('check/1', 'check(${1:FileName}) $2'), ('check/2', 'check(${1:FileNames}, ${2:Options}) $3'), ('keycheck/2', 'keycheck(${1:KeyPos}, ${2:FileName}) $3'), ('keycheck/3', 'keycheck(${1:KeyPos}, ${2:FileNames}, ${3:Options}) $4')],
'filelib': [('wildcard/1', 'wildcard(${1:Wildcard}) $2'), ('wildcard/2', 'wildcard(${1:Wildcard}, ${2:Cwd}) $3'), ('is_dir/1', 'is_dir(${1:Name}) $2'), ('is_file/1', 'is_file(${1:Name}) $2'), ('is_regular/1', 'is_regular(${1:Name}) $2'), ('compile_wildcard/1', 'compile_wildcard(${1:Pattern}) $2')],
'filename': [('absname/1', 'absname(${1:Filename}) $2'), ('absname/2', 'absname(${1:Filename}, ${2:Dir}) $3'), ('absname_join/2', 'absname_join(${1:Dir}, ${2:Filename}) $3'), ('basename/1', 'basename(${1:Filename}) $2'), ('basename/2', 'basename(${1:Filename}, ${2:Ext}) $3'), ('dirname/1', 'dirname(${1:Filename}) $2'), ('extension/1', 'extension(${1:Filename}) $2'), ('join/1', 'join(${1:Components}) $2'), ('join/2', 'join(${1:Dir}, ${2:Filename}) $3'), ('pathtype/1', 'pathtype(${1:Path}) $2'), ('rootname/1', 'rootname(${1:Filename}) $2'), ('rootname/2', 'rootname(${1:Filename}, ${2:OsType}) $3'), ('split/1', 'split(${1:Filename}) $2'), ('nativename/1', 'nativename(${1:Path}) $2')],
'gb_sets': [('empty/0', 'empty() $1'), ('is_empty/1', 'is_empty(${1:Set}) $2'), ('size/1', 'size(${1:Set}) $2'), ('singleton/1', 'singleton(${1:Element}) $2'), ('is_member/2', 'is_member(${1:Element}, ${2:Set}) $3'), ('insert/2', 'insert(${1:Element}, ${2:Set1}) $3'), ('add/2', 'add(${1:Element}, ${2:Set1}) $3'), ('delete/2', 'delete(${1:Element}, ${2:Set1}) $3'), ('delete_any/2', 'delete_any(${1:Element}, ${2:Set1}) $3'), ('balance/1', 'balance(${1:Set1}) $2'), ('union/2', 'union(${1:Set1}, ${2:Set2}) $3'), ('union/1', 'union(${1:SetList}) $2'), ('intersection/2', 'intersection(${1:Set1}, ${2:Set2}) $3'), ('intersection/1', 'intersection(${1:SetList}) $2'), ('is_disjoint/2', 'is_disjoint(${1:Set1}, ${2:Set2}) $3'), ('difference/2', 'difference(${1:Set1}, ${2:Set2}) $3'), ('is_subset/2', 'is_subset(${1:Set1}, ${2:Set2}) $3'), ('to_list/1', 'to_list(${1:Set}) $2'), ('from_list/1', 'from_list(${1:List}) $2'), ('from_ordset/1', 'from_ordset(${1:List}) $2'), ('smallest/1', 'smallest(${1:Set1}) $2'), ('largest/1', 'largest(${1:Set1}) $2'), ('take_smallest/1', 'take_smallest(${1:Set1}) $2'), ('take_largest/1', 'take_largest(${1:Set1}) $2'), ('iterator/1', 'iterator(${1:Set}) $2'), ('next/1', 'next(${1:Iter1}) $2'), ('filter/2', 'filter(${1:Pred}, ${2:Set1}) $3'), ('fold/3', 'fold(${1:Function}, ${2:Acc0}, ${3:Set}) $4'), ('is_set/1', 'is_set(${1:Term}) $2')],
'gb_trees': [('empty/0', 'empty() $1'), ('is_empty/1', 'is_empty(${1:Tree}) $2'), ('size/1', 'size(${1:Tree}) $2'), ('lookup/2', 'lookup(${1:Key}, ${2:Tree}) $3'), ('get/2', 'get(${1:Key}, ${2:Tree}) $3'), ('insert/3', 'insert(${1:Key}, ${2:Val}, ${3:Tree1}) $4'), ('update/3', 'update(${1:Key}, ${2:Val}, ${3:Tree1}) $4'), ('enter/3', 'enter(${1:Key}, ${2:Val}, ${3:Tree1}) $4'), ('delete/2', 'delete(${1:Key}, ${2:Tree1}) $3'), ('delete_any/2', 'delete_any(${1:Key}, ${2:Tree1}) $3'), ('balance/1', 'balance(${1:Tree1}) $2'), ('is_defined/2', 'is_defined(${1:Key}, ${2:Tree}) $3'), ('keys/1', 'keys(${1:Tree}) $2'), ('values/1', 'values(${1:Tree}) $2'), ('to_list/1', 'to_list(${1:Tree}) $2'), ('from_orddict/1', 'from_orddict(${1:List}) $2'), ('smallest/1', 'smallest(${1:Tree1}) $2'), ('largest/1', 'largest(${1:Tree1}) $2'), ('take_smallest/1', 'take_smallest(${1:Tree1}) $2'), ('take_largest/1', 'take_largest(${1:Tree1}) $2'), ('iterator/1', 'iterator(${1:Tree}) $2'), ('next/1', 'next(${1:Iter1}) $2'), ('map/2', 'map(${1:F}, ${2:Tree1}) $3')],
'gen': [('start/5', 'start(${1:GenMod}, ${2:LinkP}, ${3:Name}, ${4:Mod}, ${5:Options}) $6'), ('start/6', 'start(${1:GenMod}, ${2:LinkP}, ${3:Name}, ${4:Mod}, ${5:Args}, ${6:Options}) $7'), ('debug_options/1', 'debug_options(${1:Opts}) $2'), ('call/3', 'call(${1:Process}, ${2:Label}, ${3:Request}) $4'), ('call/4', 'call(${1:Process}, ${2:Label}, ${3:Request}, ${4:Timeout}) $5'), ('reply/2', 'reply(${1:Param1}, ${2:Reply}) $3')],
'gen_event': [('start/0', 'start() $1'), ('start/1', 'start(${1:Handler}) $2'), ('start_link/0', 'start_link() $1'), ('start_link/1', 'start_link(${1:Name}) $2'), ('stop/1', 'stop(${1:Handler}) $2'), ('notify/2', 'notify(${1:Handler}, ${2:Event}) $3'), ('sync_notify/2', 'sync_notify(${1:M}, ${2:Event}) $3'), ('add_handler/3', 'add_handler(${1:Handler}, ${2:Mod}, ${3:Args}) $4'), ('add_sup_handler/3', 'add_sup_handler(${1:M}, ${2:Handler}, ${3:Args}) $4'), ('delete_handler/3', 'delete_handler(${1:Handler}, ${2:Mod}, ${3:Args}) $4'), ('swap_handler/3', 'swap_handler(${1:Handler}, ${2:Args1}, ${3:Param3}) $4'), ('swap_sup_handler/3', 'swap_sup_handler(${1:M}, ${2:Param2}, ${3:Param3}) $4'), ('which_handlers/1', 'which_handlers(${1:M}) $2'), ('call/3', 'call(${1:Handler}, ${2:Mod}, ${3:Query}) $4'), ('call/4', 'call(${1:Handler}, ${2:Mod}, ${3:Query}, ${4:Timeout}) $5'), ('wake_hib/4', 'wake_hib(${1:Parent}, ${2:ServerName}, ${3:MSL}, ${4:Debug}) $5')],
'gen_fsm': [('start/3', 'start(${1:Mod}, ${2:Args}, ${3:Options}) $4'), ('start/4', 'start(${1:Name}, ${2:Mod}, ${3:Args}, ${4:Options}) $5'), ('start_link/3', 'start_link(${1:Mod}, ${2:Args}, ${3:Options}) $4'), ('start_link/4', 'start_link(${1:Name}, ${2:Mod}, ${3:Args}, ${4:Options}) $5'), ('send_event/2', 'send_event(${1:Name}, ${2:Event}) $3'), ('sync_send_event/2', 'sync_send_event(${1:Name}, ${2:Event}) $3'), ('sync_send_event/3', 'sync_send_event(${1:Name}, ${2:Event}, ${3:Timeout}) $4'), ('send_all_state_event/2', 'send_all_state_event(${1:Name}, ${2:Event}) $3'), ('sync_send_all_state_event/2', 'sync_send_all_state_event(${1:Name}, ${2:Event}) $3'), ('sync_send_all_state_event/3', 'sync_send_all_state_event(${1:Name}, ${2:Event}, ${3:Timeout}) $4'), ('reply/2', 'reply(${1:Name}, ${2:Reply}) $3'), ('start_timer/2', 'start_timer(${1:Time}, ${2:Msg}) $3'), ('send_event_after/2', 'send_event_after(${1:Time}, ${2:Event}) $3'), ('cancel_timer/1', 'cancel_timer(${1:Ref}) $2'), ('enter_loop/4', 'enter_loop(${1:Mod}, ${2:Options}, ${3:StateName}, ${4:StateData}) $5'), ('enter_loop/5', 'enter_loop(${1:Mod}, ${2:Options}, ${3:StateName}, ${4:StateData}, ${5:Timeout}) $6'), ('enter_loop/6', 'enter_loop(${1:Mod}, ${2:Options}, ${3:StateName}, ${4:StateData}, ${5:ServerName}, ${6:Timeout}) $7'), ('wake_hib/6', 'wake_hib(${1:Parent}, ${2:Name}, ${3:StateName}, ${4:StateData}, ${5:Mod}, ${6:Debug}) $7')],
'gen_server': [('start/3', 'start(${1:Mod}, ${2:Args}, ${3:Options}) $4'), ('start/4', 'start(${1:Name}, ${2:Mod}, ${3:Args}, ${4:Options}) $5'), ('start_link/3', 'start_link(${1:Mod}, ${2:Args}, ${3:Options}) $4'), ('start_link/4', 'start_link(${1:Name}, ${2:Mod}, ${3:Args}, ${4:Options}) $5'), ('call/2', 'call(${1:Name}, ${2:Request}) $3'), ('call/3', 'call(${1:Name}, ${2:Request}, ${3:Timeout}) $4'), ('cast/2', 'cast(${1:Dest}, ${2:Request}) $3'), ('reply/2', 'reply(${1:Reply}, ${2:Reply}) $3'), ('abcast/2', 'abcast(${1:Name}, ${2:Param2}) $3'), ('abcast/3', 'abcast(${1:Nodes}, ${2:Name}, ${3:Param3}) $4'), ('multi_call/2', 'multi_call(${1:Nodes}, ${2:Param2}) $3'), ('multi_call/3', 'multi_call(${1:Nodes}, ${2:Name}, ${3:Param3}) $4'), ('multi_call/4', 'multi_call(${1:Nodes}, ${2:Name}, ${3:Req}, ${4:Timeout}) $5'), ('enter_loop/3', 'enter_loop(${1:Mod}, ${2:Options}, ${3:State}) $4'), ('enter_loop/4', 'enter_loop(${1:Mod}, ${2:Options}, ${3:State}, ${4:Timeout}) $5'), ('enter_loop/5', 'enter_loop(${1:Mod}, ${2:Options}, ${3:State}, ${4:ServerName}, ${5:Timeout}) $6'), ('wake_hib/5', 'wake_hib(${1:Parent}, ${2:Name}, ${3:State}, ${4:Mod}, ${5:Debug}) $6')],
'io': [('put_chars/1', 'put_chars(${1:CharData}) $2'), ('put_chars/2', 'put_chars(${1:IoDevice}, ${2:IoData}) $3'), ('nl/0', 'nl() $1'), ('nl/1', 'nl(${1:IoDevice}) $2'), ('get_chars/2', 'get_chars(${1:Prompt}, ${2:Count}) $3'), ('get_chars/3', 'get_chars(${1:IoDevice}, ${2:Prompt}, ${3:Count}) $4'), ('get_line/1', 'get_line(${1:Prompt}) $2'), ('get_line/2', 'get_line(${1:IoDevice}, ${2:Prompt}) $3'), ('get_password/0', 'get_password() $1'), ('get_password/1', 'get_password(${1:Io}) $2'), ('setopts/1', 'setopts(${1:Opts}) $2'), ('setopts/2', 'setopts(${1:IoDevice}, ${2:Opts}) $3'), ('getopts/0', 'getopts() $1'), ('getopts/1', 'getopts(${1:IoDevice}) $2')],
'io_lib': [('fwrite/2', 'fwrite(${1:Format}, ${2:Data}) $3'), ('fread/2', 'fread(${1:Format}, ${2:String}) $3'), ('fread/3', 'fread(${1:Continuation}, ${2:CharSpec}, ${3:Format}) $4'), ('format/2', 'format(${1:Format}, ${2:Data}) $3')],
'io_lib_format': [('fwrite/2', 'fwrite(${1:Format}, ${2:ArgList}) $3'), ('fwrite_g/1', 'fwrite_g(${1:Param1}) $2'), ('indentation/2', 'indentation(${1:Param1}, ${2:Indentation}) $3')],
'io_lib_fread': [('fread/2', 'fread(${1:Continuation}, ${2:Format}) $3'), ('fread/3', 'fread(${1:Continuation}, ${2:String}, ${3:Format}) $4')],
'io_lib_pretty': [('print/1', 'print(${1:Term}) $2'), ('print/2', 'print(${1:Term}, ${2:RecDefFun}) $3'), ('print/3', 'print(${1:Term}, ${2:Column}, ${3:RecDefFun}) $4'), ('print/4', 'print(${1:Term}, ${2:Column}, ${3:LineLength}, ${4:Depth}) $5'), ('print/5', 'print(${1:Term}, ${2:Col}, ${3:Ll}, ${4:D}, ${5:RecDefFun}) $6'), ('print/6', 'print(${1:Term}, ${2:Col}, ${3:Ll}, ${4:D}, ${5:M0}, ${6:RecDefFun}) $7')],
'lib': [('flush_receive/0', 'flush_receive() $1'), ('error_message/2', 'error_message(${1:Format}, ${2:Args}) $3'), ('progname/0', 'progname() $1'), ('nonl/1', 'nonl(${1:String1}) $2'), ('send/2', 'send(${1:To}, ${2:Msg}) $3'), ('sendw/2', 'sendw(${1:To}, ${2:Msg}) $3'), ('eval_str/1', 'eval_str(${1:InStr}) $2')],
'lists': [('append/2', 'append(${1:List1}, ${2:List2}) $3'), ('append/1', 'append(${1:ListOfLists}) $2'), ('subtract/2', 'subtract(${1:List1}, ${2:List2}) $3'), ('reverse/1', 'reverse(${1:List1}) $2'), ('nth/2', 'nth(${1:N}, ${2:List}) $3'), ('nthtail/2', 'nthtail(${1:N}, ${2:List}) $3'), ('prefix/2', 'prefix(${1:Prefix}, ${2:List}) $3'), ('suffix/2', 'suffix(${1:Suffix}, ${2:List}) $3'), ('last/1', 'last(${1:List}) $2'), ('seq/2', 'seq(${1:Min}, ${2:Max}) $3'), ('seq/3', 'seq(${1:Min}, ${2:Max}, ${3:Incr}) $4'), ('sum/1', 'sum(${1:List}) $2'), ('duplicate/2', 'duplicate(${1:N}, ${2:X}) $3'), ('min/1', 'min(${1:L}) $2'), ('max/1', 'max(${1:L}) $2'), ('sublist/2', 'sublist(${1:List1}, ${2:Len}) $3'), ('sublist/3', 'sublist(${1:List1}, ${2:Start}, ${3:Len}) $4'), ('delete/2', 'delete(${1:Item}, ${2:List}) $3'), ('unzip/1', 'unzip(${1:List1}) $2'), ('unzip3/1', 'unzip3(${1:List1}) $2'), ('zip/2', 'zip(${1:List1}, ${2:List2}) $3'), ('zip3/3', 'zip3(${1:List1}, ${2:List2}, ${3:List3}) $4'), ('zipwith/3', 'zipwith(${1:Combine}, ${2:List1}, ${3:List2}) $4'), ('zipwith3/4', 'zipwith3(${1:Combine}, ${2:List1}, ${3:List2}, ${4:List3}) $5'), ('sort/1', 'sort(${1:List}) $2'), ('merge/1', 'merge(${1:List}) $2'), ('merge/2', 'merge(${1:X}, ${2:Y}) $3'), ('rmerge/2', 'rmerge(${1:X}, ${2:Y}) $3'), ('merge3/3', 'merge3(${1:X}, ${2:Y}, ${3:Z}) $4'), ('rmerge3/3', 'rmerge3(${1:X}, ${2:Y}, ${3:Z}) $4'), ('usort/1', 'usort(${1:List}) $2'), ('umerge/1', 'umerge(${1:List}) $2'), ('umerge3/3', 'umerge3(${1:X}, ${2:Y}, ${3:Z}) $4'), ('umerge/2', 'umerge(${1:Fun}, ${2:Y}) $3'), ('rumerge3/3', 'rumerge3(${1:X}, ${2:Y}, ${3:Z}) $4'), ('rumerge/2', 'rumerge(${1:Fun}, ${2:Y}) $3'), ('concat/1', 'concat(${1:Things}) $2'), ('flatten/1', 'flatten(${1:DeepList}) $2'), ('flatten/2', 'flatten(${1:DeepList}, ${2:Tail}) $3'), ('flatlength/1', 'flatlength(${1:DeepList}) $2'), ('keydelete/3', 'keydelete(${1:Key}, ${2:N}, ${3:TupleList1}) $4'), ('keyreplace/4', 'keyreplace(${1:Key}, ${2:N}, ${3:TupleList1}, ${4:NewTuple}) $5'), ('keytake/3', 'keytake(${1:Key}, ${2:N}, ${3:TupleList1}) $4'), ('keystore/4', 'keystore(${1:Key}, ${2:N}, ${3:TupleList1}, ${4:NewTuple}) $5'), ('keysort/2', 'keysort(${1:N}, ${2:TupleList1}) $3'), ('keymerge/3', 'keymerge(${1:N}, ${2:TupleList1}, ${3:TupleList2}) $4'), ('rkeymerge/3', 'rkeymerge(${1:Param1}, ${2:Param2}, ${3:Param3}) $4'), ('rukeymerge/3', 'rukeymerge(${1:Param1}, ${2:Param2}, ${3:Param3}) $4'), ('ukeysort/2', 'ukeysort(${1:N}, ${2:TupleList1}) $3'), ('ukeymerge/3', 'ukeymerge(${1:N}, ${2:TupleList1}, ${3:TupleList2}) $4'), ('keymap/3', 'keymap(${1:Fun}, ${2:N}, ${3:TupleList1}) $4')],
'log_mf_h': [('init/3', 'init(${1:Dir}, ${2:MaxBytes}, ${3:MaxFiles}) $4'), ('init/4', 'init(${1:Dir}, ${2:MaxB}, ${3:MaxFiles}, ${4:Pred}) $5')],
'math': [('pi/0', 'pi() $1')],
'ms_transform': [('format_error/1', 'format_error(${1:Error}) $2'), ('transform_from_shell/3', 'transform_from_shell(${1:Dialect}, ${2:Clauses}, ${3:BoundEnvironment}) $4'), ('parse_transform/2', 'parse_transform(${1:Forms}, ${2:Options}) $3')],
'orddict': [('new/0', 'new() $1'), ('is_key/2', 'is_key(${1:Key}, ${2:Orddict}) $3'), ('to_list/1', 'to_list(${1:Orddict}) $2'), ('from_list/1', 'from_list(${1:List}) $2'), ('size/1', 'size(${1:Orddict}) $2')],
'ordsets': [('new/0', 'new() $1'), ('is_set/1', 'is_set(${1:Term}) $2'), ('size/1', 'size(${1:OrdSet}) $2'), ('to_list/1', 'to_list(${1:OrdSet}) $2'), ('from_list/1', 'from_list(${1:List}) $2')],
'otp_internal': [('obsolete/3', 'obsolete(${1:Module}, ${2:Name}, ${3:Arity}) $4')],
'pg': [('create/1', 'create(${1:PgName}) $2'), ('create/2', 'create(${1:PgName}, ${2:Node}) $3'), ('standby/2', 'standby(${1:Param1}, ${2:Param2}) $3'), ('join/2', 'join(${1:PgName}, ${2:Pid}) $3'), ('send/2', 'send(${1:PgName}, ${2:Msg}) $3'), ('esend/2', 'esend(${1:PgName}, ${2:Msg}) $3'), ('members/1', 'members(${1:PgName}) $2'), ('name_to_pid/1', 'name_to_pid(${1:Param1}) $2'), ('master/1', 'master(${1:PgName}) $2')],
'pool': [('start/1', 'start(${1:Name}) $2'), ('start/2', 'start(${1:Name}, ${2:Args}) $3'), ('stop/0', 'stop() $1'), ('get_nodes/0', 'get_nodes() $1'), ('get_nodes_and_load/0', 'get_nodes_and_load() $1'), ('get_node/0', 'get_node() $1'), ('pspawn/3', 'pspawn(${1:Mod}, ${2:Fun}, ${3:Args}) $4'), ('attach/1', 'attach(${1:Node}) $2'), ('pspawn_link/3', 'pspawn_link(${1:Mod}, ${2:Fun}, ${3:Args}) $4')],
'proc_lib': [('spawn/1', 'spawn(${1:Fun}) $2'), ('spawn_link/1', 'spawn_link(${1:Fun}) $2'), ('spawn/2', 'spawn(${1:Module}, ${2:Fun}) $3'), ('spawn_link/2', 'spawn_link(${1:Module}, ${2:Fun}) $3'), ('spawn/3', 'spawn(${1:Module}, ${2:Function}, ${3:Args}) $4'), ('spawn_link/3', 'spawn_link(${1:Module}, ${2:Function}, ${3:Args}) $4'), ('spawn/4', 'spawn(${1:M}, ${2:F}, ${3:Function}, ${4:Args}) $5'), ('spawn_link/4', 'spawn_link(${1:M}, ${2:F}, ${3:Function}, ${4:Args}) $5'), ('spawn_opt/2', 'spawn_opt(${1:Fun}, ${2:SpawnOpts}) $3'), ('spawn_opt/3', 'spawn_opt(${1:Node}, ${2:Function}, ${3:SpawnOpts}) $4'), ('spawn_opt/4', 'spawn_opt(${1:Module}, ${2:Function}, ${3:Args}, ${4:SpawnOpts}) $5'), ('spawn_opt/5', 'spawn_opt(${1:M}, ${2:F}, ${3:A}, ${4:Args}, ${5:SpawnOpts}) $6'), ('start/3', 'start(${1:Module}, ${2:Function}, ${3:Args}) $4'), ('start/4', 'start(${1:M}, ${2:F}, ${3:Args}, ${4:Time}) $5'), ('start/5', 'start(${1:M}, ${2:F}, ${3:A}, ${4:Time}, ${5:SpawnOpts}) $6'), ('start_link/3', 'start_link(${1:Module}, ${2:Function}, ${3:Args}) $4'), ('start_link/4', 'start_link(${1:M}, ${2:F}, ${3:Args}, ${4:Time}) $5'), ('start_link/5', 'start_link(${1:M}, ${2:F}, ${3:A}, ${4:Time}, ${5:SpawnOpts}) $6'), ('hibernate/3', 'hibernate(${1:Module}, ${2:Function}, ${3:Args}) $4'), ('init_ack/1', 'init_ack(${1:Ret}) $2'), ('init_ack/2', 'init_ack(${1:Parent}, ${2:Ret}) $3'), ('init_p/3', 'init_p(${1:Parent}, ${2:Ancestors}, ${3:Param3}) $4'), ('init_p/5', 'init_p(${1:Parent}, ${2:Ancestors}, ${3:M}, ${4:F}, ${5:Param5}) $6'), ('format/1', 'format(${1:CrashReport}) $2'), ('initial_call/1', 'initial_call(${1:Process}) $2'), ('translate_initial_call/1', 'translate_initial_call(${1:Process}) $2')],
'proplists': [('property/1', 'property(${1:Property}) $2'), ('property/2', 'property(${1:Key}, ${2:Value}) $3'), ('unfold/1', 'unfold(${1:List}) $2'), ('compact/1', 'compact(${1:List}) $2'), ('lookup/2', 'lookup(${1:Key}, ${2:List}) $3'), ('lookup_all/2', 'lookup_all(${1:Key}, ${2:List}) $3'), ('is_defined/2', 'is_defined(${1:Key}, ${2:List}) $3'), ('get_value/2', 'get_value(${1:Key}, ${2:List}) $3'), ('get_value/3', 'get_value(${1:Key}, ${2:List}, ${3:Default}) $4'), ('get_all_values/2', 'get_all_values(${1:Key}, ${2:List}) $3'), ('append_values/2', 'append_values(${1:Key}, ${2:List}) $3'), ('get_bool/2', 'get_bool(${1:Key}, ${2:List}) $3'), ('get_keys/1', 'get_keys(${1:List}) $2'), ('delete/2', 'delete(${1:Key}, ${2:List}) $3'), ('substitute_aliases/2', 'substitute_aliases(${1:Aliases}, ${2:List}) $3'), ('substitute_negations/2', 'substitute_negations(${1:Negations}, ${2:List}) $3'), ('expand/2', 'expand(${1:Expansions}, ${2:List}) $3'), ('normalize/2', 'normalize(${1:List}, ${2:Stages}) $3'), ('split/2', 'split(${1:List}, ${2:Keys}) $3')],
'qlc': [('parse_transform/2', 'parse_transform(${1:Forms}, ${2:Options}) $3'), ('transform_from_evaluator/2', 'transform_from_evaluator(${1:LC}, ${2:Bs}) $3')],
'qlc_pt': [('parse_transform/2', 'parse_transform(${1:Forms}, ${2:Options}) $3'), ('transform_from_evaluator/2', 'transform_from_evaluator(${1:LC}, ${2:Bs}) $3'), ('transform_expression/2', 'transform_expression(${1:LC}, ${2:Bs}) $3')],
'queue': [('new/0', 'new() $1'), ('is_queue/1', 'is_queue(${1:Param1}) $2'), ('is_empty/1', 'is_empty(${1:Q}) $2'), ('len/1', 'len(${1:Q}) $2'), ('to_list/1', 'to_list(${1:Q}) $2'), ('from_list/1', 'from_list(${1:L}) $2'), ('member/2', 'member(${1:X}, ${2:Q}) $3')],
'random': [('seed/0', 'seed() $1'), ('seed/1', 'seed(${1:Param1}) $2'), ('seed/3', 'seed(${1:A1}, ${2:A2}, ${3:A3}) $4'), ('uniform/0', 'uniform() $1'), ('uniform/1', 'uniform(${1:N}) $2'), ('uniform_s/1', 'uniform_s(${1:State}) $2'), ('uniform_s/2', 'uniform_s(${1:N}, ${2:State}) $3'), ('seed0/0', 'seed0() $1')],
're': [('grun/3', 'grun(${1:Subject}, ${2:RE}, ${3:Param3}) $4'), ('urun/3', 'urun(${1:Subject}, ${2:RE}, ${3:Options}) $4'), ('ucompile/2', 'ucompile(${1:RE}, ${2:Options}) $3'), ('replace/3', 'replace(${1:Subject}, ${2:RE}, ${3:Replacement}) $4'), ('replace/4', 'replace(${1:Subject}, ${2:RE}, ${3:Replacement}, ${4:Options}) $5'), ('split/2', 'split(${1:Subject}, ${2:RE}) $3'), ('split/3', 'split(${1:Subject}, ${2:RE}, ${3:Options}) $4')],
'sets': [('new/0', 'new() $1'), ('is_set/1', 'is_set(${1:Set}) $2'), ('size/1', 'size(${1:Set}) $2'), ('to_list/1', 'to_list(${1:Set}) $2'), ('from_list/1', 'from_list(${1:List}) $2')],
'shell': [('start/0', 'start() $1'), ('start/1', 'start(${1:NoCtrlG}) $2'), ('start/2', 'start(${1:NoCtrlG}, ${2:StartSync}) $3'), ('server/1', 'server(${1:StartSync}) $2'), ('server/2', 'server(${1:NoCtrlG}, ${2:StartSync}) $3'), ('history/1', 'history(${1:N}) $2'), ('results/1', 'results(${1:N}) $2')],
'shell_default': [('help/0', 'help() $1'), ('lc/1', 'lc(${1:X}) $2'), ('c/1', 'c(${1:File}) $2'), ('c/2', 'c(${1:File}, ${2:Opt}) $3'), ('nc/1', 'nc(${1:X}) $2'), ('nl/1', 'nl(${1:Mod}) $2'), ('l/1', 'l(${1:Mod}) $2'), ('i/0', 'i() $1'), ('pid/3', 'pid(${1:X}, ${2:Y}, ${3:Z}) $4'), ('i/3', 'i(${1:X}, ${2:Y}, ${3:Z}) $4'), ('m/0', 'm() $1'), ('m/1', 'm(${1:Mod}) $2'), ('memory/0', 'memory() $1'), ('memory/1', 'memory(${1:Type}) $2'), ('erlangrc/1', 'erlangrc(${1:X}) $2'), ('bi/1', 'bi(${1:I}) $2'), ('regs/0', 'regs() $1'), ('flush/0', 'flush() $1'), ('pwd/0', 'pwd() $1'), ('ls/0', 'ls() $1'), ('ls/1', 'ls(${1:S}) $2'), ('cd/1', 'cd(${1:D}) $2'), ('y/1', 'y(${1:Type}) $2'), ('y/2', 'y(${1:File}, ${2:Opts}) $3'), ('xm/1', 'xm(${1:Mod}) $2'), ('bt/1', 'bt(${1:Pid}) $2'), ('q/0', 'q() $1'), ('ni/0', 'ni() $1'), ('nregs/0', 'nregs() $1')],
'slave': [('pseudo/1', 'pseudo(${1:Param1}) $2'), ('pseudo/2', 'pseudo(${1:Master}, ${2:ServerList}) $3'), ('start/1', 'start(${1:Host}) $2'), ('start/2', 'start(${1:Host}, ${2:Name}) $3'), ('start/3', 'start(${1:Host}, ${2:Name}, ${3:Args}) $4'), ('start/5', 'start(${1:Host0}, ${2:Name}, ${3:Args}, ${4:LinkTo}, ${5:Prog}) $6'), ('start_link/1', 'start_link(${1:Host}) $2'), ('start_link/2', 'start_link(${1:Host}, ${2:Name}) $3'), ('start_link/3', 'start_link(${1:Host}, ${2:Name}, ${3:Args}) $4'), ('stop/1', 'stop(${1:Node}) $2'), ('relay/1', 'relay(${1:Pid}) $2')],
'sofs': [('from_term/1', 'from_term(${1:Term}) $2'), ('from_term/2', 'from_term(${1:Term}, ${2:Type}) $3'), ('from_external/2', 'from_external(${1:ExternalSet}, ${2:Type}) $3'), ('empty_set/0', 'empty_set() $1'), ('is_type/1', 'is_type(${1:Term}) $2'), ('set/1', 'set(${1:Terms}) $2'), ('set/2', 'set(${1:Terms}, ${2:Type}) $3'), ('from_sets/1', 'from_sets(${1:ListOfSets}) $2'), ('relation/1', 'relation(${1:Tuples}) $2'), ('relation/2', 'relation(${1:Tuples}, ${2:Type}) $3'), ('a_function/1', 'a_function(${1:Tuples}) $2'), ('a_function/2', 'a_function(${1:Tuples}, ${2:Type}) $3'), ('family/1', 'family(${1:Tuples}) $2'), ('family/2', 'family(${1:Tuples}, ${2:Type}) $3'), ('to_external/1', 'to_external(${1:AnySet}) $2'), ('type/1', 'type(${1:Term}) $2'), ('to_sets/1', 'to_sets(${1:ASet}) $2'), ('no_elements/1', 'no_elements(${1:ASet}) $2'), ('specification/2', 'specification(${1:Fun}, ${2:Set1}) $3'), ('union/2', 'union(${1:Set1}, ${2:Set2}) $3'), ('intersection/2', 'intersection(${1:Set1}, ${2:Set2}) $3'), ('difference/2', 'difference(${1:Set1}, ${2:Set2}) $3'), ('symdiff/2', 'symdiff(${1:Set1}, ${2:Set2}) $3'), ('symmetric_partition/2', 'symmetric_partition(${1:Set1}, ${2:Set2}) $3'), ('product/1', 'product(${1:TupleOfSets}) $2'), ('product/2', 'product(${1:Set1}, ${2:Set2}) $3'), ('constant_function/2', 'constant_function(${1:Set}, ${2:AnySet}) $3'), ('is_equal/2', 'is_equal(${1:AnySet1}, ${2:AnySet2}) $3'), ('is_subset/2', 'is_subset(${1:Set1}, ${2:Set2}) $3'), ('is_sofs_set/1', 'is_sofs_set(${1:Term}) $2'), ('is_set/1', 'is_set(${1:AnySet}) $2'), ('is_empty_set/1', 'is_empty_set(${1:AnySet}) $2'), ('is_disjoint/2', 'is_disjoint(${1:Set1}, ${2:Set2}) $3')],
'string': [('len/1', 'len(${1:String}) $2'), ('equal/2', 'equal(${1:String1}, ${2:String2}) $3'), ('concat/2', 'concat(${1:String1}, ${2:String2}) $3'), ('chr/2', 'chr(${1:String}, ${2:Character}) $3'), ('rchr/2', 'rchr(${1:String}, ${2:Character}) $3'), ('str/2', 'str(${1:String}, ${2:SubString}) $3'), ('rstr/2', 'rstr(${1:String}, ${2:SubString}) $3'), ('span/2', 'span(${1:String}, ${2:Chars}) $3'), ('cspan/2', 'cspan(${1:String}, ${2:Chars}) $3'), ('substr/2', 'substr(${1:String}, ${2:Start}) $3'), ('substr/3', 'substr(${1:String}, ${2:Start}, ${3:Length}) $4'), ('tokens/2', 'tokens(${1:String}, ${2:SeparatorList}) $3'), ('chars/2', 'chars(${1:Character}, ${2:Number}) $3'), ('chars/3', 'chars(${1:Character}, ${2:Number}, ${3:Tail}) $4')],
'supervisor': [('start_link/2', 'start_link(${1:Module}, ${2:Args}) $3'), ('start_link/3', 'start_link(${1:SupName}, ${2:Module}, ${3:Args}) $4'), ('start_child/2', 'start_child(${1:SupRef}, ${2:ChildSpec}) $3'), ('restart_child/2', 'restart_child(${1:SupRef}, ${2:Id}) $3'), ('delete_child/2', 'delete_child(${1:SupRef}, ${2:Id}) $3'), ('terminate_child/2', 'terminate_child(${1:SupRef}, ${2:Id}) $3'), ('which_children/1', 'which_children(${1:SupRef}) $2'), ('count_children/1', 'count_children(${1:SupRef}) $2'), ('check_childspecs/1', 'check_childspecs(${1:ChildSpecs}) $2')],
'supervisor_bridge': [('start_link/2', 'start_link(${1:Module}, ${2:Args}) $3'), ('start_link/3', 'start_link(${1:SupBridgeName}, ${2:Module}, ${3:Args}) $4')],
'sys': [('suspend/1', 'suspend(${1:Name}) $2'), ('suspend/2', 'suspend(${1:Name}, ${2:Timeout}) $3'), ('resume/1', 'resume(${1:Name}) $2'), ('resume/2', 'resume(${1:Name}, ${2:Timeout}) $3'), ('get_status/1', 'get_status(${1:Name}) $2'), ('get_status/2', 'get_status(${1:Name}, ${2:Timeout}) $3'), ('change_code/4', 'change_code(${1:Name}, ${2:Module}, ${3:OldVsn}, ${4:Extra}) $5'), ('change_code/5', 'change_code(${1:Name}, ${2:Module}, ${3:OldVsn}, ${4:Extra}, ${5:Timeout}) $6'), ('log/2', 'log(${1:Name}, ${2:Flag}) $3'), ('log/3', 'log(${1:Name}, ${2:Flag}, ${3:Timeout}) $4'), ('trace/2', 'trace(${1:Name}, ${2:Flag}) $3'), ('trace/3', 'trace(${1:Name}, ${2:Flag}, ${3:Timeout}) $4'), ('statistics/2', 'statistics(${1:Name}, ${2:Flag}) $3'), ('statistics/3', 'statistics(${1:Name}, ${2:Flag}, ${3:Timeout}) $4'), ('log_to_file/2', 'log_to_file(${1:Name}, ${2:Flag}) $3'), ('log_to_file/3', 'log_to_file(${1:Name}, ${2:Flag}, ${3:Timeout}) $4'), ('no_debug/1', 'no_debug(${1:Name}) $2'), ('no_debug/2', 'no_debug(${1:Name}, ${2:Timeout}) $3'), ('install/2', 'install(${1:Name}, ${2:FuncSpec}) $3'), ('install/3', 'install(${1:Name}, ${2:FuncSpec}, ${3:Timeout}) $4'), ('remove/2', 'remove(${1:Name}, ${2:Func}) $3'), ('remove/3', 'remove(${1:Name}, ${2:Func}, ${3:Timeout}) $4')],
'timer': [('apply_after/4', 'apply_after(${1:Time}, ${2:Module}, ${3:Function}, ${4:Arguments}) $5'), ('send_after/3', 'send_after(${1:Time}, ${2:Pid}, ${3:Message}) $4'), ('send_after/2', 'send_after(${1:Time}, ${2:Message}) $3'), ('exit_after/3', 'exit_after(${1:Time}, ${2:Pid}, ${3:Reason1}) $4'), ('exit_after/2', 'exit_after(${1:Time}, ${2:Reason1}) $3'), ('kill_after/2', 'kill_after(${1:Time}, ${2:Pid}) $3'), ('kill_after/1', 'kill_after(${1:Time}) $2'), ('apply_interval/4', 'apply_interval(${1:Time}, ${2:Module}, ${3:Function}, ${4:Arguments}) $5'), ('send_interval/3', 'send_interval(${1:Time}, ${2:Pid}, ${3:Message}) $4'), ('send_interval/2', 'send_interval(${1:Time}, ${2:Message}) $3'), ('cancel/1', 'cancel(${1:TRef}) $2'), ('sleep/1', 'sleep(${1:Time}) $2'), ('tc/1', 'tc(${1:Fun}) $2'), ('tc/2', 'tc(${1:Fun}, ${2:Arguments}) $3'), ('tc/3', 'tc(${1:Module}, ${2:Function}, ${3:Arguments}) $4'), ('now_diff/2', 'now_diff(${1:T2}, ${2:T1}) $3'), ('seconds/1', 'seconds(${1:Seconds}) $2'), ('minutes/1', 'minutes(${1:Minutes}) $2'), ('hours/1', 'hours(${1:Hours}) $2'), ('hms/3', 'hms(${1:Hours}, ${2:Minutes}, ${3:Seconds}) $4')],
'unicode': [('characters_to_list/1', 'characters_to_list(${1:Data}) $2'), ('characters_to_list_int/2', 'characters_to_list_int(${1:ML}, ${2:Encoding}) $3'), ('characters_to_binary/1', 'characters_to_binary(${1:Data}) $2'), ('characters_to_binary_int/2', 'characters_to_binary_int(${1:ML}, ${2:InEncoding}) $3'), ('characters_to_binary/3', 'characters_to_binary(${1:Data}, ${2:InEncoding}, ${3:OutEncoding}) $4'), ('bom_to_encoding/1', 'bom_to_encoding(${1:Bin}) $2'), ('encoding_to_bom/1', 'encoding_to_bom(${1:InEncoding}) $2')],
'win32reg': [('open/1', 'open(${1:OpenModeList}) $2'), ('close/1', 'close(${1:RegHandle}) $2'), ('current_key/1', 'current_key(${1:RegHandle}) $2'), ('change_key/2', 'change_key(${1:RegHandle}, ${2:Key}) $3'), ('change_key_create/2', 'change_key_create(${1:RegHandle}, ${2:Key}) $3'), ('sub_keys/1', 'sub_keys(${1:RegHandle}) $2'), ('delete_key/1', 'delete_key(${1:RegHandle}) $2'), ('value/2', 'value(${1:RegHandle}, ${2:Name}) $3'), ('values/1', 'values(${1:RegHandle}) $2'), ('set_value/3', 'set_value(${1:RegHandle}, ${2:Name}, ${3:Value}) $4'), ('delete_value/2', 'delete_value(${1:RegHandle}, ${2:Name}) $3'), ('expand/1', 'expand(${1:String}) $2'), ('format_error/1', 'format_error(${1:ErrorId}) $2')],
'zip': [('unzip/1', 'unzip(${1:Archive}) $2'), ('unzip/2', 'unzip(${1:Archive}, ${2:Options}) $3'), ('extract/1', 'extract(${1:Archive}) $2'), ('extract/2', 'extract(${1:Archive}, ${2:Options}) $3'), ('zip/2', 'zip(${1:Archive}, ${2:Options}) $3'), ('zip/3', 'zip(${1:Name}, ${2:FileList}, ${3:Options}) $4'), ('create/2', 'create(${1:Name}, ${2:FileList}) $3'), ('create/3', 'create(${1:Name}, ${2:FileList}, ${3:Options}) $4'), ('foldl/3', 'foldl(${1:Fun}, ${2:Acc0}, ${3:Archive}) $4'), ('list_dir/1', 'list_dir(${1:Archive}) $2'), ('list_dir/2', 'list_dir(${1:Archive}, ${2:Options}) $3'), ('table/1', 'table(${1:Archive}) $2'), ('table/2', 'table(${1:Archive}, ${2:Options}) $3'), ('t/1', 't(${1:OpenZip}) $2'), ('tt/1', 'tt(${1:Archive}) $2')],
'epp_dodger': [('parse_file/1', 'parse_file(${1:File}) $2'), ('quick_parse_file/1', 'quick_parse_file(${1:File}) $2'), ('parse_file/2', 'parse_file(${1:File}, ${2:Options}) $3'), ('quick_parse_file/2', 'quick_parse_file(${1:File}, ${2:Options}) $3'), ('parse/1', 'parse(${1:IODevice}) $2'), ('quick_parse/1', 'quick_parse(${1:IODevice}) $2'), ('parse/2', 'parse(${1:IODevice}, ${2:StartLine}) $3'), ('quick_parse/2', 'quick_parse(${1:IODevice}, ${2:StartLine}) $3'), ('parse/3', 'parse(${1:IODevice}, ${2:StartLine}, ${3:Options}) $4'), ('quick_parse/3', 'quick_parse(${1:Dev}, ${2:L0}, ${3:Options}) $4'), ('parse_form/2', 'parse_form(${1:IODevice}, ${2:StartLine}) $3'), ('parse_form/3', 'parse_form(${1:IODevice}, ${2:StartLine}, ${3:Options}) $4'), ('quick_parse_form/2', 'quick_parse_form(${1:IODevice}, ${2:StartLine}) $3'), ('quick_parse_form/3', 'quick_parse_form(${1:IODevice}, ${2:StartLine}, ${3:Options}) $4'), ('format_error/1', 'format_error(${1:Param1}) $2'), ('tokens_to_string/1', 'tokens_to_string(${1:Param1}) $2')],
'erl_comment_scan': [('file/1', 'file(${1:Name}) $2'), ('join_lines/1', 'join_lines(${1:Param1}) $2'), ('scan_lines/1', 'scan_lines(${1:Text}) $2'), ('string/1', 'string(${1:Text}) $2')],
'erl_prettypr': [('format/1', 'format(${1:Node}) $2'), ('format/2', 'format(${1:Node}, ${2:Options}) $3'), ('best/1', 'best(${1:Node}) $2'), ('best/2', 'best(${1:Node}, ${2:Options}) $3'), ('layout/1', 'layout(${1:Node}) $2'), ('layout/2', 'layout(${1:Node}, ${2:Options}) $3'), ('get_ctxt_precedence/1', 'get_ctxt_precedence(${1:Ctxt}) $2'), ('set_ctxt_precedence/2', 'set_ctxt_precedence(${1:Ctxt}, ${2:Prec}) $3'), ('get_ctxt_paperwidth/1', 'get_ctxt_paperwidth(${1:Ctxt}) $2'), ('set_ctxt_paperwidth/2', 'set_ctxt_paperwidth(${1:Ctxt}, ${2:W}) $3'), ('get_ctxt_linewidth/1', 'get_ctxt_linewidth(${1:Ctxt}) $2'), ('set_ctxt_linewidth/2', 'set_ctxt_linewidth(${1:Ctxt}, ${2:W}) $3'), ('get_ctxt_hook/1', 'get_ctxt_hook(${1:Ctxt}) $2'), ('set_ctxt_hook/2', 'set_ctxt_hook(${1:Ctxt}, ${2:Hook}) $3'), ('get_ctxt_user/1', 'get_ctxt_user(${1:Ctxt}) $2'), ('set_ctxt_user/2', 'set_ctxt_user(${1:Ctxt}, ${2:X}) $3')],
'erl_recomment': [('recomment_forms/2', 'recomment_forms(${1:Forms}, ${2:Cs}) $3'), ('quick_recomment_forms/2', 'quick_recomment_forms(${1:Forms}, ${2:Cs}) $3'), ('recomment_tree/2', 'recomment_tree(${1:Tree}, ${2:Cs}) $3')],
'erl_syntax': [('type/1', 'type(${1:Node}) $2'), ('is_leaf/1', 'is_leaf(${1:Node}) $2'), ('is_form/1', 'is_form(${1:Node}) $2'), ('is_literal/1', 'is_literal(${1:T}) $2'), ('abstract/1', 'abstract(${1:T}) $2'), ('concrete/1', 'concrete(${1:Node}) $2'), ('revert/1', 'revert(${1:Node}) $2'), ('revert_forms/1', 'revert_forms(${1:Forms}) $2'), ('subtrees/1', 'subtrees(${1:T}) $2'), ('make_tree/2', 'make_tree(${1:Param1}, ${2:Param2}) $3'), ('update_tree/2', 'update_tree(${1:Node}, ${2:Groups}) $3'), ('meta/1', 'meta(${1:T}) $2'), ('get_pos/1', 'get_pos(${1:Node}) $2'), ('set_pos/2', 'set_pos(${1:Node}, ${2:Pos}) $3'), ('copy_pos/2', 'copy_pos(${1:Source}, ${2:Target}) $3'), ('get_precomments/1', 'get_precomments(${1:Param1}) $2'), ('set_precomments/2', 'set_precomments(${1:Node}, ${2:Cs}) $3'), ('add_precomments/2', 'add_precomments(${1:Cs}, ${2:Node}) $3'), ('get_postcomments/1', 'get_postcomments(${1:Param1}) $2'), ('set_postcomments/2', 'set_postcomments(${1:Node}, ${2:Cs}) $3'), ('add_postcomments/2', 'add_postcomments(${1:Cs}, ${2:Node}) $3'), ('has_comments/1', 'has_comments(${1:Param1}) $2'), ('remove_comments/1', 'remove_comments(${1:Node}) $2'), ('copy_comments/2', 'copy_comments(${1:Source}, ${2:Target}) $3'), ('join_comments/2', 'join_comments(${1:Source}, ${2:Target}) $3'), ('get_ann/1', 'get_ann(${1:Param1}) $2'), ('set_ann/2', 'set_ann(${1:Node}, ${2:As}) $3'), ('add_ann/2', 'add_ann(${1:A}, ${2:Node}) $3'), ('copy_ann/2', 'copy_ann(${1:Source}, ${2:Target}) $3'), ('get_attrs/1', 'get_attrs(${1:Node}) $2'), ('set_attrs/2', 'set_attrs(${1:Node}, ${2:Attr}) $3'), ('copy_attrs/2', 'copy_attrs(${1:S}, ${2:T}) $3'), ('flatten_form_list/1', 'flatten_form_list(${1:Node}) $2'), ('cons/2', 'cons(${1:Head}, ${2:Tail}) $3'), ('list_head/1', 'list_head(${1:Node}) $2'), ('list_tail/1', 'list_tail(${1:Node}) $2'), ('is_list_skeleton/1', 'is_list_skeleton(${1:Node}) $2'), ('is_proper_list/1', 'is_proper_list(${1:Node}) $2'), ('list_elements/1', 'list_elements(${1:Node}) $2'), ('list_length/1', 'list_length(${1:Node}) $2'), ('normalize_list/1', 'normalize_list(${1:Node}) $2'), ('compact_list/1', 'compact_list(${1:Node}) $2'), ('application/2', 'application(${1:Module}, ${2:Arguments}) $3'), ('application/3', 'application(${1:Module}, ${2:Name}, ${3:Arguments}) $4'), ('application_arguments/1', 'application_arguments(${1:Node}) $2'), ('application_operator/1', 'application_operator(${1:Node}) $2'), ('arity_qualifier/2', 'arity_qualifier(${1:Body}, ${2:Arity}) $3'), ('arity_qualifier_argument/1', 'arity_qualifier_argument(${1:Node}) $2'), ('arity_qualifier_body/1', 'arity_qualifier_body(${1:Node}) $2'), ('atom/1', 'atom(${1:Name}) $2'), ('is_atom/2', 'is_atom(${1:Node}, ${2:Value}) $3'), ('atom_value/1', 'atom_value(${1:Node}) $2'), ('atom_literal/1', 'atom_literal(${1:Node}) $2'), ('atom_name/1', 'atom_name(${1:Node}) $2'), ('attribute/1', 'attribute(${1:Name}) $2'), ('attribute/2', 'attribute(${1:Name}, ${2:Arguments}) $3'), ('attribute_arguments/1', 'attribute_arguments(${1:Node}) $2'), ('attribute_name/1', 'attribute_name(${1:Node}) $2'), ('binary/1', 'binary(${1:List}) $2'), ('binary_comp/2', 'binary_comp(${1:Template}, ${2:Body}) $3'), ('binary_comp_template/1', 'binary_comp_template(${1:Node}) $2'), ('binary_comp_body/1', 'binary_comp_body(${1:Node}) $2'), ('binary_field/1', 'binary_field(${1:Body}) $2'), ('binary_field/2', 'binary_field(${1:Body}, ${2:Types}) $3'), ('binary_field/3', 'binary_field(${1:Body}, ${2:Size}, ${3:Types}) $4'), ('binary_field_body/1', 'binary_field_body(${1:Node}) $2'), ('binary_field_types/1', 'binary_field_types(${1:Node}) $2'), ('binary_field_size/1', 'binary_field_size(${1:Node}) $2'), ('binary_fields/1', 'binary_fields(${1:Node}) $2'), ('binary_generator/2', 'binary_generator(${1:Pattern}, ${2:Body}) $3'), ('binary_generator_body/1', 'binary_generator_body(${1:Node}) $2'), ('binary_generator_pattern/1', 'binary_generator_pattern(${1:Node}) $2'), ('block_expr/1', 'block_expr(${1:Body}) $2'), ('block_expr_body/1', 'block_expr_body(${1:Node}) $2'), ('case_expr/2', 'case_expr(${1:Argument}, ${2:Clauses}) $3'), ('case_expr_argument/1', 'case_expr_argument(${1:Node}) $2'), ('case_expr_clauses/1', 'case_expr_clauses(${1:Node}) $2'), ('catch_expr/1', 'catch_expr(${1:Expr}) $2'), ('catch_expr_body/1', 'catch_expr_body(${1:Node}) $2'), ('char/1', 'char(${1:Char}) $2'), ('is_char/2', 'is_char(${1:Node}, ${2:Value}) $3'), ('char_value/1', 'char_value(${1:Node}) $2'), ('char_literal/1', 'char_literal(${1:Node}) $2'), ('clause/2', 'clause(${1:Guard}, ${2:Body}) $3'), ('clause/3', 'clause(${1:Patterns}, ${2:Guard}, ${3:Body}) $4'), ('clause_body/1', 'clause_body(${1:Node}) $2'), ('clause_guard/1', 'clause_guard(${1:Node}) $2'), ('clause_patterns/1', 'clause_patterns(${1:Node}) $2'), ('comment/1', 'comment(${1:Strings}) $2'), ('comment/2', 'comment(${1:Padding}, ${2:Strings}) $3'), ('comment_padding/1', 'comment_padding(${1:Node}) $2'), ('comment_text/1', 'comment_text(${1:Node}) $2'), ('cond_expr/1', 'cond_expr(${1:Clauses}) $2'), ('cond_expr_clauses/1', 'cond_expr_clauses(${1:Node}) $2'), ('conjunction/1', 'conjunction(${1:Tests}) $2'), ('conjunction_body/1', 'conjunction_body(${1:Node}) $2'), ('disjunction/1', 'disjunction(${1:D}) $2'), ('disjunction_body/1', 'disjunction_body(${1:Node}) $2'), ('eof_marker/0', 'eof_marker() $1'), ('error_marker/1', 'error_marker(${1:Error}) $2'), ('error_marker_info/1', 'error_marker_info(${1:Node}) $2'), ('float/1', 'float(${1:Value}) $2'), ('float_value/1', 'float_value(${1:Node}) $2'), ('float_literal/1', 'float_literal(${1:Node}) $2'), ('form_list/1', 'form_list(${1:Forms}) $2'), ('form_list_elements/1', 'form_list_elements(${1:Node}) $2'), ('fun_expr/1', 'fun_expr(${1:Clauses}) $2'), ('fun_expr_arity/1', 'fun_expr_arity(${1:Node}) $2'), ('fun_expr_clauses/1', 'fun_expr_clauses(${1:Node}) $2'), ('function/2', 'function(${1:Name}, ${2:Clauses}) $3'), ('function_arity/1', 'function_arity(${1:Node}) $2'), ('function_clauses/1', 'function_clauses(${1:Node}) $2'), ('function_name/1', 'function_name(${1:Node}) $2'), ('generator/2', 'generator(${1:Pattern}, ${2:Body}) $3'), ('generator_body/1', 'generator_body(${1:Node}) $2'), ('generator_pattern/1', 'generator_pattern(${1:Node}) $2'), ('if_expr/1', 'if_expr(${1:Clauses}) $2'), ('if_expr_clauses/1', 'if_expr_clauses(${1:Node}) $2'), ('implicit_fun/1', 'implicit_fun(${1:Name}) $2'), ('implicit_fun/2', 'implicit_fun(${1:Name}, ${2:Arity}) $3'), ('implicit_fun/3', 'implicit_fun(${1:Module}, ${2:Name}, ${3:Arity}) $4'), ('implicit_fun_name/1', 'implicit_fun_name(${1:Node}) $2'), ('infix_expr/3', 'infix_expr(${1:Left}, ${2:Operator}, ${3:Right}) $4'), ('infix_expr_left/1', 'infix_expr_left(${1:Node}) $2'), ('infix_expr_operator/1', 'infix_expr_operator(${1:Node}) $2'), ('infix_expr_right/1', 'infix_expr_right(${1:Node}) $2'), ('integer/1', 'integer(${1:Value}) $2'), ('is_integer/2', 'is_integer(${1:Node}, ${2:Value}) $3'), ('integer_value/1', 'integer_value(${1:Node}) $2'), ('integer_literal/1', 'integer_literal(${1:Node}) $2'), ('list/1', 'list(${1:Forms}) $2'), ('list/2', 'list(${1:List}, ${2:Tail}) $3'), ('list_comp/2', 'list_comp(${1:Template}, ${2:Body}) $3'), ('list_comp_body/1', 'list_comp_body(${1:Node}) $2'), ('list_comp_template/1', 'list_comp_template(${1:Node}) $2'), ('list_prefix/1', 'list_prefix(${1:Node}) $2'), ('list_suffix/1', 'list_suffix(${1:Node}) $2'), ('macro/1', 'macro(${1:Name}) $2'), ('macro/2', 'macro(${1:Name}, ${2:Arguments}) $3'), ('macro_arguments/1', 'macro_arguments(${1:Node}) $2'), ('macro_name/1', 'macro_name(${1:Node}) $2'), ('match_expr/2', 'match_expr(${1:Pattern}, ${2:Body}) $3'), ('match_expr_body/1', 'match_expr_body(${1:Node}) $2'), ('match_expr_pattern/1', 'match_expr_pattern(${1:Node}) $2'), ('module_qualifier/2', 'module_qualifier(${1:Module}, ${2:Body}) $3'), ('module_qualifier_argument/1', 'module_qualifier_argument(${1:Node}) $2'), ('module_qualifier_body/1', 'module_qualifier_body(${1:Node}) $2'), ('nil/0', 'nil() $1'), ('operator/1', 'operator(${1:Name}) $2'), ('operator_literal/1', 'operator_literal(${1:Node}) $2'), ('operator_name/1', 'operator_name(${1:Node}) $2'), ('parentheses/1', 'parentheses(${1:Expr}) $2'), ('parentheses_body/1', 'parentheses_body(${1:Node}) $2'), ('prefix_expr/2', 'prefix_expr(${1:Operator}, ${2:Argument}) $3'), ('prefix_expr_argument/1', 'prefix_expr_argument(${1:Node}) $2'), ('prefix_expr_operator/1', 'prefix_expr_operator(${1:Node}) $2'), ('qualified_name/1', 'qualified_name(${1:Segments}) $2'), ('qualified_name_segments/1', 'qualified_name_segments(${1:Node}) $2'), ('query_expr/1', 'query_expr(${1:Body}) $2'), ('query_expr_body/1', 'query_expr_body(${1:Node}) $2'), ('receive_expr/1', 'receive_expr(${1:Clauses}) $2'), ('receive_expr/3', 'receive_expr(${1:Clauses}, ${2:Timeout}, ${3:Action}) $4'), ('receive_expr_action/1', 'receive_expr_action(${1:Node}) $2'), ('receive_expr_clauses/1', 'receive_expr_clauses(${1:Node}) $2'), ('receive_expr_timeout/1', 'receive_expr_timeout(${1:Node}) $2'), ('record_access/2', 'record_access(${1:Argument}, ${2:Field}) $3'), ('record_access/3', 'record_access(${1:Argument}, ${2:Type}, ${3:Field}) $4'), ('record_access_argument/1', 'record_access_argument(${1:Node}) $2'), ('record_access_field/1', 'record_access_field(${1:Node}) $2'), ('record_access_type/1', 'record_access_type(${1:Node}) $2'), ('record_expr/2', 'record_expr(${1:Type}, ${2:Fields}) $3'), ('record_expr/3', 'record_expr(${1:Argument}, ${2:Type}, ${3:Fields}) $4'), ('record_expr_argument/1', 'record_expr_argument(${1:Node}) $2'), ('record_expr_fields/1', 'record_expr_fields(${1:Node}) $2'), ('record_expr_type/1', 'record_expr_type(${1:Node}) $2'), ('record_field/1', 'record_field(${1:Name}) $2'), ('record_field/2', 'record_field(${1:Name}, ${2:Value}) $3'), ('record_field_name/1', 'record_field_name(${1:Node}) $2'), ('record_field_value/1', 'record_field_value(${1:Node}) $2'), ('record_index_expr/2', 'record_index_expr(${1:Type}, ${2:Field}) $3'), ('record_index_expr_field/1', 'record_index_expr_field(${1:Node}) $2'), ('record_index_expr_type/1', 'record_index_expr_type(${1:Node}) $2'), ('rule/2', 'rule(${1:Name}, ${2:Clauses}) $3'), ('rule_arity/1', 'rule_arity(${1:Node}) $2'), ('rule_clauses/1', 'rule_clauses(${1:Node}) $2'), ('rule_name/1', 'rule_name(${1:Node}) $2'), ('size_qualifier/2', 'size_qualifier(${1:Body}, ${2:Size}) $3'), ('size_qualifier_argument/1', 'size_qualifier_argument(${1:Node}) $2'), ('size_qualifier_body/1', 'size_qualifier_body(${1:Node}) $2'), ('string/1', 'string(${1:Node}) $2'), ('is_string/2', 'is_string(${1:Node}, ${2:Value}) $3'), ('string_value/1', 'string_value(${1:Node}) $2'), ('string_literal/1', 'string_literal(${1:Node}) $2'), ('text/1', 'text(${1:Node}) $2'), ('text_string/1', 'text_string(${1:Node}) $2'), ('try_expr/2', 'try_expr(${1:Body}, ${2:Handlers}) $3'), ('try_expr/3', 'try_expr(${1:Body}, ${2:Clauses}, ${3:Handlers}) $4'), ('try_expr/4', 'try_expr(${1:Body}, ${2:Clauses}, ${3:Handlers}, ${4:After}) $5'), ('try_after_expr/2', 'try_after_expr(${1:Body}, ${2:After}) $3'), ('try_expr_body/1', 'try_expr_body(${1:Node}) $2'), ('try_expr_clauses/1', 'try_expr_clauses(${1:Node}) $2'), ('try_expr_handlers/1', 'try_expr_handlers(${1:Node}) $2'), ('try_expr_after/1', 'try_expr_after(${1:Node}) $2'), ('class_qualifier/2', 'class_qualifier(${1:Class}, ${2:Body}) $3'), ('class_qualifier_argument/1', 'class_qualifier_argument(${1:Node}) $2'), ('class_qualifier_body/1', 'class_qualifier_body(${1:Node}) $2'), ('tuple/1', 'tuple(${1:List}) $2'), ('tuple_elements/1', 'tuple_elements(${1:Node}) $2'), ('tuple_size/1', 'tuple_size(${1:Node}) $2'), ('underscore/0', 'underscore() $1'), ('variable/1', 'variable(${1:Name}) $2'), ('variable_name/1', 'variable_name(${1:Node}) $2'), ('variable_literal/1', 'variable_literal(${1:Node}) $2'), ('warning_marker/1', 'warning_marker(${1:Warning}) $2'), ('warning_marker_info/1', 'warning_marker_info(${1:Node}) $2'), ('tree/1', 'tree(${1:Type}) $2'), ('tree/2', 'tree(${1:Node}, ${2:Groups}) $3'), ('data/1', 'data(${1:T}) $2'), ('is_tree/1', 'is_tree(${1:Param1}) $2')],
'erl_syntax_lib': [('analyze_application/1', 'analyze_application(${1:Node}) $2'), ('analyze_attribute/1', 'analyze_attribute(${1:Node}) $2'), ('analyze_export_attribute/1', 'analyze_export_attribute(${1:Node}) $2'), ('analyze_file_attribute/1', 'analyze_file_attribute(${1:Node}) $2'), ('analyze_form/1', 'analyze_form(${1:Node}) $2'), ('analyze_forms/1', 'analyze_forms(${1:Forms}) $2'), ('analyze_function/1', 'analyze_function(${1:Node}) $2'), ('analyze_function_name/1', 'analyze_function_name(${1:Node}) $2'), ('analyze_implicit_fun/1', 'analyze_implicit_fun(${1:Node}) $2'), ('analyze_import_attribute/1', 'analyze_import_attribute(${1:Node}) $2'), ('analyze_module_attribute/1', 'analyze_module_attribute(${1:Node}) $2'), ('analyze_record_attribute/1', 'analyze_record_attribute(${1:Node}) $2'), ('analyze_record_expr/1', 'analyze_record_expr(${1:Node}) $2'), ('analyze_record_field/1', 'analyze_record_field(${1:Node}) $2'), ('analyze_rule/1', 'analyze_rule(${1:Node}) $2'), ('analyze_wild_attribute/1', 'analyze_wild_attribute(${1:Node}) $2'), ('annotate_bindings/1', 'annotate_bindings(${1:Tree}) $2'), ('annotate_bindings/2', 'annotate_bindings(${1:Tree}, ${2:Env}) $3'), ('fold/3', 'fold(${1:Function}, ${2:S}, ${3:Tree}) $4'), ('fold_subtrees/3', 'fold_subtrees(${1:Function}, ${2:S}, ${3:Tree}) $4'), ('foldl_listlist/3', 'foldl_listlist(${1:Function}, ${2:S}, ${3:Param3}) $4'), ('function_name_expansions/1', 'function_name_expansions(${1:Fs}) $2'), ('is_fail_expr/1', 'is_fail_expr(${1:E}) $2'), ('limit/2', 'limit(${1:Tree}, ${2:Depth}) $3'), ('limit/3', 'limit(${1:Tree}, ${2:Depth}, ${3:Node}) $4'), ('map/2', 'map(${1:Function}, ${2:Tree}) $3'), ('map_subtrees/2', 'map_subtrees(${1:Function}, ${2:Tree}) $3'), ('mapfold/3', 'mapfold(${1:Function}, ${2:S}, ${3:Tree}) $4'), ('mapfold_subtrees/3', 'mapfold_subtrees(${1:Function}, ${2:S}, ${3:Tree}) $4'), ('mapfoldl_listlist/3', 'mapfoldl_listlist(${1:Function}, ${2:State}, ${3:Param3}) $4'), ('new_variable_name/1', 'new_variable_name(${1:S}) $2'), ('new_variable_name/2', 'new_variable_name(${1:Function}, ${2:S}) $3'), ('new_variable_names/2', 'new_variable_names(${1:N}, ${2:S}) $3'), ('new_variable_names/3', 'new_variable_names(${1:N}, ${2:Function}, ${3:Param3}) $4'), ('strip_comments/1', 'strip_comments(${1:Tree}) $2'), ('to_comment/1', 'to_comment(${1:Tree}) $2'), ('to_comment/2', 'to_comment(${1:Tree}, ${2:Prefix}) $3'), ('to_comment/3', 'to_comment(${1:Tree}, ${2:Prefix}, ${3:Printer}) $4'), ('variables/1', 'variables(${1:Tree}) $2')],
'erl_tidy': [('dir/0', 'dir() $1'), ('dir/1', 'dir(${1:Dir}) $2'), ('dir/2', 'dir(${1:Dir}, ${2:Opts}) $3'), ('file/1', 'file(${1:Name}) $2'), ('file/2', 'file(${1:Name}, ${2:Opts}) $3'), ('module/1', 'module(${1:Forms}) $2'), ('module/2', 'module(${1:Name}, ${2:Opts}) $3')],
'igor': [('create_stubs/2', 'create_stubs(${1:Stubs}, ${2:Opts}) $3'), ('merge/2', 'merge(${1:Name}, ${2:Files}) $3'), ('merge/3', 'merge(${1:Name}, ${2:Files}, ${3:Opts}) $4'), ('merge_files/3', 'merge_files(${1:Name}, ${2:Files}, ${3:Options}) $4'), ('merge_files/4', 'merge_files(${1:Name}, ${2:Trees}, ${3:Files}, ${4:Opts}) $5'), ('merge_sources/3', 'merge_sources(${1:Name}, ${2:Sources}, ${3:Opts}) $4'), ('parse_transform/2', 'parse_transform(${1:Forms}, ${2:Options}) $3'), ('rename/2', 'rename(${1:Files}, ${2:Renamings}) $3'), ('rename/3', 'rename(${1:Files}, ${2:Renamings}, ${3:Opts}) $4')],
'prettypr': [('above/2', 'above(${1:D1}, ${2:D2}) $3'), ('beside/2', 'beside(${1:D1}, ${2:D2}) $3'), ('best/3', 'best(${1:D}, ${2:W}, ${3:R}) $4'), ('break/1', 'break(${1:D}) $2'), ('empty/0', 'empty() $1'), ('floating/1', 'floating(${1:D}) $2'), ('floating/3', 'floating(${1:D}, ${2:H}, ${3:Param3}) $4'), ('follow/2', 'follow(${1:D1}, ${2:D2}) $3'), ('follow/3', 'follow(${1:D1}, ${2:D2}, ${3:Param3}) $4'), ('format/1', 'format(${1:D}) $2'), ('format/2', 'format(${1:D}, ${2:W}) $3'), ('format/3', 'format(${1:D}, ${2:W}, ${3:R}) $4'), ('nest/2', 'nest(${1:N}, ${2:D}) $3'), ('par/1', 'par(${1:S}) $2'), ('par/2', 'par(${1:S}, ${2:N}) $3'), ('sep/1', 'sep(${1:Ds}) $2'), ('text/1', 'text(${1:S}) $2'), ('null_text/1', 'null_text(${1:S}) $2'), ('text_par/1', 'text_par(${1:S}) $2'), ('text_par/2', 'text_par(${1:S}, ${2:Param2}) $3')],
'erl2html2': [('convert/2', 'convert(${1:File}, ${2:Dest}) $3'), ('convert/3', 'convert(${1:File}, ${2:Dest}, ${3:Header}) $4')],
'test_server': [('start/1', 'start(${1:Param1}) $2'), ('start/2', 'start(${1:ControllerHost}, ${2:ControllerPort}) $3')],
'test_server_ctrl': [('start/0', 'start() $1'), ('start/1', 'start(${1:Param}) $2'), ('start_link/1', 'start_link(${1:Param}) $2'), ('stop/0', 'stop() $1')],
'test_server_h': [('install/0', 'install() $1'), ('restore/0', 'restore() $1')],
'test_server_node': [('is_release_available/1', 'is_release_available(${1:Rel}) $2')],
'test_server_sup': [('timetrap/2', 'timetrap(${1:Timeout}, ${2:Pid}) $3'), ('timetrap/3', 'timetrap(${1:Timeout}, ${2:Scale}, ${3:Pid}) $4'), ('timetrap_cancel/1', 'timetrap_cancel(${1:Handle}) $2'), ('capture_get/1', 'capture_get(${1:Msgs}) $2'), ('messages_get/1', 'messages_get(${1:Msgs}) $2'), ('timecall/3', 'timecall(${1:M}, ${2:F}, ${3:A}) $4'), ('call_crash/5', 'call_crash(${1:Time}, ${2:Crash}, ${3:M}, ${4:F}, ${5:A}) $6'), ('app_test/2', 'app_test(${1:Application}, ${2:Mode}) $3'), ('check_new_crash_dumps/0', 'check_new_crash_dumps() $1'), ('cleanup_crash_dumps/0', 'cleanup_crash_dumps() $1'), ('crash_dump_dir/0', 'crash_dump_dir() $1'), ('tar_crash_dumps/0', 'tar_crash_dumps() $1'), ('get_username/0', 'get_username() $1'), ('get_os_family/0', 'get_os_family() $1'), ('hostatom/0', 'hostatom() $1'), ('hostatom/1', 'hostatom(${1:Node}) $2'), ('hoststr/0', 'hoststr() $1'), ('hoststr/1', 'hoststr(${1:Param1}) $2'), ('framework_call/2', 'framework_call(${1:Callback}, ${2:Args}) $3'), ('framework_call/3', 'framework_call(${1:Callback}, ${2:Func}, ${3:DefaultReturn}) $4'), ('framework_call/4', 'framework_call(${1:Callback}, ${2:Func}, ${3:Args}, ${4:DefaultReturn}) $5'), ('format_loc/1', 'format_loc(${1:Loc}) $2'), ('package_str/1', 'package_str(${1:Param1}) $2'), ('package_atom/1', 'package_atom(${1:Param1}) $2'), ('call_trace/1', 'call_trace(${1:TraceSpecFile}) $2')],
'vxworks_client': [('open/1', 'open(${1:Target}) $2'), ('close/1', 'close(${1:Client}) $2'), ('send_data/2', 'send_data(${1:Client}, ${2:Data}) $3'), ('send_data/3', 'send_data(${1:Client}, ${2:Data}, ${3:ExpectedReturn}) $4'), ('send_data_wait_for_close/2', 'send_data_wait_for_close(${1:Client}, ${2:Data}) $3'), ('reboot/1', 'reboot(${1:Target}) $2')],
'canvasbutton': [('create/1', 'create(${1:Canvas}) $2'), ('create/2', 'create(${1:Canvas}, ${2:OptionList}) $3'), ('read/2', 'read(${1:Canvasbutton}, ${2:Param2}) $3'), ('press/1', 'press(${1:Canvasbutton}) $2'), ('release/1', 'release(${1:Canvasbutton}) $2')],
'toolbar': [('start/0', 'start() $1'), ('version/0', 'version() $1')],
'toolbar_graphics': [('event/4', 'event(${1:LoopData}, ${2:Param2}, ${3:Param3}, ${4:Param4}) $5')],
'toolbar_lib': [('gs_contribs_dir/0', 'gs_contribs_dir() $1'), ('help_file/0', 'help_file() $1'), ('otp_file/0', 'otp_file() $1')],
'toolbar_toolconfig': [('start/0', 'start() $1')],
'cover': [('start/0', 'start() $1'), ('start/1', 'start(${1:Nodes}) $2'), ('compile/1', 'compile(${1:ModFile}) $2'), ('compile/2', 'compile(${1:ModFile}, ${2:Options}) $3'), ('compile_module/1', 'compile_module(${1:ModFile}) $2'), ('compile_module/2', 'compile_module(${1:ModFile}, ${2:Options}) $3'), ('compile_directory/0', 'compile_directory() $1'), ('compile_directory/1', 'compile_directory(${1:Dir}) $2'), ('compile_directory/2', 'compile_directory(${1:Dir}, ${2:Options}) $3'), ('compile_beam/1', 'compile_beam(${1:ModFile}) $2'), ('compile_beam_directory/0', 'compile_beam_directory() $1'), ('compile_beam_directory/1', 'compile_beam_directory(${1:Dir}) $2'), ('analyse/1', 'analyse(${1:Module}) $2'), ('analyse/2', 'analyse(${1:Module}, ${2:Analysis}) $3'), ('analyse/3', 'analyse(${1:Module}, ${2:Analysis}, ${3:Level}) $4'), ('analyze/1', 'analyze(${1:Module}) $2'), ('analyze/2', 'analyze(${1:Module}, ${2:Analysis}) $3'), ('analyze/3', 'analyze(${1:Module}, ${2:Analysis}, ${3:Level}) $4'), ('analyse_to_file/1', 'analyse_to_file(${1:Module}) $2'), ('analyse_to_file/2', 'analyse_to_file(${1:Module}, ${2:Options}) $3'), ('analyse_to_file/3', 'analyse_to_file(${1:Module}, ${2:OutFile}, ${3:Options}) $4'), ('analyze_to_file/1', 'analyze_to_file(${1:Module}) $2'), ('analyze_to_file/2', 'analyze_to_file(${1:Module}, ${2:OptOrOut}) $3'), ('analyze_to_file/3', 'analyze_to_file(${1:Module}, ${2:OutFile}, ${3:Options}) $4'), ('async_analyse_to_file/1', 'async_analyse_to_file(${1:Module}) $2'), ('async_analyse_to_file/2', 'async_analyse_to_file(${1:Module}, ${2:OutFileOrOpts}) $3'), ('async_analyse_to_file/3', 'async_analyse_to_file(${1:Module}, ${2:OutFile}, ${3:Options}) $4'), ('async_analyze_to_file/1', 'async_analyze_to_file(${1:Module}) $2'), ('async_analyze_to_file/2', 'async_analyze_to_file(${1:Module}, ${2:OutFileOrOpts}) $3'), ('async_analyze_to_file/3', 'async_analyze_to_file(${1:Module}, ${2:OutFile}, ${3:Options}) $4'), ('export/1', 'export(${1:File}) $2'), ('export/2', 'export(${1:File}, ${2:Module}) $3'), ('import/1', 'import(${1:File}) $2'), ('modules/0', 'modules() $1'), ('imported/0', 'imported() $1'), ('imported_modules/0', 'imported_modules() $1'), ('which_nodes/0', 'which_nodes() $1'), ('is_compiled/1', 'is_compiled(${1:Module}) $2'), ('reset/1', 'reset(${1:Module}) $2'), ('reset/0', 'reset() $1'), ('stop/0', 'stop() $1'), ('stop/1', 'stop(${1:Nodes}) $2')],
'cover_web': [('configData/0', 'configData() $1')],
'cprof': [('start/0', 'start() $1'), ('start/1', 'start(${1:M}) $2'), ('start/2', 'start(${1:M}, ${2:F}) $3'), ('start/3', 'start(${1:M}, ${2:F}, ${3:A}) $4'), ('stop/0', 'stop() $1'), ('stop/1', 'stop(${1:M}) $2'), ('stop/2', 'stop(${1:M}, ${2:F}) $3'), ('stop/3', 'stop(${1:M}, ${2:F}, ${3:A}) $4'), ('restart/0', 'restart() $1'), ('restart/1', 'restart(${1:M}) $2'), ('restart/2', 'restart(${1:M}, ${2:F}) $3'), ('restart/3', 'restart(${1:M}, ${2:F}, ${3:A}) $4'), ('pause/0', 'pause() $1'), ('pause/1', 'pause(${1:M}) $2'), ('pause/2', 'pause(${1:M}, ${2:F}) $3'), ('pause/3', 'pause(${1:M}, ${2:F}, ${3:A}) $4'), ('analyse/0', 'analyse() $1'), ('analyse/1', 'analyse(${1:Param1}) $2'), ('analyse/2', 'analyse(${1:M}, ${2:Param2}) $3'), ('analyze/0', 'analyze() $1'), ('analyze/1', 'analyze(${1:X}) $2'), ('analyze/2', 'analyze(${1:X}, ${2:Y}) $3')],
'eprof': [('start/0', 'start() $1'), ('stop/0', 'stop() $1'), ('dump/0', 'dump() $1'), ('start_profiling/1', 'start_profiling(${1:Rootset}) $2'), ('start_profiling/2', 'start_profiling(${1:Rootset}, ${2:Pattern}) $3'), ('profile/1', 'profile(${1:Param1}) $2'), ('profile/2', 'profile(${1:Pids}, ${2:Fun}) $3'), ('profile/3', 'profile(${1:Pids}, ${2:Fun}, ${3:Pattern}) $4'), ('profile/4', 'profile(${1:Pids}, ${2:M}, ${3:F}, ${4:A}) $5'), ('profile/5', 'profile(${1:Pids}, ${2:M}, ${3:F}, ${4:A}, ${5:Pattern}) $6'), ('stop_profiling/0', 'stop_profiling() $1'), ('analyze/0', 'analyze() $1'), ('analyze/1', 'analyze(${1:Param1}) $2'), ('analyze/2', 'analyze(${1:Type}, ${2:Param2}) $3'), ('log/1', 'log(${1:File}) $2')],
'fprof': [('apply/2', 'apply(${1:A}, ${2:B}) $3'), ('apply/3', 'apply(${1:M}, ${2:F}, ${3:C}) $4'), ('apply/4', 'apply(${1:M}, ${2:F}, ${3:C}, ${4:D}) $5'), ('start/0', 'start() $1'), ('stop/0', 'stop() $1'), ('stop/1', 'stop(${1:Reason}) $2'), ('trace/1', 'trace(${1:Options}) $2'), ('trace/2', 'trace(${1:Option}, ${2:Filename}) $3'), ('profile/0', 'profile() $1'), ('profile/1', 'profile(${1:Options}) $2'), ('profile/2', 'profile(${1:Option}, ${2:Value}) $3'), ('analyse/0', 'analyse() $1'), ('analyse/1', 'analyse(${1:Options}) $2'), ('analyse/2', 'analyse(${1:Option}, ${2:Value}) $3')],
'instrument': [('holes/1', 'holes(${1:Param1}) $2'), ('mem_limits/1', 'mem_limits(${1:Param1}) $2'), ('memory_data/0', 'memory_data() $1'), ('read_memory_data/1', 'read_memory_data(${1:File}) $2'), ('sort/1', 'sort(${1:Param1}) $2'), ('store_memory_data/1', 'store_memory_data(${1:File}) $2'), ('sum_blocks/1', 'sum_blocks(${1:Param1}) $2'), ('descr/1', 'descr(${1:Param1}) $2'), ('type_descr/2', 'type_descr(${1:Param1}, ${2:Param2}) $3'), ('allocator_descr/2', 'allocator_descr(${1:Param1}, ${2:Param2}) $3'), ('class_descr/2', 'class_descr(${1:Param1}, ${2:Param2}) $3'), ('type_no_range/1', 'type_no_range(${1:Param1}) $2'), ('block_header_size/1', 'block_header_size(${1:Param1}) $2'), ('store_memory_status/1', 'store_memory_status(${1:File}) $2'), ('read_memory_status/1', 'read_memory_status(${1:File}) $2'), ('memory_status/1', 'memory_status(${1:Type}) $2')],
'lcnt': [('init/1', 'init(${1:Param1}) $2'), ('handle_call/3', 'handle_call(${1:Command}, ${2:Param2}, ${3:State}) $4'), ('handle_cast/2', 'handle_cast(${1:Param1}, ${2:State}) $3'), ('handle_info/2', 'handle_info(${1:Param1}, ${2:State}) $3'), ('terminate/2', 'terminate(${1:Param1}, ${2:Param2}) $3'), ('code_change/3', 'code_change(${1:Param1}, ${2:State}, ${3:Param3}) $4')],
'make': [('all/0', 'all() $1'), ('all/1', 'all(${1:Options}) $2'), ('files/1', 'files(${1:Fs}) $2'), ('files/2', 'files(${1:Fs0}, ${2:Options}) $3')],
'tags': [('file/1', 'file(${1:Name}) $2'), ('file/2', 'file(${1:Name}, ${2:Options}) $3'), ('files/1', 'files(${1:Files}) $2'), ('files/2', 'files(${1:Files}, ${2:Options}) $3'), ('dir/1', 'dir(${1:Dir}) $2'), ('dir/2', 'dir(${1:Dir}, ${2:Options}) $3'), ('dirs/1', 'dirs(${1:Dirs}) $2'), ('dirs/2', 'dirs(${1:Dirs}, ${2:Options}) $3'), ('subdir/1', 'subdir(${1:Dir}) $2'), ('subdir/2', 'subdir(${1:Dir}, ${2:Options}) $3'), ('subdirs/1', 'subdirs(${1:Dirs}) $2'), ('subdirs/2', 'subdirs(${1:Dirs}, ${2:Options}) $3'), ('root/0', 'root() $1'), ('root/1', 'root(${1:Options}) $2')],
'xref': [('start/1', 'start(${1:Param1}) $2'), ('start/2', 'start(${1:Name}, ${2:Opt}) $3'), ('stop/1', 'stop(${1:Name}) $2')],
'xref_base': [('new/0', 'new() $1'), ('new/1', 'new(${1:Options}) $2'), ('delete/1', 'delete(${1:State}) $2'), ('add_directory/2', 'add_directory(${1:State}, ${2:Dir}) $3'), ('add_directory/3', 'add_directory(${1:State}, ${2:Dir}, ${3:Options}) $4'), ('add_module/2', 'add_module(${1:State}, ${2:File}) $3'), ('add_module/3', 'add_module(${1:State}, ${2:File}, ${3:Options}) $4'), ('add_application/2', 'add_application(${1:State}, ${2:AppDir}) $3'), ('add_application/3', 'add_application(${1:State}, ${2:AppDir}, ${3:Options}) $4'), ('replace_module/3', 'replace_module(${1:State}, ${2:Module}, ${3:File}) $4'), ('replace_module/4', 'replace_module(${1:State}, ${2:Module}, ${3:File}, ${4:Options}) $5'), ('replace_application/3', 'replace_application(${1:State}, ${2:Appl}, ${3:Dir}) $4'), ('replace_application/4', 'replace_application(${1:State}, ${2:Appl}, ${3:Dir}, ${4:Options}) $5'), ('remove_module/2', 'remove_module(${1:State}, ${2:Module}) $3'), ('remove_application/2', 'remove_application(${1:State}, ${2:AppName}) $3'), ('remove_release/2', 'remove_release(${1:State}, ${2:RelName}) $3'), ('add_release/2', 'add_release(${1:State}, ${2:RelDir}) $3'), ('add_release/3', 'add_release(${1:State}, ${2:RelDir}, ${3:Options}) $4'), ('get_library_path/1', 'get_library_path(${1:State}) $2'), ('set_library_path/2', 'set_library_path(${1:State}, ${2:Path}) $3'), ('set_library_path/3', 'set_library_path(${1:State}, ${2:Path}, ${3:Options}) $4'), ('set_up/1', 'set_up(${1:State}) $2'), ('set_up/2', 'set_up(${1:State}, ${2:Options}) $3'), ('q/2', 'q(${1:S}, ${2:Q}) $3'), ('q/3', 'q(${1:S}, ${2:Q}, ${3:Options}) $4'), ('info/1', 'info(${1:State}) $2'), ('info/2', 'info(${1:State}, ${2:What}) $3'), ('info/3', 'info(${1:State}, ${2:What}, ${3:Qual}) $4'), ('update/1', 'update(${1:State}) $2'), ('update/2', 'update(${1:State}, ${2:Options}) $3'), ('forget/1', 'forget(${1:State}) $2'), ('forget/2', 'forget(${1:State}, ${2:Variables}) $3'), ('variables/1', 'variables(${1:State}) $2'), ('variables/2', 'variables(${1:State}, ${2:Options}) $3'), ('analyze/2', 'analyze(${1:State}, ${2:Analysis}) $3'), ('analyze/3', 'analyze(${1:State}, ${2:Analysis}, ${3:Options}) $4'), ('analysis/1', 'analysis(${1:Analysis}) $2'), ('get_default/2', 'get_default(${1:State}, ${2:Option}) $3'), ('set_default/3', 'set_default(${1:State}, ${2:Option}, ${3:Value}) $4'), ('get_default/1', 'get_default(${1:State}) $2'), ('set_default/2', 'set_default(${1:State}, ${2:Options}) $3')],
'xref_compiler': [('compile/2', 'compile(${1:Chars}, ${2:Table}) $3')],
'xref_parser': [('parse/1', 'parse(${1:Tokens}) $2'), ('parse_and_scan/1', 'parse_and_scan(${1:Param1}) $2'), ('format_error/1', 'format_error(${1:Message}) $2')],
'xref_reader': [('module/5', 'module(${1:Module}, ${2:Forms}, ${3:CollectBuiltins}, ${4:X}, ${5:DF}) $6')],
'xref_scanner': [('scan/1', 'scan(${1:Chars}) $2')],
'xref_utils': [('xset/2', 'xset(${1:L}, ${2:T}) $3')],
'tv': [('start/0', 'start() $1'), ('start_browser/6', 'start_browser(${1:Node}, ${2:LocalNode}, ${3:TableId}, ${4:KindOfTable}, ${5:TableName}, ${6:ErrMsgMode}) $7')],
'tv_comm_func': [('max/2', 'max(${1:Param1}, ${2:Y}) $3'), ('min/2', 'min(${1:Param1}, ${2:Y}) $3')],
'tv_db': [('dbs/2', 'dbs(${1:Master}, ${2:ErrMsgMode}) $3')],
'tv_db_search': [('create_window/1', 'create_window(${1:Param1}) $2'), ('resize_window/1', 'resize_window(${1:Param1}) $2'), ('reset_window/1', 'reset_window(${1:Param1}) $2'), ('destroy_window/1', 'destroy_window(${1:Param1}) $2'), ('mark_busy/1', 'mark_busy(${1:Param1}) $2'), ('mark_nonbusy/1', 'mark_nonbusy(${1:Param1}) $2'), ('get_input_and_search/3', 'get_input_and_search(${1:DbList}, ${2:IsRegExp}, ${3:ListAsStr}) $4'), ('update_search/4', 'update_search(${1:Param1}, ${2:DbList}, ${3:Param3}, ${4:ListAsStr}) $5'), ('string_to_term/1', 'string_to_term(${1:Str}) $2')],
'tv_db_sort': [('mergesort/3', 'mergesort(${1:KeyNo}, ${2:X}, ${3:ReverseOrder}) $4'), ('merge/4', 'merge(${1:KeyNo}, ${2:L1}, ${3:L2}, ${4:Reverse}) $5'), ('get_compare_value/2', 'get_compare_value(${1:KeyNo}, ${2:Param2}) $3')],
'tv_ets_rpc': [('all/2', 'all(${1:Node}, ${2:Param2}) $3'), ('info/4', 'info(${1:Node}, ${2:Param2}, ${3:TabId}, ${4:What}) $5'), ('new/4', 'new(${1:Node}, ${2:Param2}, ${3:TabName}, ${4:Options}) $5'), ('tab2list/3', 'tab2list(${1:Node}, ${2:Param2}, ${3:TabId}) $4'), ('insert/4', 'insert(${1:Node}, ${2:Param2}, ${3:TabId}, ${4:Object}) $5'), ('lookup/4', 'lookup(${1:Node}, ${2:Param2}, ${3:TabId}, ${4:Key}) $5'), ('delete/4', 'delete(${1:Node}, ${2:Param2}, ${3:TabId}, ${4:Key}) $5')],
'tv_etsread': [('etsread/2', 'etsread(${1:MasterPid}, ${2:ErrorMsgMode}) $3')],
'tv_info': [('info/6', 'info(${1:Master}, ${2:Node}, ${3:LocalNode}, ${4:TabId}, ${5:TabType}, ${6:ErrMsgMode}) $7')],
'tv_io_lib': [('format/2', 'format(${1:Format}, ${2:Args}) $3')],
'tv_io_lib_format': [('fwrite/2', 'fwrite(${1:Format}, ${2:ArgList}) $3'), ('fwrite_g/1', 'fwrite_g(${1:Fl}) $2'), ('indentation/2', 'indentation(${1:Param1}, ${2:Indentation}) $3')],
'tv_io_lib_pretty': [('pretty_print/4', 'pretty_print(${1:Term}, ${2:Column}, ${3:LineLength}, ${4:Depth}) $5')],
'tv_ip': [('ip/1', 'ip(${1:Param1}) $2')],
'tv_main': [('start/0', 'start() $1'), ('init/0', 'init() $1')],
'tv_mnesia_rpc': [('system_info/3', 'system_info(${1:Node}, ${2:Param2}, ${3:Key}) $4'), ('table_info/4', 'table_info(${1:Node}, ${2:Param2}, ${3:Tab}, ${4:Item}) $5'), ('transaction/3', 'transaction(${1:Node}, ${2:Param2}, ${3:Fun}) $4')],
'tv_new_table': [('start/2', 'start(${1:Node}, ${2:ErrMsgMode}) $3'), ('init/3', 'init(${1:Node}, ${2:ErrMsgMode}, ${3:MPid}) $4')],
'tv_nodewin': [('start/2', 'start(${1:CurrNode}, ${2:ErrMsgMode}) $3'), ('init/3', 'init(${1:Pid}, ${2:CurrNode}, ${3:ErrMsgMode}) $4')],
'tv_pb': [('pb/1', 'pb(${1:ParentPid}) $2')],
'tv_pb_funcs': [('init_btns/10', 'init_btns(${1:ParentId}, ${2:Ypos}, ${3:HbtnH}, ${4:VbtnW}, ${5:ResbtnW}, ${6:FirstColShown}, ${7:ColsShown}, ${8:NofRows}, ${9:RowH}, ${10:ProcVars}) $11'), ('update_hbtns/3', 'update_hbtns(${1:FirstColShown}, ${2:ColsShown}, ${3:ProcVars}) $4'), ('update_vbtns/5', 'update_vbtns(${1:NofRowsShown}, ${2:FirstRowShown}, ${3:Colors}, ${4:BlinkEnabled}, ${5:ProcVars}) $6'), ('update_keys/2', 'update_keys(${1:KeyList}, ${2:ProcVars}) $3'), ('set_new_sort_col/2', 'set_new_sort_col(${1:SortCol}, ${2:ProcVars}) $3')],
'tv_pc': [('pc/7', 'pc(${1:Master}, ${2:Node}, ${3:LocalNode}, ${4:TableId}, ${5:KindOfTable}, ${6:TableName}, ${7:ErrMsgMode}) $8'), ('send_data/2', 'send_data(${1:Msg}, ${2:ProcVars}) $3')],
'tv_pc_graph_ctrl': [('create_menu/4', 'create_menu(${1:PwPid}, ${2:MenuTitle}, ${3:TitleAccPos}, ${4:MenuList}) $5'), ('win_conf/2', 'win_conf(${1:Msg}, ${2:ProcVars}) $3')],
'tv_pc_menu_handling': [('create_menus/1', 'create_menus(${1:PwPid}) $2'), ('exit_button/1', 'exit_button(${1:Param1}) $2'), ('insert_object/1', 'insert_object(${1:ProcVars}) $2'), ('delete_object/1', 'delete_object(${1:ProcVars}) $2'), ('search_object/1', 'search_object(${1:ProcVars}) $2'), ('open_table/7', 'open_table(${1:CurrNode}, ${2:LocalNode}, ${3:TableId}, ${4:TableType}, ${5:TableName}, ${6:Raise}, ${7:ProcVars}) $8'), ('set_poll_interval/1', 'set_poll_interval(${1:ProcVars}) $2'), ('poll_table/1', 'poll_table(${1:ProcVars}) $2'), ('sort_rising_order/1', 'sort_rising_order(${1:ProcVars}) $2'), ('sort_falling_order/1', 'sort_falling_order(${1:ProcVars}) $2'), ('no_sorting/1', 'no_sorting(${1:ProcVars}) $2'), ('lists_as_strings/1', 'lists_as_strings(${1:ProcVars}) $2'), ('lists_as_lists/1', 'lists_as_lists(${1:ProcVars}) $2'), ('table_info/1', 'table_info(${1:ProcVars}) $2'), ('help_button/1', 'help_button(${1:ProcVars}) $2'), ('otp_help_button/1', 'otp_help_button(${1:ProcVars}) $2'), ('get_window_title/4', 'get_window_title(${1:Param1}, ${2:Node}, ${3:TableId}, ${4:TableName}) $5')],
'tv_pd': [('pd/2', 'pd(${1:Master}, ${2:ErrMsgMode}) $3')],
'tv_pd_display': [('init_display/4', 'init_display(${1:WindowId}, ${2:WindowWidth}, ${3:WindowHeight}, ${4:ProcVars}) $5'), ('display_data/8', 'display_data(${1:Pos}, ${2:Range}, ${3:Param3}, ${4:List}, ${5:KeyList}, ${6:MaxElemSize}, ${7:MarkedRowData}, ${8:ProcVars}) $9'), ('resize_display/3', 'resize_display(${1:NewWinW}, ${2:NewWinH}, ${3:ProcVars}) $4'), ('resize_column/4', 'resize_column(${1:RealCol}, ${2:VirtualCol}, ${3:Xdiff}, ${4:ProcVars}) $5'), ('scroll_horizontally/2', 'scroll_horizontally(${1:MouseBtn}, ${2:ProcVars}) $3'), ('scroll_vertically/2', 'scroll_vertically(${1:MouseBtn}, ${2:ProcVars}) $3'), ('perform_horizontal_scroll/2', 'perform_horizontal_scroll(${1:NewScalePos}, ${2:ProcVars}) $3'), ('perform_vertical_scroll/2', 'perform_vertical_scroll(${1:NewScalePos}, ${2:ProcVars}) $3'), ('marked_cell/5', 'marked_cell(${1:Param1}, ${2:VirtualCol}, ${3:RealRow}, ${4:VirtualRow}, ${5:ProcVars}) $6'), ('update_toolbar_label/5', 'update_toolbar_label(${1:Param1}, ${2:ToolP}, ${3:VirtualRowNo}, ${4:VirtualColNo}, ${5:Writable}) $6'), ('update_toolbar_editor/2', 'update_toolbar_editor(${1:EdId}, ${2:Param2}) $3'), ('get_data_element/4', 'get_data_element(${1:Param1}, ${2:DataList}, ${3:RowNo}, ${4:ColNo}) $5'), ('hide_toolbar_editor/1', 'hide_toolbar_editor(${1:ProcVars}) $2'), ('show_toolbar_editor/1', 'show_toolbar_editor(${1:ProcVars}) $2')],
'tv_pd_frames': [('create_display_frames/4', 'create_display_frames(${1:WindowId}, ${2:WindowWidth}, ${3:WindowHeight}, ${4:FrameP}) $5'), ('resize_display_frames/3', 'resize_display_frames(${1:NewW}, ${2:NewH}, ${3:FrameP}) $4')],
'tv_pd_scale': [('init_scale/2', 'init_scale(${1:FrameP}, ${2:ScaleP}) $3'), ('resize_scale/2', 'resize_scale(${1:FrameP}, ${2:ScaleP}) $3'), ('set_scale_range/3', 'set_scale_range(${1:Param1}, ${2:Range}, ${3:ScaleP}) $4'), ('set_scale_pos/3', 'set_scale_pos(${1:Param1}, ${2:NewPos}, ${3:ScaleP}) $4')],
'tv_pg': [('pg/1', 'pg(${1:ParentPid}) $2')],
'tv_pg_gridfcns': [('init_grid/8', 'init_grid(${1:GridParentId}, ${2:GridWidth}, ${3:GridHeight}, ${4:GridXpos}, ${5:GridYpos}, ${6:NofRows}, ${7:RowHeight}, ${8:ProcVars}) $9'), ('resize_grid/3', 'resize_grid(${1:NewWidth}, ${2:NewHeight}, ${3:ProcVars}) $4'), ('resize_grid_column/4', 'resize_grid_column(${1:RealCol}, ${2:VirtualCol}, ${3:Xdiff}, ${4:ProcVars}) $5'), ('update_grid_data/3', 'update_grid_data(${1:Data}, ${2:FirstRowShown}, ${3:ProcVars}) $4'), ('scroll_grid_horizontally/2', 'scroll_grid_horizontally(${1:NewFirstColShown}, ${2:ProcVars}) $3'), ('mark_cell_and_notify/4', 'mark_cell_and_notify(${1:CellId}, ${2:RealCol}, ${3:RealRow}, ${4:ProcVars}) $5'), ('remove_marks/1', 'remove_marks(${1:ProcVars}) $2'), ('mark_col/2', 'mark_col(${1:VirtualCol}, ${2:ProcVars}) $3'), ('mark_row/2', 'mark_row(${1:VirtualRow}, ${2:ProcVars}) $3'), ('handle_list_info/2', 'handle_list_info(${1:ListAsStr}, ${2:ProcVars}) $3')],
'tv_poll_dialog': [('start/1', 'start(${1:Pos}) $2'), ('init/2', 'init(${1:Pid}, ${2:Pos}) $3')],
'tv_pw': [('pw/1', 'pw(${1:Master}) $2')],
'tv_pw_window': [('create_window/2', 'create_window(${1:Msg}, ${2:WinP}) $3'), ('resize_window/3', 'resize_window(${1:WindowId}, ${2:NewWidth}, ${3:NewHeight}) $4'), ('create_menubar/2', 'create_menubar(${1:WinP}, ${2:MenuP}) $3'), ('create_menu/2', 'create_menu(${1:Msg}, ${2:ProcVars}) $3')],
'tv_rec_edit': [('start/5', 'start(${1:TableType}, ${2:TableName}, ${3:AttributeList}, ${4:ListsAsStr}, ${5:ErrMsgMode}) $6'), ('start/6', 'start(${1:TableType}, ${2:TableName}, ${3:AttributeList}, ${4:AttributeValues}, ${5:ListsAsStr}, ${6:ErrMsgMode}) $7'), ('init/8', 'init(${1:TableType}, ${2:TableName}, ${3:AttributeList}, ${4:AttributeValues}, ${5:ListsAsStr}, ${6:ErrMsgMode}, ${7:MasterPid}, ${8:Insert}) $9')],
'tv_table_owner': [('create/5', 'create(${1:Param1}, ${2:Node}, ${3:Param3}, ${4:TabName}, ${5:Options}) $6')],
'tv_utils': [('notify/3', 'notify(${1:S}, ${2:Title}, ${3:Strings}) $4')],
'typer': [('start/0', 'start() $1')],
'webtool': [('start/0', 'start() $1'), ('start/2', 'start(${1:Path}, ${2:Data}) $3'), ('stop/0', 'stop() $1')],
'webtool_sup': [('start_link/0', 'start_link() $1'), ('stop/1', 'stop(${1:Pid}) $2')],
'wx': [('parent_class/1', 'parent_class(${1:Param1}) $2'), ('new/0', 'new() $1'), ('new/1', 'new(${1:Param1}) $2'), ('destroy/0', 'destroy() $1'), ('get_env/0', 'get_env() $1'), ('set_env/1', 'set_env(${1:Param1}) $2'), ('debug/1', 'debug(${1:Param1}) $2'), ('batch/1', 'batch(${1:Fun}) $2'), ('foreach/2', 'foreach(${1:Fun}, ${2:List}) $3'), ('map/2', 'map(${1:Fun}, ${2:List}) $3'), ('foldl/3', 'foldl(${1:Fun}, ${2:Acc}, ${3:List}) $4'), ('foldr/3', 'foldr(${1:Fun}, ${2:Acc}, ${3:List}) $4'), ('getObjectType/1', 'getObjectType(${1:Param1}) $2'), ('typeCast/2', 'typeCast(${1:Param1}, ${2:Param2}) $3'), ('null/0', 'null() $1'), ('is_null/1', 'is_null(${1:Param1}) $2')],
'wx_object': [('start/3', 'start(${1:Mod}, ${2:Args}, ${3:Options}) $4'), ('start/4', 'start(${1:Name}, ${2:Mod}, ${3:Args}, ${4:Options}) $5'), ('start_link/3', 'start_link(${1:Mod}, ${2:Args}, ${3:Options}) $4'), ('start_link/4', 'start_link(${1:Name}, ${2:Mod}, ${3:Args}, ${4:Options}) $5'), ('call/2', 'call(${1:Name}, ${2:State}) $3'), ('call/3', 'call(${1:Name}, ${2:Request}, ${3:State}) $4'), ('cast/2', 'cast(${1:Name}, ${2:Param2}) $3'), ('reply/2', 'reply(${1:Reply}, ${2:Reply}) $3'), ('get_pid/1', 'get_pid(${1:Param1}) $2')],
'wxe_master': [('start/0', 'start() $1'), ('init_port/0', 'init_port() $1'), ('init_opengl/0', 'init_opengl() $1')],
'wxe_server': [('start/0', 'start() $1'), ('stop/0', 'stop() $1'), ('register_me/1', 'register_me(${1:Pid}) $2'), ('set_debug/2', 'set_debug(${1:Pid}, ${2:Level}) $3'), ('invoke_callback/1', 'invoke_callback(${1:Fun}) $2')],
'wxe_util': [('call/2', 'call(${1:Op}, ${2:Args}) $3'), ('cast/2', 'cast(${1:Op}, ${2:Args}) $3'), ('construct/2', 'construct(${1:Op}, ${2:Args}) $3'), ('destroy/2', 'destroy(${1:Op}, ${2:Param2}) $3'), ('register_pid/1', 'register_pid(${1:Param1}) $2'), ('connect_cb/2', 'connect_cb(${1:Object}, ${2:EvData}) $3'), ('disconnect_cb/2', 'disconnect_cb(${1:Object}, ${2:EvData}) $3'), ('send_bin/1', 'send_bin(${1:Param1}) $2'), ('get_cbId/1', 'get_cbId(${1:Fun}) $2'), ('get_const/1', 'get_const(${1:Id}) $2'), ('colour_bin/1', 'colour_bin(${1:Param1}) $2'), ('datetime_bin/1', 'datetime_bin(${1:Param1}) $2'), ('to_bool/1', 'to_bool(${1:Param1}) $2'), ('from_bool/1', 'from_bool(${1:Param1}) $2')],
'xmerl': [('export/2', 'export(${1:Content}, ${2:Callback}) $3'), ('export/3', 'export(${1:Content}, ${2:Callback}, ${3:RootAttributes}) $4'), ('export_content/2', 'export_content(${1:Content}, ${2:Callbacks}) $3'), ('export_element/2', 'export_element(${1:E}, ${2:CBs}) $3'), ('export_element/3', 'export_element(${1:E}, ${2:CallbackModule}, ${3:CallbackState}) $4'), ('export_simple/2', 'export_simple(${1:Content}, ${2:Callback}) $3'), ('export_simple/3', 'export_simple(${1:Content}, ${2:Callback}, ${3:RootAttributes}) $4'), ('export_simple_element/2', 'export_simple_element(${1:Content}, ${2:Param2}) $3'), ('export_simple_content/2', 'export_simple_content(${1:Content}, ${2:Param2}) $3'), ('callbacks/1', 'callbacks(${1:Module}) $2')],
'xmerl_b64Bin': [('parse/1', 'parse(${1:Tokens}) $2'), ('parse_and_scan/1', 'parse_and_scan(${1:Param1}) $2'), ('format_error/1', 'format_error(${1:Message}) $2')],
'xmerl_b64Bin_scan': [('scan/1', 'scan(${1:Str}) $2')],
'xmerl_eventp': [('stream/2', 'stream(${1:Fname}, ${2:Options}) $3'), ('stream_sax/4', 'stream_sax(${1:Fname}, ${2:CallBackModule}, ${3:UserState}, ${4:Options}) $5'), ('file_sax/4', 'file_sax(${1:Fname}, ${2:CallBack}, ${3:UserState}, ${4:Options}) $5'), ('string_sax/4', 'string_sax(${1:String}, ${2:CallBack}, ${3:UserState}, ${4:Options}) $5')],
'xmerl_html': [("'#xml-inheritance#'/0", "'#xml-inheritance#'() $1")],
'xmerl_lib': [('normalize_content/1', 'normalize_content(${1:Content}) $2'), ('normalize_content/3', 'normalize_content(${1:Content}, ${2:Pos}, ${3:Parents}) $4'), ('expand_content/1', 'expand_content(${1:Content}) $2'), ('expand_content/3', 'expand_content(${1:Content}, ${2:Pos}, ${3:Parents}) $4'), ('normalize_element/1', 'normalize_element(${1:Element}) $2'), ('normalize_element/3', 'normalize_element(${1:Element}, ${2:Pos}, ${3:Parents}) $4'), ('expand_element/1', 'expand_element(${1:Element}) $2'), ('expand_element/3', 'expand_element(${1:Element}, ${2:Pos}, ${3:Parents}) $4'), ('expand_attributes/1', 'expand_attributes(${1:Attrs}) $2'), ('expand_attributes/3', 'expand_attributes(${1:Param1}, ${2:Pos}, ${3:Parents}) $4'), ('export_text/1', 'export_text(${1:T}) $2'), ('flatten_text/1', 'flatten_text(${1:T}) $2'), ('export_attribute/1', 'export_attribute(${1:S}) $2'), ('markup/2', 'markup(${1:Tag}, ${2:Data}) $3'), ('markup/3', 'markup(${1:Tag}, ${2:Attrs}, ${3:Data}) $4'), ('simplify_element/1', 'simplify_element(${1:Param1}) $2'), ('simplify_content/1', 'simplify_content(${1:Param1}) $2'), ('start_tag/1', 'start_tag(${1:TagStr}) $2'), ('start_tag/2', 'start_tag(${1:Tag}, ${2:Attrs}) $3'), ('end_tag/1', 'end_tag(${1:TagStr}) $2'), ('empty_tag/1', 'empty_tag(${1:Tag}) $2'), ('empty_tag/2', 'empty_tag(${1:Tag}, ${2:Attrs}) $3'), ('is_empty_data/1', 'is_empty_data(${1:Param1}) $2'), ('find_attribute/2', 'find_attribute(${1:Name}, ${2:Attrs}) $3'), ('remove_whitespace/1', 'remove_whitespace(${1:Param1}) $2'), ('to_lower/1', 'to_lower(${1:Str}) $2')],
'xmerl_otpsgml': [("'#xml-inheritance#'/0", "'#xml-inheritance#'() $1")],
'xmerl_regexp': [('sh_to_awk/1', 'sh_to_awk(${1:Sh}) $2'), ('parse/1', 'parse(${1:RegExp}) $2'), ('format_error/1', 'format_error(${1:Error}) $2'), ('match/2', 'match(${1:String}, ${2:RegExp}) $3'), ('first_match/2', 'first_match(${1:String}, ${2:RegExp}) $3'), ('matches/2', 'matches(${1:String}, ${2:RegExp}) $3')],
'xmerl_sax_old_dom': [('initial_state/0', 'initial_state() $1'), ('get_dom/1', 'get_dom(${1:State}) $2'), ('event/3', 'event(${1:Event}, ${2:LineNo}, ${3:State}) $4')],
'xmerl_sax_parser': [('file/2', 'file(${1:Filename}, ${2:Options}) $3'), ('stream/2', 'stream(${1:Xml}, ${2:Options}) $3')],
'xmerl_sax_parser_latin1': [('parse/2', 'parse(${1:Xml}, ${2:State}) $3'), ('parse_dtd/2', 'parse_dtd(${1:Xml}, ${2:State}) $3'), ('is_name_char/1', 'is_name_char(${1:C}) $2'), ('is_name_start/1', 'is_name_start(${1:Char}) $2')],
'xmerl_sax_parser_list': [('parse/2', 'parse(${1:Xml}, ${2:State}) $3'), ('parse_dtd/2', 'parse_dtd(${1:Xml}, ${2:State}) $3'), ('is_name_char/1', 'is_name_char(${1:C}) $2'), ('is_name_start/1', 'is_name_start(${1:Char}) $2')],
'xmerl_sax_parser_utf16be': [('parse/2', 'parse(${1:Xml}, ${2:State}) $3'), ('parse_dtd/2', 'parse_dtd(${1:Xml}, ${2:State}) $3'), ('is_name_char/1', 'is_name_char(${1:C}) $2'), ('is_name_start/1', 'is_name_start(${1:Char}) $2')],
'xmerl_sax_parser_utf16le': [('parse/2', 'parse(${1:Xml}, ${2:State}) $3'), ('parse_dtd/2', 'parse_dtd(${1:Xml}, ${2:State}) $3'), ('is_name_char/1', 'is_name_char(${1:C}) $2'), ('is_name_start/1', 'is_name_start(${1:Char}) $2')],
'xmerl_sax_parser_utf8': [('parse/2', 'parse(${1:Xml}, ${2:State}) $3'), ('parse_dtd/2', 'parse_dtd(${1:Xml}, ${2:State}) $3'), ('is_name_char/1', 'is_name_char(${1:C}) $2'), ('is_name_start/1', 'is_name_start(${1:Char}) $2')],
'xmerl_sax_simple_dom': [('initial_state/0', 'initial_state() $1'), ('get_dom/1', 'get_dom(${1:State}) $2'), ('event/3', 'event(${1:Event}, ${2:LineNo}, ${3:State}) $4')],
'xmerl_scan': [('string/1', 'string(${1:Str}) $2'), ('string/2', 'string(${1:Str}, ${2:Options}) $3'), ('file/1', 'file(${1:F}) $2'), ('file/2', 'file(${1:F}, ${2:Options}) $3')],
'xmerl_sgml': [("'#xml-inheritance#'/0", "'#xml-inheritance#'() $1")],
'xmerl_simple': [('file/2', 'file(${1:Fname}, ${2:Opts}) $3'), ('string/2', 'string(${1:Str}, ${2:Opts}) $3')],
'xmerl_text': [("'#xml-inheritance#'/0", "'#xml-inheritance#'() $1")],
'xmerl_ucs': [('to_unicode/2', 'to_unicode(${1:Input}, ${2:Charset}) $3')],
'xmerl_uri': [('parse/1', 'parse(${1:URI}) $2'), ('resolve/2', 'resolve(${1:Param1}, ${2:Param2}) $3')],
'xmerl_validate': [('validate/2', 'validate(${1:Param1}, ${2:XML}) $3')],
'xmerl_xlate': [('file/3', 'file(${1:F}, ${2:Title}, ${3:Callback}) $4'), ('string/3', 'string(${1:Str}, ${2:Title}, ${3:Callback}) $4')],
'xmerl_xml': [("'#xml-inheritance#'/0", "'#xml-inheritance#'() $1")],
'xmerl_xpath': [('string/2', 'string(${1:Str}, ${2:Doc}) $3'), ('string/3', 'string(${1:Str}, ${2:Doc}, ${3:Options}) $4'), ('string/5', 'string(${1:Str}, ${2:Node}, ${3:Parents}, ${4:Doc}, ${5:Options}) $6')],
'xmerl_xpath_lib': [('eval/3', 'eval(${1:Param1}, ${2:PrimExpr}, ${3:C}) $4')],
'xmerl_xpath_parse': [('parse/1', 'parse(${1:Tokens}) $2'), ('parse_and_scan/1', 'parse_and_scan(${1:Param1}) $2'), ('format_error/1', 'format_error(${1:Message}) $2')],
'xmerl_xpath_pred': [('eval/2', 'eval(${1:Expr}, ${2:Param2}) $3')],
'xmerl_xpath_scan': [('tokens/1', 'tokens(${1:Str}) $2')],
'xmerl_xs': [('xslapply/2', 'xslapply(${1:Function}, ${2:Param2}) $3'), ('value_of/1', 'value_of(${1:E}) $2'), ('select/2', 'select(${1:Str}, ${2:E}) $3'), ('built_in_rules/2', 'built_in_rules(${1:Fun}, ${2:E}) $3')],
'xmerl_xsd': [('validate/2', 'validate(${1:Element}, ${2:State}) $3'), ('validate/3', 'validate(${1:Element}, ${2:State}, ${3:Options}) $4'), ('process_validate/2', 'process_validate(${1:Schema}, ${2:Element}) $3'), ('process_validate/3', 'process_validate(${1:Schema}, ${2:Element}, ${3:Options}) $4'), ('process_schema/1', 'process_schema(${1:Schema}) $2'), ('process_schema/2', 'process_schema(${1:Schema}, ${2:Options}) $3'), ('process_schemas/1', 'process_schemas(${1:Schemas}) $2'), ('process_schemas/2', 'process_schemas(${1:Schemas}, ${2:Options}) $3'), ('state2file/1', 'state2file(${1:State}) $2'), ('state2file/2', 'state2file(${1:State}, ${2:FileName}) $3'), ('file2state/1', 'file2state(${1:FileName}) $2'), ('format_error/1', 'format_error(${1:Errors}) $2')],
'xmerl_xsd_type': [('check_simpleType/3', 'check_simpleType(${1:Name}, ${2:Value}, ${3:S}) $4'), ('facet_fun/2', 'facet_fun(${1:Type}, ${2:F}) $3'), ('compare_floats/2', 'compare_floats(${1:F1}, ${2:F1}) $3'), ('replace_ws/2', 'replace_ws(${1:Param1}, ${2:Acc}) $3'), ('collapse_ws/1', 'collapse_ws(${1:Val}) $2')]
}